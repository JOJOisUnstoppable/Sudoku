<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Diagnostics</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.DisableDefaultConstructorAttribute">
            <summary>
            To disable using default constructor in structs.
            </summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.DisableDefaultConstructorAttribute.IsError">
            <summary>
            Specifies an action when calling the default constructor
            in structs. If the value is <see langword="true"/>, it will report
            a compiling error; otherwise, a warning.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.DiscardAttribute">
            <summary>
            To mark on a parameter, which means the parameter is always a discard.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.ObsoleteAssemblyAttribute">
            <summary>
            To mark on an assembly, it means that the whole assembly is already obsolete.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.OnAddingAttribute">
            <summary>
            To mark on the method, it means that the method is used for add elements
            in this current collection.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.OnDeconstructionAttribute">
            <summary>
            It means the method marked this attribute is only used for deconstruction
            to <see cref="T:System.ValueTuple"/>s.
            </summary>
            <seealso cref="T:System.ValueTuple"/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.ParameterizedObjectAttribute">
            <summary>
            Represents the type is only used for parameterized object.
            You may regard the type as anonymous inner classes (or structs).
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.PatternAttribute">
            <summary>
            It means the parameter marked this attribute is a regular expressino pattern.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.SyntaxContractAttribute">
            <summary>
            <para>
            Marks members which are only used for completing syntax-based
            contract.
            </para>
            <para>
            For example, C# will allow users to use 'Collection Initialization'
            syntax to initialize any collections if the target collection object
            is confirmed that it has <c>Add</c> method to add new elements.
            <see cref="T:Sudoku.Diagnostics.CodeAnalysis.SyntaxContractAttribute"/> suggests you that you should add
            <see cref="T:Sudoku.Diagnostics.CodeAnalysis.OnAddingAttribute"/> on <c>Add</c> method.
            </para>
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeCounter">
            <summary>
            Encapsulates a code line counter.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeCounter._root">
            <summary>
            The root directory of the project.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeCounter._pattern">
            <summary>
            The filter pattern.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeCounter._fileList">
            <summary>
            All file paths at this root directory.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeCounter.#ctor(System.String)">
            <summary>
            Initializes an instance with the specified root directory.
            </summary>
            <param name="root">The directory.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeCounter.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with the specified root directory and the filter pattern.
            </summary>
            <param name="root">The root directory.</param>
            <param name="filterPattern">The filter pattern.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeCounter.CountCodeLines">
            <summary>
            Count on code lines in all files in the specified root directory.
            </summary>
            <returns>The number of lines.</returns>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeCounter.SatisfyPattern(System.String,System.String)">
            <summary>
            Check the string is whether satisfied the specified pattern strictly.
            </summary>
            <param name="str">The string to check.</param>
            <param name="pattern">The regular expression pattern.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeCounter.GetAllFilesRecursively(System.IO.DirectoryInfo)">
            <summary>
            Get all files in the specified directory recursively.
            </summary>
            <param name="directory">The directory information instance.</param>
        </member>
        <member name="T:Sudoku.Diagnostics.Solution">
            <summary>
            Provides the solution constant values.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.Solution.PathRoot">
            <summary>
            The root path of this whole solution.
            </summary>
        </member>
    </members>
</doc>
