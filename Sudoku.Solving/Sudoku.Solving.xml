<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Solving</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Solving.AnalysisResult">
            <summary>
            Provides an analysis result after a puzzle solved.
            </summary>
            <param name="SolverName">Indicates the solver name.</param>
            <param name="Puzzle">Indicates the puzzle.</param>
            <param name="IsSolved">Indicates whether the puzzle has been solved.</param>
            <param name="ElapsedTime">The elapsed time.</param>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.#ctor(System.String,Sudoku.Data.SudokuGrid@,System.Boolean,System.TimeSpan@)">
            <summary>
            Provides an analysis result after a puzzle solved.
            </summary>
            <param name="SolverName">Indicates the solver name.</param>
            <param name="Puzzle">Indicates the puzzle.</param>
            <param name="IsSolved">Indicates whether the puzzle has been solved.</param>
            <param name="ElapsedTime">The elapsed time.</param>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.Additional">
            <summary>
            Indicates the additional texts that we should describe.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.Solution">
            <summary>
            Indicates the solution of the puzzle. If the puzzle doesn't contain non-unique solution,
            the value will be <see langword="null"/>.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.StepGrids">
            <summary>
            Indicates a list, whose element is the intermediate grid for each step.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.Steps">
            <summary>
            Indicates all solving steps that the solver has recorded.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.MaxDifficulty">
            <summary>
            <para>Indicates the maximum difficulty of the puzzle.</para>
            <para>
            When the puzzle is solved by <see cref="T:Sudoku.Solving.Manual.ManualSolver"/>,
            the value will be the maximum value among all difficulty
            ratings in solving steps. If the puzzle has not been solved,
            or else the puzzle is solved by other solvers, this value will
            be always <c>20M</c>.
            </para>
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolver"/>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.TotalDifficulty">
            <summary>
            <para>Indicates the total difficulty rating of the puzzle.</para>
            <para>
            When the puzzle is solved by <see cref="T:Sudoku.Solving.Manual.ManualSolver"/>,
            the value will be the sum of all difficulty ratings of steps. If
            the puzzle has not been solved, the value will be the sum of all
            difficulty ratings of steps recorded in <see cref="P:Sudoku.Solving.AnalysisResult.Steps"/>.
            However, if the puzzle is solved by other solvers, this value will
            be <c>0</c>.
            </para>
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolver"/>
            <seealso cref="P:Sudoku.Solving.AnalysisResult.Steps"/>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.PearlDifficulty">
            <summary>
            <para>
            Indicates the pearl difficulty rating of the puzzle, calculated
            during only by <see cref="T:Sudoku.Solving.Manual.ManualSolver"/>.
            </para>
            <para>
            When the puzzle is solved, the value will be the difficulty rating
            of the first solving step. If the puzzle has not solved or
            the puzzle is solved by other solvers, this value will be always <c>0</c>.
            </para>
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolver"/>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.DiamondDifficulty">
            <summary>
            <para>
            Indicates the pearl difficulty rating of the puzzle, calculated
            during only by <see cref="T:Sudoku.Solving.Manual.ManualSolver"/>.
            </para>
            <para>
            When the puzzle is solved, the value will be the difficulty rating
            of the first step before the first one whose conclusion is
            <see cref="F:Sudoku.Data.ConclusionType.Assignment"/>. If the puzzle has not solved
            or solved by other solvers, this value will be <c>20.0M</c>.
            </para>
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolver"/>
            <seealso cref="T:Sudoku.Data.ConclusionType"/>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.SolvingStepsCount">
            <summary>
            Indicates the number of all solving steps recorded.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.DifficultyLevel">
            <summary>
            Indicates the difficulty level of the puzzle.
            If the puzzle has not solved or solved by other
            solvers, this value will be <see cref="F:Sudoku.Solving.Manual.DifficultyLevel.Unknown"/>.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResult.Bottleneck">
            <summary>
            Indicates the bottle neck during the whole grid solving.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.Deconstruct(System.Boolean@,System.Int32@,System.Collections.Generic.IReadOnlyList{Sudoku.Solving.Manual.StepInfo}@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="hasSolved">
            (<see langword="out"/> parameter) Indicates whether the puzzle has been solved.
            </param>
            <param name="solvingStepsCount">
            (<see langword="out"/> parameter) The total number of all solving steps.
            </param>
            <param name="solvingSteps">
            (<see langword="out"/> parameter) The all solving steps.
            </param>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.Deconstruct(System.String@,System.Boolean@,System.Decimal@,System.Decimal@,System.Decimal@,System.Decimal@,Sudoku.Data.SudokuGrid@,System.Nullable{Sudoku.Data.SudokuGrid}@,System.TimeSpan@,System.Int32@,System.Collections.Generic.IReadOnlyList{Sudoku.Solving.Manual.StepInfo}@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.SudokuGrid}@,System.String@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="solverName">(<see langword="out"/> parameter) The solver name.</param>
            <param name="hasSolved">
            (<see langword="out"/> parameter) Indicates whether the solver has solved the puzzle.
            </param>
            <param name="total">(<see langword="out"/> parameter) The total difficulty.</param>
            <param name="max">(<see langword="out"/> parameter) The maximum difficulty of all steps.</param>
            <param name="pearl">(<see langword="out"/> parameter) The pearl difficulty of the puzzle.</param>
            <param name="diamond">(<see langword="out"/> parameter) The diamond difficulty of the puzzle.</param>
            <param name="puzzle">(<see langword="out"/> parameter) The puzzle.</param>
            <param name="solution">(<see langword="out"/> parameter) The solution.</param>
            <param name="elasped">(<see langword="out"/> parameter) The time elapsed.</param>
            <param name="stepCount">(<see langword="out"/> parameter) The number of all steps.</param>
            <param name="steps">(<see langword="out"/> parameter) The steps.</param>
            <param name="stepGrids">
            (<see langword="out"/> parameter) The grids corresponding to the steps.
            </param>
            <param name="additional">(<see langword="out"/> parameter) The additional message.</param>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.GetEnumerator">
            <summary>
            <para>Returns an enumerator that iterates through the collection.</para>
            <para>Note that this method won't return <see langword="null"/> anytime.</para>
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.ToString(System.String)">
            <inheritdoc cref="M:Sudoku.DocComments.Formattable.ToString(System.String)"/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.ToString(System.String,Sudoku.Globalization.CountryCode)">
            <summary>
            Get the analysis result string using the specified format and the country code.
            </summary>
            <param name="format">The format.</param>
            <param name="countryCode">The country code.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.ToString(System.String,System.IFormatProvider)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.ToString(Sudoku.Solving.AnalysisResultFormattingOptions)">
            <inheritdoc cref="M:Sudoku.Solving.AnalysisResultFormatter.ToString(Sudoku.Solving.AnalysisResultFormattingOptions)"/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.ToString(Sudoku.Solving.AnalysisResultFormattingOptions,Sudoku.Globalization.CountryCode)">
            <inheritdoc cref="M:Sudoku.Solving.AnalysisResultFormatter.ToString(Sudoku.Solving.AnalysisResultFormattingOptions,Sudoku.Globalization.CountryCode)"/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResult.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.AnalysisResultFormatter">
            <summary>
            Provides operations for analysis result formatting.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResultFormatter.#ctor(Sudoku.Solving.AnalysisResult)">
            <summary>
            Initializes an instance with the specified analysis result and format.
            </summary>
            <param name="result">The analysis result.</param>
        </member>
        <member name="P:Sudoku.Solving.AnalysisResultFormatter.Result">
            <summary>
            Indicates the analysis result.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResultFormatter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResultFormatter.ToString(System.String)">
            <inheritdoc cref="M:Sudoku.DocComments.Formattable.ToString(System.String)"/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResultFormatter.ToString(System.String,System.IFormatProvider)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResultFormatter.ToString(System.String,System.IFormatProvider,Sudoku.Globalization.CountryCode)">
            <summary>
            Get the string result.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="countryCode">The country code.</param>
            <returns>The result.</returns>
            <exception cref="T:System.FormatException">
            Throws when the specified format contains other invalid characters
            and the format provider can't work.
            </exception>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResultFormatter.ToString(Sudoku.Solving.AnalysisResultFormattingOptions)">
            <summary>
            Get the string result with the specified formatting options.
            </summary>
            <param name="options">The options.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.AnalysisResultFormatter.ToString(Sudoku.Solving.AnalysisResultFormattingOptions,Sudoku.Globalization.CountryCode)">
            <summary>
            Get the string result with the specified formatting options and the country code.
            </summary>
            <param name="options">The options.</param>
            <param name="countryCode">The country code.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sudoku.Solving.AnalysisResultFormattingOptions">
            <summary>
            Indicates the formatting options of <see cref="T:Sudoku.Solving.AnalysisResult"/> instance.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.None">
            <summary>
            Indicates the none of the formatting option.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowSeparators">
            <summary>
            Indicates the analysis result will append separators.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowStepLabel">
            <summary>
            Indicates the analysis result will append the step label.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowSimple">
            <summary>
            Indicates the analysis result will use simple mode to show steps.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowBottleneck">
            <summary>
            Indicates the analysis result will show the bottleneck.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowDifficulty">
            <summary>
            Indicates the analysis result will show the difficulty.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowStepsAfterBottleneck">
            <summary>
            Indicates the analysis result will show all steps after the bottleneck.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowAttributes">
            <summary>
            Indicates the analysis result will append the attributes of the grid.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowBackdoors">
            <summary>
            Indicates the analysis result will append the backdoors of the grid.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowStepDetail">
            <summary>
            Indicates the analysis result will show the step detail.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.AnalysisResultFormattingOptions.ShowSteps">
            <summary>
            Indicates the analysis result will show the steps.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Annotations.DirectSearcherAttribute">
            <summary>
            <para>
            Indicates the technique searcher can or can't be used in some scenarios
            where they aren't in traversing mode to call
            <see cref="M:Sudoku.Solving.Manual.StepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)"/>
            in <see cref="T:Sudoku.Solving.Manual.StepSearcher"/>s one by one.
            </para>
            <para>
            If <see langword="true"/>, the searcher can't use those <see langword="static"/>
            properties such as <see cref="P:Sudoku.Solving.Manual.StepSearcher.CandMaps"/> in its method
            <see cref="M:Sudoku.Solving.Manual.StepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)"/>.
            </para>
            </summary>
            <remarks>
            <para>
            All disallowed properties are:
            <list type="bullet">
            <item><see cref="P:Sudoku.Solving.Manual.StepSearcher.DigitMaps"/></item>
            <item><see cref="P:Sudoku.Solving.Manual.StepSearcher.ValueMaps"/></item>
            <item><see cref="P:Sudoku.Solving.Manual.StepSearcher.CandMaps"/></item>
            <item><see cref="P:Sudoku.Solving.Manual.StepSearcher.BivalueMap"/></item>
            <item><see cref="P:Sudoku.Solving.Manual.StepSearcher.EmptyMap"/></item>
            </list>
            The disallowed method is:
            <list type="bullet">
            <item><see cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/></item>
            </list>
            </para>
            <para>
            Those properties or methods can optimize the performance to analyze a sudoku grid, but
            sometimes they may cause a potential bug that is hard to find and fix. The attribute
            is created and used for solving the problem.
            </para>
            </remarks>
            <seealso cref="T:Sudoku.Solving.Manual.StepSearcher"/>
        </member>
        <member name="P:Sudoku.Solving.Annotations.DirectSearcherAttribute.IsAllow">
            <summary>
            Indicates the ability that can or can't be used in non-traversing scenarios.
            The default value is <see langword="true"/>.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Annotations.DisabledReason">
            <summary>
            Indicates a reason why the searcher is disabled.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Annotations.DisabledReason.None">
            <summary>
            Indicates the searcher is normal.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Annotations.DisabledReason.LastResort">
            <summary>
            Indicates the searcher searches for last resorts, which don't need to show.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Annotations.DisabledReason.HasBugs">
            <summary>
            Indicates the searcher has bugs while searching.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Annotations.DisabledReason.TooSlow">
            <summary>
            Indicates the searcher runs so slowly that the author himself can't stand to use it.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Annotations.DisabledReason.Unstable">
            <summary>
            Indicates the searcher can get correct <see cref="T:Sudoku.Solving.Manual.StepInfo"/>s, but the difference
            of the difficulty among them are too big.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Annotations.DisabledReason.HighAllocation">
            <summary>
            Indicates the searcher will cause a lot of memory allocation.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Annotations.TechniqueProperties">
            <summary>
            Indicates the properties while searching aiming to <see cref="T:Sudoku.Solving.Manual.StepSearcher"/>s.
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.StepSearcher"/>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.#ctor(System.Int32,System.String)">
            <summary>
            Initializes an instance with the specified priority.
            </summary>
            <param name="priority">The priority.</param>
            <param name="displayLabel">The display label.</param>
        </member>
        <member name="P:Sudoku.Solving.Annotations.TechniqueProperties.IsEnabled">
            <summary>
            Indicates whether the technique is enabled. The default value is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Annotations.TechniqueProperties.IsReadOnly">
            <summary>
            Indicates whether the property is read-only, which can't be modified.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Annotations.TechniqueProperties.OnlyEnableInAnalysis">
            <summary>
            Indicates whether the searcher is only used in analyzing a sudoku grid.
            If <see langword="true"/>, when in find-all-step mode, this searcher will be disabled.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Annotations.TechniqueProperties.Priority">
            <summary>
            Indicates the priority of this technique.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Annotations.TechniqueProperties.DisplayLevel">
            <summary>
            Indicates the display level of this technique.
            </summary>
            <remarks>
            <para>
            The display level means the which level the technique is at. All higher leveled techniques
            won't display on the screen when the searchers at the current level have found technique
            instances.
            </para>
            <para>
            This attribute is used on <see cref="T:Sudoku.Solving.Manual.AllStepSearcher"/>. For example, if Alternating Inference Chain (AIC)
            is at level 1 and Forcing Chains (FC) is at level 2, when we find any AIC technique instances,
            FC won't be checked at the same time in order to enhance the performance.
            </para>
            <para>
            This attribute is also used for grouping those the searchers, especially in Sudoku Explainer mode.
            </para>
            <para>
            Note that the property is different with <see cref="P:Sudoku.Solving.Annotations.TechniqueProperties.DisplayLabel"/>.
            </para>
            </remarks>
            <seealso cref="T:Sudoku.Solving.Manual.AllStepSearcher"/>
            <seealso cref="P:Sudoku.Solving.Annotations.TechniqueProperties.DisplayLabel"/>
        </member>
        <member name="P:Sudoku.Solving.Annotations.TechniqueProperties.DisplayLabel">
            <summary>
            Indicates the display label of this technique. The program will process and handle the
            value to the specified technique name.
            </summary>
            <remarks>
            Note that the property is different with <see cref="P:Sudoku.Solving.Annotations.TechniqueProperties.DisplayLevel"/>.
            </remarks>
            <seealso cref="P:Sudoku.Solving.Annotations.TechniqueProperties.DisplayLevel"/>
        </member>
        <member name="P:Sudoku.Solving.Annotations.TechniqueProperties.DisabledReason">
            <summary>
            Indicates whether the current searcher has bug to fix, or something else to describe why
            the searcher is (or should be) disabled.
            The default value is <see cref="F:Sudoku.Solving.Annotations.DisabledReason.LastResort"/>.
            </summary>
            <seealso cref="F:Sudoku.Solving.Annotations.DisabledReason.LastResort"/>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.Deconstruct(System.Boolean@,System.Boolean@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="isEnabled">
            (<see langword="out"/> parameter) Indicates whether the technique is enabled.
            </param>
            <param name="isReadOnly">
            (<see langword="out"/> parameter) Indicates whether the technique can't modify the priority.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.Deconstruct(System.Boolean@,System.Boolean@,System.Int32@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="isEnabled">
            (<see langword="out"/> parameter) Indicates whether the technique is enabled.
            </param>
            <param name="isReadOnly">
            (<see langword="out"/> parameter) Indicates whether the technique can't modify the priority.
            </param>
            <param name="priority">
            (<see langword="out"/> parameter) Indicates the priority of the technique.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.Deconstruct(System.Boolean@,System.Boolean@,System.Int32@,Sudoku.Solving.Annotations.DisabledReason@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="isEnabled">
            (<see langword="out"/> parameter) Indicates whether the technique is enabled.
            </param>
            <param name="isReadOnly">
            (<see langword="out"/> parameter) Indicates whether the technique can't modify the priority.
            </param>
            <param name="priority">
            (<see langword="out"/> parameter) Indicates the priority of the technique.
            </param>
            <param name="disabledReason">
            (<see langword="out"/> parameter) Indicates why this technique is disabled.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.Deconstruct(System.Boolean@,System.Boolean@,System.Int32@,Sudoku.Solving.Annotations.DisabledReason@,System.Boolean@,System.Int32@,System.String@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="isEnabled">
            (<see langword="out"/> parameter) Indicates whether the technique is enabled.
            </param>
            <param name="isReadOnly">
            (<see langword="out"/> parameter) Indicates whether the technique can't modify the priority.
            </param>
            <param name="priority">
            (<see langword="out"/> parameter) Indicates the priority of the technique.
            </param>
            <param name="disabledReason">
            (<see langword="out"/> parameter) Indicates why this technique is disabled.
            </param>
            <param name="onlyEnableInAnalysis">
            (<see langword="out"/> parameter) Indicates whether the searcher is enabled only in traversing mode.
            </param>
            <param name="displayLevel">
            (<see langword="out"/> parameter) Indicates the display level.
            </param>
            <param name="displayLabel">
            (<see langword="out"/> parameter) Indicates the display label.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.GetPropertiesFrom``1">
            <summary>
            Get the specified properties using reflection.
            </summary>
            <typeparam name="TTechniqueSearcher">The type of the searcher.</typeparam>
            <returns>
            The properties instance. If the searcher is <see langword="abstract"/> type
            or not <see cref="T:Sudoku.Solving.Manual.StepSearcher"/> at all,
            the return value will be <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.GetPropertiesFrom(Sudoku.Solving.Manual.StepSearcher)">
            <summary>
            Get the specified properties using reflection.
            </summary>
            <param name="searcher">The searcher.</param>
            <returns>
            The properties instance. If the searcher is <see langword="abstract"/> type,
            the return value will be <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Annotations.TechniqueProperties.GetPropertiesFrom(System.Type)">
            <summary>
            Get the specified properties using reflection.
            </summary>
            <param name="type">The type of the specified searcher.</param>
            <returns>
            The properties instance. If the searcher is <see langword="abstract"/> type
            or not <see cref="T:Sudoku.Solving.Manual.StepSearcher"/> at all,
            the return value will be <see langword="null"/>.
            </returns>
        </member>
        <member name="T:Sudoku.Solving.BruteForces.Backtracking.BacktrackingSolver">
            <summary>
            Provides a solver using backtracking method.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Backtracking.BacktrackingSolver._grid">
            <summary>
            The temporary grid to solve.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.BruteForces.Backtracking.BacktrackingSolver.SolverName">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Backtracking.BacktrackingSolver.Solve(Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Backtracking.BacktrackingSolver.BacktrackinglySolve(System.Int32@,System.Int32[]@,System.Int32[],System.Int32)">
            <summary>
            Solve backtrackingly.
            </summary>
            <param name="solutionsCount">
            (<see langword="ref"/> parameter) The number of solutions.
            </param>
            <param name="result">
            (<see langword="ref"/> parameter) The result array.
            </param>
            <param name="gridValues">All grid values.</param>
            <param name="finishedCellsCount">The number of cells had finished.</param>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Backtracking.BacktrackingSolver.IsValid(System.Int32[],System.Int32,System.Int32)">
            <summary>
            To decide the current row and column index is valid.
            </summary>
            <param name="gridValues">The grid values.</param>
            <param name="r">The current row index.</param>
            <param name="c">The current column index.</param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="T:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver">
            <summary>
            Define an unsafe bitwise solver.
            </summary>
            <remarks>
            This solver is implemented by Zhou Yundong, but he wrote this solver using C.
            I change the programming language to C# to decrease the native calling.
            </remarks>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.BitSet27">
            <summary>
            All pencil marks set - 27 bits per band.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.BufferLength">
            <summary>
            The buffer length of a solution puzzle.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver._stack">
            <summary>
            Stack to store current and previous states.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver._g">
            <summary>
            Pointer to the currently active slot.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver._numSolutions">
            <summary>
            The number of solutions found so far.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver._limitSolutions">
            <summary>
            The max number of solution we're looking for.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver._singleApplied">
            <summary>
            Nasty global flag telling if <see cref="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.ApplySingleOrEmptyCells"/> found anything.
            </summary>
            <seealso cref="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.ApplySingleOrEmptyCells"/>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver._solution">
            <summary>
            Pointer to where to store the first solution. This value can be <see langword="null"/>.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.SolverName">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Solve(Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Solve(System.String,System.String@,System.Int32)">
            <summary>
            The inner solver.
            </summary>
            <param name="puzzle">The puzzle.</param>
            <param name="solution">
            (<see langword="out"/> parameter) The solution. The value keeps <see langword="null"/>
            if you doesn't want to use this result.
            </param>
            <param name="limit">The limit.</param>
            <returns>The number of all solutions.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Solve(System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            The inner solver.
            </summary>
            <param name="puzzle">The puzzle.</param>
            <param name="solution">The solution. <see langword="null"/> if you don't want to use the value.</param>
            <param name="limit">The limit.</param>
            <returns>The number of all solutions.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.CheckValidity(System.String)">
            <summary>
            Same as <see cref="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.CheckValidity(System.String,System.String@)"/>, but doesn't contain
            any <see langword="out"/> parameters.
            </summary>
            <param name="grid">The grid.</param>
            <returns>The <see cref="T:System.Boolean"/> result. <see langword="true"/> for unique solution.</returns>
            <seealso cref="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.CheckValidity(System.String,System.String@)"/>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.CheckValidity(System.String,System.String@)">
            <summary>
            Check the validity of the puzzle.
            </summary>
            <param name="grid">The grid.</param>
            <param name="solutionIfUnique">(<see langword="out"/> parameter) The solution if the puzzle is unique.</param>
            <returns>The <see cref="T:System.Boolean"/> result. <see langword="true"/> for unique solution.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.SetSolvedDigit(System.Int32,System.Int32)">
            <summary>
            Set a cell as solved - used in <see cref="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.InitSudoku(System.Char*)"/>.
            </summary>
            <param name="cell">The cell.</param>
            <param name="digit">The digit.</param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.EliminateDigit(System.Int32,System.Int32)">
            <summary>
            Eliminate a digit - used in <see cref="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.InitSudoku(System.Char*)"/>.
            </summary>
            <param name="cell">The cell.</param>
            <param name="digit">The digit.</param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.SetSolvedMask(System.Int32,System.UInt32)">
            <summary>
            Set a cell as solved - used in various guess routines.
            </summary>
            <param name="band">The band.</param>
            <param name="mask">The mask.</param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.InitSudoku(System.Char*)">
            <summary>
            Setup everything and load the puzzle.
            </summary>
            <param name="board">The puzzle string.</param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Update">
            <summary>
            Core of fast processing.
            </summary>
            <returns>The <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.ApplySingleOrEmptyCells">
            <summary>
            Find singles, bi-value cells, and impossible cells.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.InternalSolve(System.Char*,System.Char*,System.Int32)">
            <summary>
            The internal solving method.
            </summary>
            <param name="puzzle">(<see langword="in"/> parameter) The pointer to the puzzle string.</param>
            <param name="solutionPtr">The pointer to the solution string.</param>
            <param name="limit">The limitation for the number of all final solutions.</param>
            <returns>The number of solutions found.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.ExtractSolution(System.Char*)">
            <summary>
            Extract solution as a character string.
            </summary>
            <param name="solution">
            The solution pointer. <b>The buffer should be at least <see cref="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.BufferLength"/>
            of value of length.</b>
            </param>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.GuessBiValueInCell">
            <summary>
            Try both options for cells with exactly two pencil marks.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.GuessFirstCell">
            <summary>
            Guess all possibilities in first unsolved cell.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Guess">
            <summary>
            Either already solved, or guess and recurse.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.FullUpdate">
            <summary>
            Get as far as possible without guessing.
            </summary>
            <returns>An <see cref="T:System.Byte"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.BitPos(System.UInt32)">
            <summary>
            Get the bit position.
            </summary>
            <param name="map">The map.</param>
            <returns>The position.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Strlen(System.Char*)">
            <summary>
            Get the length of the specified string which is represented by a <see cref="T:System.Char"/>*.
            </summary>
            <param name="ptr">The pointer.</param>
            <returns>The total length.</returns>
            <remarks>
            In C#, this function is unsafe because the implementation of
            <see cref="T:System.String"/> types between C and C# is totally different.
            In C, <see cref="T:System.String"/> is like a <see cref="T:System.Char"/>* or a
            <see cref="T:System.Char"/>[], they ends with the terminator symbol <c>'\0'</c>.
            However, C# not.
            </remarks>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Memcpy(System.Void*,System.Void*,System.Int32)">
            <summary>
            Copies the specified memory to the destination memory block,
            with the specified value indicating the size unit.
            </summary>
            <param name="dest">The pointer to the destination block.</param>
            <param name="src">The pointer to the destination block.</param>
            <param name="size">The number of the size unit.</param>
            <returns>Same as <paramref name="dest"/>.</returns>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.Memset(System.Void*,System.Int32,System.Int32)">
            <summary>
            Assign the specified memory block to the specified value.
            </summary>
            <param name="src">The source pointer.</param>
            <param name="value">The value to assign.</param>
            <param name="size">The size of the size unit.</param>
            <returns>Same as <paramref name="src"/>.</returns>
        </member>
        <member name="T:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.State">
            <summary>
            To describe a state for a current grid using binary values.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.State.Bands">
            <summary>
            Pencil marks in bands by digit.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.State.PrevBands">
            <summary>
            Value of bands last time it was calculated.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.State.UnsolvedCells">
            <summary>
            Bit vector of unsolved cells.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.State.UnsolvedRows">
            <summary>
            Bit vector of unsolved rows - three bits per band.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.State.Pairs">
            <summary>
            Bit vector of cells with exactly two pencil marks.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.TblComplexMask">
            <summary>
            To keep mini rows still valid.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.TblMaskSingle">
            <summary>
            Kill in other blocks locked column/box.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.TblShrinkSingle">
            <summary>
            Keep only rows with single.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.TblRowUniq">
            <remarks>
            1 is row not defined in block mode <c>1</c> to <c>111</c>.
            </remarks>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.TblColumnSingle">
            <summary>
            Single in column applied to shrunk block.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.BruteForces.Bitwise.UnsafeBitwiseSolver.TblRowMask">
            <summary>
            Rows where single found: <c>000</c> to <c>111</c>.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.BruteForces.Linqing.OneLineLinqSolver">
            <summary>
            Provides a solver using LINQ method.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.BruteForces.Linqing.OneLineLinqSolver.SolverName">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Linqing.OneLineLinqSolver.Solve(Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.BruteForces.Linqing.OneLineLinqSolver.SolveStrings(System.String)">
            <summary>
            Internal solving method.
            </summary>
            <param name="puzzle">The puzzle string, with placeholder character '0'.</param>
            <returns>The result strings (i.e. All solutions).</returns>
        </member>
        <member name="T:Sudoku.Solving.Checking.BackdoorSearcher">
            <summary>
            Provides a backdoor searcher.
            </summary>
            <remarks>
            <b>Backdoor</b>s are <see cref="T:Sudoku.Data.Conclusion"/>s making the difficulty of
            a puzzle decrease sharply after they are applied to a grid.
            </remarks>
            <seealso cref="T:Sudoku.Data.Conclusion"/>
        </member>
        <member name="F:Sudoku.Solving.Checking.BackdoorSearcher.TestSolver">
            <summary>
            The temporary test solver used in this searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Checking.BackdoorSearcher.SearchForBackdoors(Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            Search all backdoors whose level is lower or equals than the
            specified depth.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="depth">
            The depth you want to search for. The depth value must be between 0 and 3.
            where value 0 is for searching for assignments.
            </param>
            <returns>All backdoors.</returns>
            <exception cref="T:Sudoku.Runtime.SudokuRuntimeException">Throws when the specified grid is invalid.</exception>
        </member>
        <member name="M:Sudoku.Solving.Checking.BackdoorSearcher.SearchForBackdoorsExact(Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            Search all backdoors whose depth is exactly same as the argument.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="depth">
            The depth you want to search for. The depth value must be between 0 and 3.
            where value 0 is for searching for assignments.
            </param>
            <returns>All backdoors.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.BackdoorSearcher.SearchForBackdoorsExactAsync(Sudoku.Data.SudokuGrid,System.Int32)">
            <summary>
            Search all backdoors whose depth is exactly same as the argument asynchronizedly.
            </summary>
            <param name="grid">The grid.</param>
            <param name="depth">
            The depth you want to search for. The depth value must be between 0 and 3.
            where value 0 is for searching for assignments.
            </param>
            <returns>The task to calculate all conclusions.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.BackdoorSearcher.SearchForBackdoors(System.Collections.Generic.IList{System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion}},Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            To find all backdoors in a sudoku grid.
            </summary>
            <param name="result">The result list.</param>
            <param name="grid">(<see langword="in"/> parameter) A sudoku grid to search backdoors.</param>
            <param name="depth">The depth to search.</param>
            <exception cref="T:System.InvalidOperationException">
            Throws when the grid is invalid (has no solution or multiple solutions).
            </exception>
        </member>
        <member name="T:Sudoku.Solving.Checking.BugChecker">
            <summary>
            Encapsulates a BUG technique checker.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Checking.BugChecker.#ctor(Sudoku.Data.SudokuGrid@)">
            <summary>
            Initializes an instance with the specified grid.
            </summary>
            <param name="puzzle">(<see langword="in"/> parameter) The current puzzle grid.</param>
        </member>
        <member name="P:Sudoku.Solving.Checking.BugChecker.IsBugPattern">
            <summary>
            Indicates the current grid is a BUG+n pattern.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Checking.BugChecker.Puzzle">
            <summary>
            The grid.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Checking.BugChecker.TrueCandidates">
            <summary>
            Indicates all true candidates (non-BUG candidates).
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Checking.BugChecker.GetAllTrueCandidates(System.Int32)">
            <summary>
            Get all true candidates when the number of empty cells
            is below than the argument.
            </summary>
            <param name="maximumEmptyCells">The maximum number of the empty cells.</param>
            <returns>All true candidates.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.BugChecker.GetAllTrueCandidatesAsync(System.Int32)">
            <summary>
            Get all true candidates when the number of empty cells
            is below than the argument asynchronizedly.
            </summary>
            <param name="maximumEmptyCells">The maximum number of the empty cells.</param>
            <returns>The task to get all true candidates.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.BugChecker.GetAllTrueCandidates">
            <summary>
            Get all true candidates.
            </summary>
            <returns>All true candidates.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.BugChecker.GetAllCombinations(System.Int16,System.Int32)">
            <summary>
            Get all combinations of a specified mask.
            </summary>
            <param name="mask">The mask.</param>
            <param name="oneCount">
            The number of <see langword="true"/> bits.
            </param>
            <returns>All combinations.</returns>
        </member>
        <member name="T:Sudoku.Solving.Checking.PuzzleAttributeChecker">
            <summary>
            Provides some puzzle attributes validation operations.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Checking.PuzzleAttributeChecker.Solver">
            <summary>
            Indicates the inner solver.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@)">
            <summary>
            Same as <see cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@)"/> and
            <see cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Nullable{System.Boolean}@)"/>,
            but doesn't contain any <see langword="out"/> parameters.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The grid.</param>
            <returns>The <see cref="T:System.Boolean"/> indicating that.</returns>
            <seealso cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@)"/>
            <seealso cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Nullable{System.Boolean}@)"/>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid)">
            <summary>
            Same as <see cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid,Sudoku.Data.Stepping.UndoableGrid@)"/> and
            <see cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid,Sudoku.Data.Stepping.UndoableGrid@,System.Nullable{System.Boolean}@)"/>,
            but doesn't contain any <see langword="out"/> parameters.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The grid.</param>
            <returns>The <see cref="T:System.Boolean"/> indicating that.</returns>
            <seealso cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid,Sudoku.Data.Stepping.UndoableGrid@)"/>
            <seealso cref="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid,Sudoku.Data.Stepping.UndoableGrid@,System.Nullable{System.Boolean}@)"/>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@)">
            <summary>
            To check if a puzzle has only one solution or not.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle to check.</param>
            <param name="solutionIfValid">
            (<see langword="out"/> parameter) The solution if the puzzle is valid;
            otherwise, <see cref="F:Sudoku.Data.SudokuGrid.Undefined"/>.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
            <seealso cref="F:Sudoku.Data.SudokuGrid.Undefined"/>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid,Sudoku.Data.Stepping.UndoableGrid@)">
            <summary>
            To check if a puzzle has only one solution or not.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The puzzle to check.</param>
            <param name="solutionIfValid">
            (<see langword="out"/> parameter) The solution if the puzzle is valid;
            otherwise, <see langword="null"/>.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@,System.Nullable{System.Boolean}@)">
            <summary>
            To check if a puzzle has only one solution or not.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle to check.</param>
            <param name="sukaku">
            (<see langword="out"/> parameter) A <see cref="T:System.Boolean"/> value indicating whether the current
            grid is a sukaku. <see langword="true"/> is for sukaku.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid,System.Nullable{System.Boolean}@)">
            <summary>
            To check if a puzzle has only one solution or not.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The puzzle to check.</param>
            <param name="sukaku">
            (<see langword="out"/> parameter) A <see cref="T:System.Boolean"/> value indicating whether the current
            grid is a sukaku. <see langword="true"/> is for sukaku.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Nullable{System.Boolean}@)">
            <summary>
            To check if a puzzle has only one solution or not.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle to check.</param>
            <param name="solutionIfValid">
            (<see langword="out"/> parameter) The solution if the puzzle is valid;
            otherwise, <see cref="F:Sudoku.Data.SudokuGrid.Undefined"/>.
            </param>
            <param name="sukaku">
            (<see langword="out"/> parameter) Indicates whether the current mode is sukaku mode.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
            <seealso cref="F:Sudoku.Data.SudokuGrid.Undefined"/>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsValid(Sudoku.Data.Stepping.UndoableGrid,Sudoku.Data.Stepping.UndoableGrid@,System.Nullable{System.Boolean}@)">
            <summary>
            To check if a puzzle has only one solution or not.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The puzzle to check.</param>
            <param name="solutionIfValid">
            (<see langword="out"/> parameter) The solution if the puzzle is valid;
            otherwise, <see langword="null"/>.
            </param>
            <param name="sukaku">
            (<see langword="out"/> parameter) Indicates whether the current mode is sukaku mode.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsMinimal(Sudoku.Data.SudokuGrid@)">
            <summary>
            To check if the puzzle is minimal or not.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle to check.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsPearl(Sudoku.Data.SudokuGrid@)">
            <summary>
            To check if the puzzle is pearl or not.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle to check.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.IsDiamond(Sudoku.Data.SudokuGrid@)">
            <summary>
            To check if the puzzle is diamond or not.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle to check.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.CanBeSolvedUsingOnlySsts(Sudoku.Data.SudokuGrid@)">
            <summary>
            To check whether the puzzle can be solved using only simple sudoku technique set.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Checking.PuzzleAttributeChecker.GetDifficultyLevel(Sudoku.Data.SudokuGrid@)">
            <summary>
            Get the difficulty level of this puzzle.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The puzzle.</param>
            <returns>The difficulty level.</returns>
        </member>
        <member name="T:Sudoku.Solving.Extensions.EnumerableEx">
            <summary>
            Provides extension methods on <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <seealso cref="T:System.Collections.Generic.IEnumerable`1"/>
        </member>
        <member name="M:Sudoku.Solving.Extensions.EnumerableEx.IsValidLoop(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Check whether the current loop is valid UL-shaped loop.
            </summary>
            <param name="loop">(<see langword="this"/> parameter) The loop.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="T:Sudoku.Solving.Extensions.GridMapEx">
            <summary>
            Provides extension methods on <see cref="T:Sudoku.Data.Cells"/>.
            </summary>
            <seealso cref="T:Sudoku.Data.Cells"/>
        </member>
        <member name="M:Sudoku.Solving.Extensions.GridMapEx.IsEmptyRectangle(Sudoku.Data.Cells@,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Check whether the cells form an empty cell.
            </summary>
            <param name="this">(<see langword="this in"/> parameter) The empty cell grid map.</param>
            <param name="block">The block.</param>
            <param name="row">(<see langword="out"/> parameter) The row.</param>
            <param name="column">(<see langword="out"/> parameter) The column.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="T:Sudoku.Solving.Extensions.Int32Ex">
            <summary>
            Provides extension methods on <see cref="T:System.Int32"/>.
            </summary>
            <seealso cref="T:System.Int32"/>
        </member>
        <member name="M:Sudoku.Solving.Extensions.Int32Ex.GetExtraDifficultyByLength(System.Int32)">
            <summary>
            Get extra difficulty rating for a chain node sequence.
            </summary>
            <param name="length">(<see langword="this"/> parameter) The length.</param>
            <returns>The difficulty.</returns>
        </member>
        <member name="T:Sudoku.Solving.Extensions.ManualSolverEx">
            <summary>
            Provides extension methods on <see cref="T:Sudoku.Solving.Manual.ManualSolver"/>.
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolver"/>
        </member>
        <member name="M:Sudoku.Solving.Extensions.ManualSolverEx.GetSeModeSearchers(Sudoku.Solving.Manual.ManualSolver,System.Nullable{Sudoku.Data.SudokuGrid}@)">
            <summary>
            Get the searchers to enumerate on Sudoku Explainer mode.
            </summary>
            <param name="this">(<see langword="this"/> paraemeter) The manual solver.</param>
            <param name="solution">
            (<see langword="in"/> paraemeter) The solution for a sudoku grid.
            This parameter is necessary because some technique searchers will use this value,
            such as <see cref="T:Sudoku.Solving.Manual.LastResorts.BfStepSearcher"/>.
            </param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Extensions.ManualSolverEx.GetHodokuModeSearchers(Sudoku.Solving.Manual.ManualSolver,System.Nullable{Sudoku.Data.SudokuGrid}@)">
            <summary>
            Get the searchers to enumerate on Hodoku mode.
            </summary>
            <param name="this">(<see langword="this"/> paraemeter) The manual solver.</param>
            <param name="solution">
            (<see langword="in"/> paraemeter) The solution for a sudoku grid.
            This parameter is necessary because some technique searchers will use this value,
            such as <see cref="T:Sudoku.Solving.Manual.LastResorts.BfStepSearcher"/>. The default value is <see langword="null"/>.
            </param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sudoku.Solving.Extensions.NodeEx">
            <summary>
            Provides extension methods on <see cref="T:Sudoku.Data.Node"/>.
            </summary>
            <seealso cref="T:Sudoku.Data.Node"/>
        </member>
        <member name="M:Sudoku.Solving.Extensions.NodeEx.GetCandidateOffsets(Sudoku.Data.Node@,System.Boolean)">
            <summary>
            Get highlight candidate offsets through the specified target node.
            </summary>
            <param name="target">(<see langword="this in"/> parameter) The target node.</param>
            <param name="simpleChain">
            Indicates whether the current caller is in <see cref="T:Sudoku.Solving.Manual.Chaining.AicStepSearcher"/>. The
            default value is <see langword="false"/>.
            </param>
            <returns>The candidate offsets.</returns>
        </member>
        <member name="M:Sudoku.Solving.Extensions.NodeEx.GetLinks(Sudoku.Data.Node@,System.Boolean)">
            <summary>
            Get the links through the specified target node.
            </summary>
            <param name="target">(<see langword="this in"/> parameter) The target node.</param>
            <param name="showAllLinks">
            Indicates whether the current chain will display all chains (even contains the weak links
            from the elimination node). The default value is <see langword="false"/>. If you want to
            draw the AIC, the elimination weak links don't need drawing.
            </param>
            <returns>The link.</returns>
        </member>
        <member name="T:Sudoku.Solving.Extensions.ReadOnlyListEx">
            <summary>
            Provides extension methods on <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.
            </summary>
            <seealso cref="T:System.Collections.Generic.IReadOnlyList`1"/>
        </member>
        <member name="M:Sudoku.Solving.Extensions.ReadOnlyListEx.GetLinks(System.Collections.Generic.IReadOnlyList{System.Int32},System.Int32)">
            <summary>
            Converts all cells to the links that is used in drawing ULs or Reverse BUGs.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The list of cells.</param>
            <param name="offset">The offset. The default value is 4.</param>
            <returns>All links.</returns>
        </member>
        <member name="T:Sudoku.Solving.Extensions.SudokuGridEx">
            <summary>
            Provides extension methods on <see cref="T:Sudoku.Data.SudokuGrid"/>.
            </summary>
            <seealso cref="T:Sudoku.Data.SudokuGrid"/>
        </member>
        <member name="F:Sudoku.Solving.Extensions.SudokuGridEx.SstsSearchers">
            <summary>
            All available SSTS searchers.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Extensions.SudokuGridEx.Clean(Sudoku.Data.SudokuGrid@)">
            <summary>
            To clean the grid.
            </summary>
            <param name="this">(<see langword="this ref"/> parameter) The grid.</param>
            <remarks>
            "To clean a grid" means we process this grid to fill with singles that is found
            in <see cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/>, and remove eliminations that is found
            in <see cref="T:Sudoku.Solving.Manual.Intersections.LcStepSearcher"/> and <see cref="T:Sudoku.Solving.Manual.Subsets.SubsetStepSearcher"/>.
            The process won't stop until the puzzle cannot use these techniques.
            </remarks>
            <seealso cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/>
            <seealso cref="T:Sudoku.Solving.Manual.Intersections.LcStepSearcher"/>
            <seealso cref="T:Sudoku.Solving.Manual.Subsets.SubsetStepSearcher"/>
        </member>
        <member name="T:Sudoku.Solving.Extensions.TechniqueInfoEx">
            <summary>
            Provides extension methods on <see cref="T:Sudoku.Solving.Manual.StepInfo"/>.
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.StepInfo"/>
        </member>
        <member name="M:Sudoku.Solving.Extensions.TechniqueInfoEx.IsAlsTechnique(Sudoku.Solving.Manual.StepInfo)">
            <summary>
            Check whether the currrent technique information is an ALS technique.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The technique instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Extensions.TechniqueInfoEx.IsChainingTechnique(Sudoku.Solving.Manual.StepInfo)">
            <summary>
            Check whether the currrent technique information is a chaining-ruled technique.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The technique instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Extensions.TechniqueInfoEx.IsForcingChainsTechnique(Sudoku.Solving.Manual.StepInfo)">
            <summary>
            Check whether the currrent technique information is a forcing chains technique.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The technique instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Extensions.TechniqueInfoEx.IsUniqueness(Sudoku.Solving.Manual.StepInfo)">
            <summary>
            Check whether the currrent technique information is a uniqueness technique.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The technique instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="T:Sudoku.Solving.Generating.BasicPuzzleGenerator">
            <summary>
            Encapsulates a puzzle generator, which provides the symmetry type constraint
            and the maximum clues constraint.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Generating.BasicPuzzleGenerator.Generate">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Generating.BasicPuzzleGenerator.Generate(System.Int32,Sudoku.Data.SymmetryType,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Globalization.CountryCode)">
            <summary>
            Generate a puzzle with the specified information.
            </summary>
            <param name="max">The maximum hints of the puzzle.</param>
            <param name="symmetricalType">
            The symmetry type flags. The <see cref="T:Sudoku.Data.SymmetryType"/> is
            a flag type, you can use bit operators to accumulate multiple
            symmetrical types such as <c><see cref="F:Sudoku.Data.SymmetryType.AntiDiagonal"/> | <see cref="F:Sudoku.Data.SymmetryType.Diagonal"/></c>,
            which means that the solver will generate anti-diagonal type or
            diagonal type puzzles.
            </param>
            <param name="progress">The progress.</param>
            <param name="countryCode">The country code.</param>
            <returns>The grid.</returns>
            <seealso cref="T:Sudoku.Data.SymmetryType"/>
        </member>
        <member name="M:Sudoku.Solving.Generating.BasicPuzzleGenerator.GenerateAsync(System.Int32,Sudoku.Data.SymmetryType,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Globalization.CountryCode)">
            <summary>
            Generate a puzzle with the specified information asynchronizedly.
            </summary>
            <param name="max">The maximum hints of the puzzle.</param>
            <param name="symmetricalType">
            The symmetry type flags. The <see cref="T:Sudoku.Data.SymmetryType"/> is
            a flag type, you can use bit operators to accumulate multiple
            symmetrical types such as <c><see cref="F:Sudoku.Data.SymmetryType.AntiDiagonal"/> | <see cref="F:Sudoku.Data.SymmetryType.Diagonal"/></c>,
            which means that the solver will generate anti-diagonal type or
            diagonal type puzzles.
            </param>
            <param name="progress">The progress.</param>
            <param name="countryCode">The country code.</param>
            <returns>The task.</returns>
            <seealso cref="T:Sudoku.Data.SymmetryType"/>
        </member>
        <member name="M:Sudoku.Solving.Generating.BasicPuzzleGenerator.CreatePattern(System.Int32[])">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException">Always throws.</exception>
        </member>
        <member name="T:Sudoku.Solving.Generating.DiggingPuzzleGenerator">
            <summary>
            Encapsulates a puzzle generator, whose basic algorithm is digging
            some values out of a random answer grid.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Generating.DiggingPuzzleGenerator.FastSolver">
            <summary>
            The fast solver.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Generating.DiggingPuzzleGenerator.GenerateAnswerGrid(System.Text.StringBuilder,System.Text.StringBuilder)">
            <summary>
            To generate an answer grid.
            </summary>
            <param name="puzzle">The puzzle string.</param>
            <param name="solution">The solution string.</param>
        </member>
        <member name="M:Sudoku.Solving.Generating.DiggingPuzzleGenerator.Generate">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Generating.DiggingPuzzleGenerator.CreatePattern(System.Int32[])">
            <summary>
            To create the pattern.
            </summary>
            <param name="pattern">The pattern array.</param>
        </member>
        <member name="M:Sudoku.Solving.Generating.DiggingPuzzleGenerator.CheckDuplicate(System.Text.StringBuilder,System.Int32)">
            <summary>
            Check whether the digit in its peer cells has duplicate ones.
            </summary>
            <param name="gridArray">The grid array.</param>
            <param name="cell">The cell.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="T:Sudoku.Solving.Generating.HardPatternPuzzleGenerator">
            <summary>
            Provides an extended puzzle generator.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.BlockFactor">
            <summary>
            The block factor.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.SwappingFactor">
            <summary>
            Indicates the swapping factor.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.BackdoorSearcher">
            <summary>
            The backdoor searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.Generate">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.Generate(System.Int32,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Solving.Manual.DifficultyLevel,Sudoku.Globalization.CountryCode)">
            <summary>
            To generate a sudoku grid with a backdoor filter depth.
            </summary>
            <param name="backdoorFilterDepth">
            The backdoor filter depth. When the value is -1, the generator won't check
            any backdoors.
            </param>
            <param name="progress">The progress.</param>
            <param name="difficultyLevel">The difficulty level.</param>
            <param name="countryCode">The country code.</param>
            <returns>The grid.</returns>
        </member>
        <member name="M:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.GenerateAsync(System.Int32,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Solving.Manual.DifficultyLevel,Sudoku.Globalization.CountryCode)">
            <summary>
            To generate a sudoku grid with a backdoor filter depth asynchronizedly.
            </summary>
            <param name="backdoorFilterDepth">
            The backdoor filter depth. When the value is -1, the generator won't check
            any backdoors.
            </param>
            <param name="progress">The progress.</param>
            <param name="difficultyLevel">The difficulty level.</param>
            <param name="countryCode">The country code.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.CreatePattern(System.Int32[])">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Generating.HardPatternPuzzleGenerator.RecreatePattern(System.Int32[])">
            <summary>
            To re-create the pattern.
            </summary>
            <param name="pattern">The pattern array.</param>
        </member>
        <member name="T:Sudoku.Solving.Generating.IPuzzleGenerator">
            <summary>
            Provides data for all derived puzzle generators.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Generating.IPuzzleGenerator.Rng">
            <summary>
            The random number generator.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Generating.IPuzzleGenerator.Generate">
            <summary>
            Generates a puzzle.
            </summary>
            <returns>The puzzle.</returns>
        </member>
        <member name="M:Sudoku.Solving.Generating.IPuzzleGenerator.GenerateAsync">
            <summary>
            Generates a puzzle asynchronizedly.
            </summary>
            <returns>The task.</returns>
        </member>
        <member name="T:Sudoku.Solving.Generating.TechniqueFilteringPuzzleGenerator">
            <summary>
            Provides a puzzle generator with the technique filter.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Generating.TechniqueFilteringPuzzleGenerator.DefaultFilter">
            <summary>
            Indicates the default filter.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Generating.TechniqueFilteringPuzzleGenerator.ManualSolver">
            <summary>
            The default manual solver.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Generating.TechniqueFilteringPuzzleGenerator.Generate">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Generating.TechniqueFilteringPuzzleGenerator.Generate(Sudoku.Solving.Manual.TechniqueCodeFilter,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Globalization.CountryCode)">
            <summary>
            To generate a puzzle that contains the specified technique code.
            </summary>
            <param name="techniqueCodeFilter">
            The technique codes to filter. If the parameter is <see langword="null"/>,
            the process will use the default filter.
            </param>
            <param name="progress">The progress.</param>
            <param name="countryCode">The country code.</param>
            <returns>The puzzle.</returns>
        </member>
        <member name="M:Sudoku.Solving.Generating.TechniqueFilteringPuzzleGenerator.GenerateAsync(Sudoku.Solving.Manual.TechniqueCodeFilter,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Globalization.CountryCode)">
            <summary>
            To generate a puzzle that contains the specified technique code asynchronizedly.
            </summary>
            <param name="techniqueCodeFilter">
            The technique codes to filter. If the parameter is <see langword="null"/>,
            the process will use the default filter.
            </param>
            <param name="progress">The progress.</param>
            <param name="countryCode">The globalization string.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Sudoku.Solving.ISolver">
            <summary>
            Indicates an instance used for solving a sudoku puzzle.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.ISolver.SolverName">
            <summary>
            Indicates the name of this solver.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.ISolver.Solve(Sudoku.Data.SudokuGrid@)">
            <summary>
            To solve the specified puzzle.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The puzzle.</param>
            <returns>
            An <see cref="T:Sudoku.Solving.AnalysisResult"/> displaying all information of solving.
            </returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.AllStepSearcher">
            <summary>
            Provides a step searcher that is different with <see cref="T:Sudoku.Solving.Manual.StepSearcher"/>.
            </summary>
            <remarks>
            All-step searcher (<see cref="T:Sudoku.Solving.Manual.AllStepSearcher"/>) is a searcher that find all steps in a given grid,
            which can be a initial grid or a intermediate grid. Different with <see cref="T:Sudoku.Solving.Manual.ManualSolver"/>,
            this searcher only calculates for the grid in an only status.
            In addition, different with <see cref="T:Sudoku.Solving.Manual.StepSearcher"/>, this searcher searches all
            possible solving techniques.
            </remarks>
            <seealso cref="T:Sudoku.Solving.Manual.StepSearcher"/>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolver"/>
        </member>
        <member name="F:Sudoku.Solving.Manual.AllStepSearcher._solver">
            <summary>
            Indicates the inner solver.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.AllStepSearcher.#ctor(Sudoku.Solving.Manual.ManualSolver)">
            <summary>
            Initializes an instance with the specified solver.
            </summary>
            <param name="solver">The solver.</param>
            <remarks>
            This solver will provide the settings of the searching operation.
            </remarks>
        </member>
        <member name="M:Sudoku.Solving.Manual.AllStepSearcher.Search(Sudoku.Data.SudokuGrid@,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Globalization.CountryCode)">
            <summary>
            Search for all possible steps in a grid.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="progress">The progress.</param>
            <param name="countryCode">The country code.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.AlsStepInfo">
            <summary>
            Provides a usage of <b>almost locked set</b> (ALS) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.AlsStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>almost locked set</b> (ALS) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.AlsStepSearcher">
            <summary>
            Encapsulates an <b>almost locked set</b> (ALS) technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.AlsStepSearcher.AllowOverlapping">
            <summary>
            Indicates whether the ALSes can be overlapped with each other.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.AlsStepSearcher.AlsShowRegions">
            <summary>
            Indicates whether the ALSes shows their regions rather than cells.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.AlsStepSearcher.AllowAlsCycles">
            <summary>
            Indicates whether the solver will check ALS cycles.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.AlsStepSearcher.#ctor">
            <inheritdoc cref="T:Sudoku.DocComments.DefaultConstructor"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.AlsStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes an instance with the specified information.
            </summary>
            <param name="allowOverlapping">Indicates whether the ALSes can be overlapped with each other.</param>
            <param name="alsShowRegions">Indicates whether the ALSes shows their regions rather than cells.</param>
            <param name="allowAlsCycles">Indicates whether the solver will check ALS cycles.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.Als">
            <summary>
            Encapsulates a normal ALS.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.#ctor(System.Int16,Sudoku.Data.Cells@)">
            <summary>
            Initializes an instance with the specified digit mask and the map of cells.
            </summary>
            <param name="digitMask">The digit mask.</param>
            <param name="map">(<see langword="in"/> parameter) The map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.#ctor(System.Int16,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <summary>
            Initializes an instance with the specified digit mask and the map of cells.
            </summary>
            <param name="digitMask">The digit mask.</param>
            <param name="map">(<see langword="in"/> parameter) The map.</param>
            <param name="possibleEliminationSet">
            (<see langword="in"/> parameter) The possible elimination set.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.Als.IsBivalueCell">
            <summary>
            Indicates whether this instance is a bi-value-cell ALS.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.Als.Region">
            <summary>
            Indicates the region that the instance lies in.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.Als.DigitsMask">
            <summary>
            Indicates the mask of each digit.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.Als.Map">
            <summary>
            Indicates the map that ALS lying on.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.Als.PossibleEliminationSet">
            <summary>
            Indicates the possible elimination set.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.Als.StrongLinksMask">
            <summary>
            Indicates all strong links in this ALS. The result will be represented
            as a <see cref="T:System.Int16"/> mask of 9 bits indicating which bits used.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.Deconstruct(System.Int32@,System.Int16@,Sudoku.Data.Cells@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="region">(<see langword="out"/> parameter) The region.</param>
            <param name="digitsMask">(<see langword="out"/> parameter) The digits mask.</param>
            <param name="map">(<see langword="out"/> parameter) The map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.Deconstruct(System.Boolean@,System.Int32@,System.Int16@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Collections.Generic.IEnumerable{System.Int16}@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="isBivalueCell">
            (<see langword="out"/> parameter) Indicates whether the specified ALS is bi-value.
            </param>
            <param name="region">(<see langword="out"/> parameter) The region.</param>
            <param name="digitsMask">(<see langword="out"/> parameter) The digits mask.</param>
            <param name="map">(<see langword="out"/> parameter) The map.</param>
            <param name="possibleEliminations">(<see langword="out"/> parameter) The possible eliminations.</param>
            <param name="strongLinksMask">(<see langword="out"/> parameter) The strong links mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.ContainsDigit(Sudoku.Data.SudokuGrid@,System.Int32,Sudoku.Data.Cells@)">
            <summary>
            Indicates whether the specified grid contains the digit.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="digit">The digit.</param>
            <param name="result">(<see langword="out"/> parameter) The result.</param>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.Equals(Sudoku.Solving.Manual.Alses.Basic.Als@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
            <remarks>
            If you want to determine the equality of two instance, I recommend you
            <b>should</b> use method <see cref="M:Sudoku.Solving.Manual.Alses.Basic.Als.Equals(Sudoku.Solving.Manual.Alses.Basic.Als@)"/> instead of this method.
            </remarks>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.GetAllAlses(Sudoku.Data.SudokuGrid)">
            <summary>
            To search for all ALSes in the specified grid.
            </summary>
            <param name="grid">The grid.</param>
            <returns>All ALSes searched.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.op_Equality(Sudoku.Solving.Manual.Alses.Basic.Als@,Sudoku.Solving.Manual.Alses.Basic.Als@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Equality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.Als.op_Inequality(Sudoku.Solving.Manual.Alses.Basic.Als@,Sudoku.Solving.Manual.Alses.Basic.Als@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Inequality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepInfo">
            <summary>
            Provides a usage of <b>almost locked sets W-Wing</b> (ALS-W-Wing) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Als1">The ALS 1.</param>
            <param name="Als2">The ALS 2.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
            <param name="WDigitsMask">The W digit mask.</param>
            <param name="X">The digit X.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Alses.Basic.Als@,Sudoku.Solving.Manual.Alses.Basic.Als@,Sudoku.Data.ConjugatePair@,System.Int16,System.Int32)">
            <summary>
            Provides a usage of <b>almost locked sets W-Wing</b> (ALS-W-Wing) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Als1">The ALS 1.</param>
            <param name="Als2">The ALS 2.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
            <param name="WDigitsMask">The W digit mask.</param>
            <param name="X">The digit X.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepSearcher">
            <summary>
            Encapsulates an <b>almost locked sets W-Wing</b> (ALS-W-Wing) technique.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsWWingStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepInfo">
            <summary>
            Provides a usage of <b>almost locked sets XY-Wing</b> (ALS-XY-Wing) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Als1">The ALS 1.</param>
            <param name="Als2">The ALS 2.</param>
            <param name="Bridge">The bridge ALS.</param>
            <param name="XDigitsMask">The X digits mask.</param>
            <param name="YDigitsMask">The Y digits mask.</param>
            <param name="ZDigitsMask">The Z digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Alses.Basic.Als@,Sudoku.Solving.Manual.Alses.Basic.Als@,Sudoku.Solving.Manual.Alses.Basic.Als@,System.Int16,System.Int16,System.Int16)">
            <summary>
            Provides a usage of <b>almost locked sets XY-Wing</b> (ALS-XY-Wing) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Als1">The ALS 1.</param>
            <param name="Als2">The ALS 2.</param>
            <param name="Bridge">The bridge ALS.</param>
            <param name="XDigitsMask">The X digits mask.</param>
            <param name="YDigitsMask">The Y digits mask.</param>
            <param name="ZDigitsMask">The Z digits mask.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepSearcher">
            <summary>
            Encapsulates an <b>almost locked sets XY-Wing</b> (ALS-XY-Wing) technique.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXyWingStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepInfo">
            <summary>
            Provides a usage of <b>almost locked sets XZ rule</b> (ALS-XZ)
            or <b>extended subset principle</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Als1">The ALS 1 used.</param>
            <param name="Als2">The ALS 2 used.</param>
            <param name="XDigitsMask">The X digits mask.</param>
            <param name="ZDigitsMask">The Z digits mask.</param>
            <param name="IsDoublyLinked">
            <para>Indicates whether the instance is a doubly linked ALS-XZ.</para>
            <para>
            The property contains three different values:
            <list type="table">
            <item>
            <term><c><see langword="true"/></c></term>
            <description>The current instance is a Doubly Linked ALS-XZ.</description>
            </item>
            <item>
            <term><c><see langword="false"/></c></term>
            <description>The current instance is a Singly Linked ALS-XZ.</description>
            </item>
            <item>
            <term><c><see langword="null"/></c></term>
            <description>The current instance is a Extended Subset Principle.</description>
            </item>
            </list>
            </para>
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Alses.Basic.Als@,Sudoku.Solving.Manual.Alses.Basic.Als@,System.Int16,System.Int16,System.Nullable{System.Boolean})">
            <summary>
            Provides a usage of <b>almost locked sets XZ rule</b> (ALS-XZ)
            or <b>extended subset principle</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Als1">The ALS 1 used.</param>
            <param name="Als2">The ALS 2 used.</param>
            <param name="XDigitsMask">The X digits mask.</param>
            <param name="ZDigitsMask">The Z digits mask.</param>
            <param name="IsDoublyLinked">
            <para>Indicates whether the instance is a doubly linked ALS-XZ.</para>
            <para>
            The property contains three different values:
            <list type="table">
            <item>
            <term><c><see langword="true"/></c></term>
            <description>The current instance is a Doubly Linked ALS-XZ.</description>
            </item>
            <item>
            <term><c><see langword="false"/></c></term>
            <description>The current instance is a Singly Linked ALS-XZ.</description>
            </item>
            <item>
            <term><c><see langword="null"/></c></term>
            <description>The current instance is a Extended Subset Principle.</description>
            </item>
            </list>
            </para>
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepSearcher">
            <summary>
            Encapsulates an <b>almost locked set XZ rule</b> (ALS-XZ) technique searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.AlsXzStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.DbStepInfo">
            <summary>
            Provides a usage of <b>death blossom</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pivot">The pivot cell.</param>
            <param name="Alses">All ALSes used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DbStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.Int32,Sudoku.Solving.Manual.Alses.Basic.Als})">
            <summary>
            Provides a usage of <b>death blossom</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pivot">The pivot cell.</param>
            <param name="Alses">All ALSes used.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DbStepInfo.PetalsCount">
            <summary>
            Indicates how many petals used.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DbStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DbStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DbStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DbStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.DbStepSearcher">
            <summary>
            Encapsulates a <b>death blossom</b> technique.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.Basic.DbStepSearcher._maxSize">
            <summary>
            Indicates the maximum number of ALSes to search.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DbStepSearcher.#ctor(System.Int32)">
            <summary>
            Initializes an instance with the specified size.
            </summary>
            <param name="maxSize">The size.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DbStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DbStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepInfo">
            <summary>
            Provides a usage of <b>death blossom</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pivot">The pivot cell.</param>
            <param name="Alses">All ALSes used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.Int32,Sudoku.Solving.Manual.Alses.Basic.Als})">
            <summary>
            Provides a usage of <b>death blossom</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pivot">The pivot cell.</param>
            <param name="Alses">All ALSes used.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepInfo.PetalsCount">
            <summary>
            Indicates how many petals used.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepSearcher">
            <summary>
            Encapsulates a <b>death blossom</b> technique.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepSearcher._maxPetals">
            <summary>
            Indicates the max petals to search.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepSearcher.#ctor(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initialize an instance with the specified information.
            </summary>
            <param name="allowOverlapping">
            Indicates whether the ALSes can be overlapped with each other.
            </param>
            <param name="alsShowRegions">
            Indicates whether all ALSes shows their regions rather than cells.
            </param>
            <param name="maxPetals">
            Indicates the max petals of instance to search.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepSearcher.ProcessDeathAlsInfo(Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells[],System.Int16[],System.Int32[0:,0:],System.Collections.Generic.IReadOnlyList{Sudoku.Solving.Manual.Alses.Basic.Als})">
            <summary>
            Process death ALSes information.
            </summary>
            <param name="grid">The grid.</param>
            <param name="candMaps">The digit distributions.</param>
            <param name="checkedCandidates">All checked candidates.</param>
            <param name="death">The death table.</param>
            <param name="alses">The ALS list.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Basic.DeathBlossomStepSearcher.PreprocessAndRecordAlses(Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@)">
            <summary>
            To preprocess and record all ALSes.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="emptyMap">(<see langword="in"/> parameter) The map of all empty cells.</param>
            <returns>All ALSes.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.EripStepInfo">
            <summary>
            Provides a usage of <b>empty rectangle intersection pair</b> (ERIP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="StartCell">The start cell.</param>
            <param name="EndCell">The end cell.</param>
            <param name="Region">The region that empty rectangle forms.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.EripStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>empty rectangle intersection pair</b> (ERIP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="StartCell">The start cell.</param>
            <param name="EndCell">The end cell.</param>
            <param name="Region">The region that empty rectangle forms.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.EripStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.EripStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.EripStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.EripStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.EripStepSearcher">
            <summary>
            Encapsulates an <b>empty rectangle intersection pair</b> (ERIP) technique.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.EripStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.EripStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepInfo">
            <summary>
            Provides a usage of <b>almost locked sets net</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">Indicates the cells used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@)">
            <summary>
            Provides a usage of <b>almost locked sets net</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">Indicates the cells used.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepSearcher">
            <summary>
            Encapsulates a <b>multi-sector locked sets</b> (MSLS) technique. This searcher is
            the real technique, different with the abstract class <see cref="T:Sudoku.Solving.Manual.Alses.Mslses.MslsStepSearcher"/>.
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.Alses.Mslses.MslsStepSearcher"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepSearcher.Patterns">
            <summary>
            Indicates the list initialized with the static constructor.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.AlsNetStepSearcher.#cctor">
            <inheritdoc cref="T:Sudoku.DocComments.StaticConstructor"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Mslses.MslsStepInfo">
            <summary>
            Provides a usage of <b>multi-sector locked set</b> (MSLS) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.MslsStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>multi-sector locked set</b> (MSLS) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Mslses.MslsStepSearcher">
            <summary>
            Encapsulates a <b>multi-sector locked sets</b> (MSLS) technique.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepInfo">
            <summary>
            Provides a usage of <b>domino loop</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>domino loop</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells used.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepSearcher">
            <summary>
            Encapsulates a <b>domino loop</b> technique.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepSearcher.GetCombinations(System.Int16)">
            <summary>
            Get all combinations that contains all set bits from the specified number.
            </summary>
            <param name="seed">The specified number.</param>
            <returns>All combinations.</returns>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepSearcher.SkLoopTable">
            <summary>
            The position table of all SK-loops.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepSearcher.RegionMaps">
            <summary>
            The region maps.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Mslses.SkLoopStepSearcher.#cctor">
            <inheritdoc cref="T:Sudoku.DocComments.StaticConstructor"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Sdc3dStepInfo">
            <summary>
            Provides a usage of <b>3-dimension sue de coq</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="RowDigitsMask">The row digits mask.</param>
            <param name="ColumnDigitsMask">The column digits mask.</param>
            <param name="BlockDigitsMask">The block digits mask.</param>
            <param name="RowCells">The row cells map.</param>
            <param name="ColumnCells">The column cells map.</param>
            <param name="BlockCells">The block cells map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Sdc3dStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <summary>
            Provides a usage of <b>3-dimension sue de coq</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="RowDigitsMask">The row digits mask.</param>
            <param name="ColumnDigitsMask">The column digits mask.</param>
            <param name="BlockDigitsMask">The block digits mask.</param>
            <param name="RowCells">The row cells map.</param>
            <param name="ColumnCells">The column cells map.</param>
            <param name="BlockCells">The block cells map.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Sdc3dStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Sdc3dStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Sdc3dStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Sdc3dStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.Sdc3dStepSearcher">
            <summary>
            Encapsulates a <b>3-dimension sue de coq</b> technique.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Sdc3dStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.Sdc3dStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.Sdc3dStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.SdcStepInfo">
            <summary>
            Provides a usage of <b>sue de coq</b> (SdC) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Block">The block.</param>
            <param name="Line">The line.</param>
            <param name="BlockMask">The block mask.</param>
            <param name="LineMask">The line mask.</param>
            <param name="IntersectionMask">The intersection mask.</param>
            <param name="IsCannibalistic">Indicates whether the SdC is cannibalistic.</param>
            <param name="IsolatedDigitsMask">The isolated digits mask.</param>
            <param name="BlockCells">The map of block cells.</param>
            <param name="LineCells">The map of line cells.</param>
            <param name="IntersectionCells">The map of intersection cells.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.SdcStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int16,System.Int16,System.Int16,System.Boolean,System.Int16,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <summary>
            Provides a usage of <b>sue de coq</b> (SdC) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Block">The block.</param>
            <param name="Line">The line.</param>
            <param name="BlockMask">The block mask.</param>
            <param name="LineMask">The line mask.</param>
            <param name="IntersectionMask">The intersection mask.</param>
            <param name="IsCannibalistic">Indicates whether the SdC is cannibalistic.</param>
            <param name="IsolatedDigitsMask">The isolated digits mask.</param>
            <param name="BlockCells">The map of block cells.</param>
            <param name="LineCells">The map of line cells.</param>
            <param name="IntersectionCells">The map of intersection cells.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.SdcStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.SdcStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.SdcStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.SdcStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Alses.SdcStepSearcher">
            <summary>
            Encapsulates a <b>sue de coq</b> (SdC) technique searcher.
            Cannibalistic SdCs can be found also.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.SdcStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Alses.SdcStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Alses.SdcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.AicStepInfo">
            <summary>
            Provides a usage of <b>(grouped) alternating inference chain</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="XEnabled">Indicates whether the chain is enabled X strong relations.</param>
            <param name="YEnabled">Indicates whether the chain is enabled Y strong relations.</param>
            <param name="Target">The target node.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Boolean,System.Boolean,Sudoku.Data.Node@)">
            <summary>
            Provides a usage of <b>(grouped) alternating inference chain</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="XEnabled">Indicates whether the chain is enabled X strong relations.</param>
            <param name="YEnabled">Indicates whether the chain is enabled Y strong relations.</param>
            <param name="Target">The target node.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.AicStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.AicStepInfo.SortKey">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.AicStepInfo.FlatComplexity">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.AicStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.AicStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.AicStepInfo.IsXChain">
            <summary>
            Indicates whether the specified chain is an X-Chain.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.AicStepSearcher">
            <summary>
            Encapsulates an <b>(grouped) alternating inference chain</b> (<b>(grouped) AIC</b>) 
            or <b>(grouped) continuous nice loop</b> (<b>(grouped) CNL</b>) technique searcher.
            </summary>
            <remarks>
            I want to use BFS (breadth-first searching) to search for chains, which can avoid
            the redundant backtracking.
            </remarks>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.AicStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.Chaining.ChainingStepInfo},Sudoku.Data.SudokuGrid@,System.Boolean,System.Boolean)">
            <summary>
            Search for chains of each type.
            </summary>
            <param name="accumulator">(<see langword="in"/> parameter) The accumulator.</param>
            <param name="grid">Thr grid.</param>
            <param name="xEnabled">
            Indicates whether the strong links in regions are enabled to search for.
            </param>
            <param name="yEnabled">
            Indicates whether the strong links in cells are enabled to search for.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepSearcher.DoUnaryChaining(System.Collections.Generic.IList{Sudoku.Solving.Manual.Chaining.ChainingStepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Node@,System.Boolean,System.Boolean)">
            <summary>
            Do unary chaining.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pOn">(<see langword="in"/> parameter) The node set on.</param>
            <param name="xEnabled">
            Indicates whether the strong links in regions are enabled to search for.
            </param>
            <param name="yEnabled">
            Indicates whether the strong links in cells are enabled to search for.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepSearcher.CreateLoopHint(Sudoku.Data.SudokuGrid@,Sudoku.Data.Node@,System.Boolean,System.Boolean)">
            <summary>
            Create a loop hint (i.e. a <see cref="T:Sudoku.Solving.Manual.Chaining.LoopStepInfo"/>).
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="destOn">(<see langword="in"/> parameter) The start node.</param>
            <param name="xEnabled">Indicates whether X-Chains are enabled.</param>
            <param name="yEnabled">Indicates whether Y-Chains are enabled.</param>
            <returns>
            If the number of conclusions are not zero (in other words, if worth), the information
            will be returned; otherwise, <see langword="null"/>.
            </returns>
            <seealso cref="T:Sudoku.Solving.Manual.Chaining.LoopStepInfo"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepSearcher.CreateAicHint(Sudoku.Data.SudokuGrid@,Sudoku.Data.Node@,System.Boolean,System.Boolean)">
            <summary>
            Create an AIC hint (i.e. a <see cref="T:Sudoku.Solving.Manual.Chaining.AicStepInfo"/>).
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="target">(<see langword="in"/> parameter) The elimination node (which is used for searching the whole chain).</param>
            <param name="xEnabled">Indicates whether X-Chains are enabled.</param>
            <param name="yEnabled">Indicates whether Y-Chains are enabled.</param>
            <returns>
            If the number of conclusions are not zero (in other words, if worth), the information
            will be returned; otherwise, <see langword="null"/>.
            </returns>
            <seealso cref="T:Sudoku.Solving.Manual.Chaining.AicStepInfo"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepSearcher.DoAic(Sudoku.Data.SudokuGrid@,System.Collections.Generic.ISet{Sudoku.Data.Node},System.Collections.Generic.ISet{Sudoku.Data.Node},System.Boolean,System.Collections.Generic.IList{Sudoku.Data.Node},Sudoku.Data.Node@)">
            <summary>
            Simulate the passing strong and weak links in AICs.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="onToOn">The nodes that the end candidates are currently on.</param>
            <param name="onToOff">The nodes the end candidates are currently off.</param>
            <param name="yEnabled">Indicates whether the Y-Chains are enabled.</param>
            <param name="chains">The chain nodes.</param>
            <param name="source">(<see langword="in"/> parameter) The source node.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.AicStepSearcher.DoLoops(Sudoku.Data.SudokuGrid@,System.Collections.Generic.ISet{Sudoku.Data.Node},System.Collections.Generic.ISet{Sudoku.Data.Node},System.Boolean,System.Boolean,System.Collections.Generic.IList{Sudoku.Data.Node},Sudoku.Data.Node@)">
            <summary>
            Simulate the passing strong and weak links in CNLs.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="onToOn">The nodes that the end candidates are currently on.</param>
            <param name="onToOff">The nodes the end candidates are currently off.</param>
            <param name="xEnabled">Indicates whether the X-Chains are enabled.</param>
            <param name="yEnabled">Indicates whether the Y-Chains are enabled.</param>
            <param name="loops">The loop nodes.</param>
            <param name="source">(<see langword="in"/> parameter) The source node.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo">
            <summary>
            Provides a usage of <b>contradiction forcing chains</b> and <b>double forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SourceNode">Indicates the source node.</param>
            <param name="FromOnNode">Indicates the node that is the destination (on side).</param>
            <param name="FromOffNode">Indicates the node that is the destination (off side).</param>
            <param name="IsAbsurd">Indicates whether the chain is absurd.</param>
            <param name="IsMultiple">Indicates whether the chain is multiple.</param>
            <param name="IsNishio">Indicates whether the chain is nishio.</param>
            <param name="Level">Indicates the dynamic level of the chain.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Node@,Sudoku.Data.Node@,Sudoku.Data.Node@,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides a usage of <b>contradiction forcing chains</b> and <b>double forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SourceNode">Indicates the source node.</param>
            <param name="FromOnNode">Indicates the node that is the destination (on side).</param>
            <param name="FromOffNode">Indicates the node that is the destination (off side).</param>
            <param name="IsAbsurd">Indicates whether the chain is absurd.</param>
            <param name="IsMultiple">Indicates whether the chain is multiple.</param>
            <param name="IsNishio">Indicates whether the chain is nishio.</param>
            <param name="Level">Indicates the dynamic level of the chain.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo.SortKey">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo.Anchor">
            <summary>
            Indicates the anchor.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo.FlatComplexity">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.BinaryChainingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo">
            <summary>
            Provides a usage of <b>cell forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SourceCell">The source cell.</param>
            <param name="Chains">All branches.</param>
            <param name="IsDynamic">Indicates whether the chain is dynamic.</param>
            <param name="Level">Indicates the depth level of the dynamic chains.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.Int32,Sudoku.Data.Node},System.Boolean,System.Int32)">
            <summary>
            Provides a usage of <b>cell forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SourceCell">The source cell.</param>
            <param name="Chains">All branches.</param>
            <param name="IsDynamic">Indicates whether the chain is dynamic.</param>
            <param name="Level">Indicates the depth level of the dynamic chains.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo.SortKey">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo.FlatComplexity">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.CellChainingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.ChainingStepInfo">
            <summary>
            Provides a usage of <b>chain</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="XEnabled">Indicates whether the chain is enabled X strong relations.</param>
            <param name="YEnabled">Indicates whether the chain is enabled Y strong relations.</param>
            <param name="IsNishio">Indicates whether the chain is a nishio forcing chains (X-Forcing chains).</param>
            <param name="IsMultiple">
            Indicates whether the chain is a multiple forcing chains (Cell forcing chains and Region forcing chains).
            </param>
            <param name="IsDynamic">Indicates whether the chain is a dynamic forcng chains.</param>
            <param name="Level">The dynamic searching level.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Provides a usage of <b>chain</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="XEnabled">Indicates whether the chain is enabled X strong relations.</param>
            <param name="YEnabled">Indicates whether the chain is enabled Y strong relations.</param>
            <param name="IsNishio">Indicates whether the chain is a nishio forcing chains (X-Forcing chains).</param>
            <param name="IsMultiple">
            Indicates whether the chain is a multiple forcing chains (Cell forcing chains and Region forcing chains).
            </param>
            <param name="IsDynamic">Indicates whether the chain is a dynamic forcng chains.</param>
            <param name="Level">The dynamic searching level.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.SortKey">
            <summary>
            The sort key.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.FlatComplexity">
            <summary>
            The flat complexity.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.BaseDifficulty">
            <summary>
            The base difficulty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.LengthDifficulty">
            <summary>
            The length difficulty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.Complexity">
            <summary>
            The total complexity.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.IsXyChain">
            <summary>
            Indicates whether the specified chain is an XY-Chain.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.Equals(Sudoku.Solving.Manual.Chaining.ChainingStepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepInfo.GetNestedSuffix(System.Int32)">
            <summary>
            Get the nested suffix with the specified level.
            </summary>
            <param name="level">The level.</param>
            <returns>The name suffix.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.ChainingStepSearcher">
            <summary>
            Encapsulates a <b>chain</b> technique searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepSearcher.GetOnToOff(Sudoku.Data.SudokuGrid@,Sudoku.Data.Node@,System.Boolean)">
            <summary>
            Get all available weak links.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="p">(<see langword="in"/> parameter) The current node.</param>
            <param name="yEnabled">Indicates whether the Y-Chains are enabled.</param>
            <returns>All possible weak links.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepSearcher.GetOffToOn(Sudoku.Data.SudokuGrid@,Sudoku.Data.Node@,System.Boolean,System.Boolean,System.Nullable{Sudoku.Data.SudokuGrid}@,System.Collections.Generic.ISet{Sudoku.Data.Node},System.Boolean)">
            <summary>
            Get all available strong links.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="p">(<see langword="in"/> parameter) The current node.</param>
            <param name="xEnabled">Indicates whether the X-Chains are enabled.</param>
            <param name="yEnabled">Indicates whether the Y-Chains are enabled.</param>
            <param name="isDynamic">
            Indicates whether the current searcher is searching for dynamic chains. If so,
            we can't use those static properties to optimize the performance.
            </param>
            <returns>All possible strong links.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepSearcher.AddHiddenParentsOfCell(Sudoku.Data.Node@,Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Collections.Generic.ISet{Sudoku.Data.Node})">
            <summary>
            Add hidden parents of a cell.
            </summary>
            <param name="p">(<see langword="ref"/> parameter) The node.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="source">(<see langword="in"/> parameter) The source grid.</param>
            <param name="offNodes">All off nodes.</param>
            <exception cref="T:Sudoku.Runtime.SudokuRuntimeException">
            Throws when the parent node of the specified node cannot be found.
            </exception>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepSearcher.AddHiddenParentsOfRegion(Sudoku.Data.Node@,Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,Sudoku.Data.RegionLabel,System.Collections.Generic.ISet{Sudoku.Data.Node})">
            <summary>
            Add hidden parents of a region.
            </summary>
            <param name="p">(<see langword="ref"/> parameter) The node.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="source">(<see langword="in"/> parameter) The source grid.</param>
            <param name="currRegion">The current region label.</param>
            <param name="offNodes">All off nodes.</param>
            <exception cref="T:Sudoku.Runtime.SudokuRuntimeException">
            Throws when the parent node of the specified node cannot be found.
            </exception>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.ChainingStepSearcher.SortInfo(System.Collections.Generic.IEnumerable{Sudoku.Solving.Manual.Chaining.ChainingStepInfo})">
            <summary>
            Remove duplicate information instances and sort them.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result list.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.ChainingTypeCode">
            <summary>
            Indicates a type code for a chain.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.XChain">
            <summary>
            Indicates the X-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.FishyCycle">
            <summary>
            Indicates the X-Cycle (Fishy Cycle).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.XyChain">
            <summary>
            Indicates the XY-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.XyCycle">
            <summary>
            Indicates the XY-Cycle.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.ContinuousNiceLoop">
            <summary>
            Indicates the continuous nice loop.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.XyXChain">
            <summary>
            Indicates the XY-X-Chain.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.DiscontinuousNiceLoop">
            <summary>
            Indicates the discontinuous nice loop.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.Aic">
            <summary>
            Indicates the alternating inference chain.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.CellFc">
            <summary>
            Indicates the cell forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.RegionFc">
            <summary>
            Indictaes the region forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.ContradictionFc">
            <summary>
            Indicates the contradiction forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.DoubleFc">
            <summary>
            Indicates the double forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.DynamicCellFc">
            <summary>
            Indicates the dynamic cell forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.DynamicRegionFc">
            <summary>
            Indictaes the dynamic region forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.DynamicContradictionFc">
            <summary>
            Indicates the dynamic contradiction forcing chains.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.ChainingTypeCode.DynamicDoubleFc">
            <summary>
            Indicates the dynamic double forcing chains.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.FcStepSearcher">
            <summary>
            Encapsulates an <b>forcing chains</b> (<b>FCs</b>) technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.FcStepSearcher.IsNishio">
            <summary>
            Indicates the information.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.FcStepSearcher.IsMultiple">
            <summary>
            Indicates the information.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.FcStepSearcher.IsDynamic">
            <summary>
            Indicates the information.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.FcStepSearcher.Level">
            <summary>
            Indicates the level of the searching depth.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Chaining.FcStepSearcher._savedGrid">
            <summary>
            Indicates the grid that is used in processing.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes an instance with the specified information.
            </summary>
            <param name="nishio">Indicates whether the searcher should search for nishio chains.</param>
            <param name="multiple">Indicates whether the searcher should search for multiple chains.</param>
            <param name="dynamic">Indicates whether the searcher should search for dynamic chains.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.FcStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.Advanced(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Collections.Generic.Set{Sudoku.Data.Node})">
            <summary>
            Get all advanced nodes.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="source">(<see langword="in"/> parameter) The source.</param>
            <param name="offNodes">All nodes that is off.</param>
            <returns>All nodes.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.Chaining.ChainingStepInfo},Sudoku.Data.SudokuGrid@)">
            <summary>
            Search for chains of each type.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">(<see langword="ref"/> parameter) The grid.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.DoBinaryChaining(System.Collections.Generic.IList{Sudoku.Solving.Manual.Chaining.ChainingStepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Node@,Sudoku.Data.Node@,System.Collections.Generic.Set{Sudoku.Data.Node},System.Collections.Generic.Set{Sudoku.Data.Node},System.Boolean,System.Boolean)">
            <summary>
            Do binary chaining.
            </summary>
            <param name="accumulator">The current accumulator.</param>
            <param name="grid">(<see langword="ref"/> parameter) The grid.</param>
            <param name="pOn">(<see langword="in"/> parameter) The on node.</param>
            <param name="pOff">(<see langword="in"/> parameter) The off node.</param>
            <param name="onToOn">The list for <c>on</c> nodes to <c>on</c> nodes.</param>
            <param name="onToOff">The list for <c>on</c> nodes to <c>off</c> nodes.</param>
            <param name="doReduction">Indicates whether the method executes double chaining.</param>
            <param name="doContradiction">Indicates whether the method executes contradiction chaining.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.DoRegionChaining(System.Collections.Generic.IList{Sudoku.Solving.Manual.Chaining.ChainingStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,System.Collections.Generic.Set{Sudoku.Data.Node},System.Collections.Generic.Set{Sudoku.Data.Node})">
            <summary>
            Do region chaining.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="ref"/> parameter) </param>
            <param name="cell">The cell.</param>
            <param name="digit">The digit.</param>
            <param name="onToOn">The list for <c>on</c> nodes to <c>on</c> nodes.</param>
            <param name="onToOff">The list for <c>on</c> nodes to <c>off</c> nodes.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.DoChaining(Sudoku.Data.SudokuGrid@,System.Collections.Generic.Set{Sudoku.Data.Node},System.Collections.Generic.Set{Sudoku.Data.Node})">
            <summary>
            Do chaining (i.e. multiple chaining).
            </summary>
            <param name="grid">(<see langword="ref"/> parameter) The grid.</param>
            <param name="toOn">The list to <c>on</c> nodes.</param>
            <param name="toOff">The list to <c>off</c> nodes.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.CreateChainingOnHint(Sudoku.Data.Node@,Sudoku.Data.Node@,Sudoku.Data.Node@,Sudoku.Data.Node@,System.Boolean)">
            <summary>
            Create a chaining hint whose conclusion is an on result.
            </summary>
            <param name="destOn">(<see langword="in"/> parameter) The destination on node.</param>
            <param name="destOff">(<see langword="in"/> parameter) The destination off node.</param>
            <param name="source">(<see langword="in"/> parameter) The source node.</param>
            <param name="target">(<see langword="in"/> parameter) The target node.</param>
            <param name="isAbsurd">Indicates whether the chain is absurd.</param>
            <returns>The hint.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.CreateChainingOffHint(Sudoku.Data.Node@,Sudoku.Data.Node@,Sudoku.Data.Node@,Sudoku.Data.Node@,System.Boolean)">
            <summary>
            Create a chaining hint whose conclusion is an off result.
            </summary>
            <param name="destOn">(<see langword="in"/> parameter) The destination on node.</param>
            <param name="destOff">(<see langword="in"/> parameter) The destination off node.</param>
            <param name="source">(<see langword="in"/> parameter) The source node.</param>
            <param name="target">(<see langword="in"/> parameter) The target node.</param>
            <param name="isAbsurd">Indicates whether the chain is absurd.</param>
            <returns>The hint.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.CreateCellFcHint(Sudoku.Data.SudokuGrid@,System.Int32,Sudoku.Data.Node@,System.Collections.Generic.IReadOnlyDictionary{System.Int32,System.Collections.Generic.Set{Sudoku.Data.Node}})">
            <summary>
            Create the hint for cell forcing chains.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="sourceCell">The source cell.</param>
            <param name="target">(<see langword="in"/> parameter) The target elimination node.</param>
            <param name="outcomes">All outcomes (conclusions).</param>
            <returns>The information instance.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.FcStepSearcher.CreateRegionFcHint(System.Int32,System.Int32,Sudoku.Data.Node@,System.Collections.Generic.IDictionary{System.Int32,System.Collections.Generic.Set{Sudoku.Data.Node}})">
            <summary>
            Create a hint of region forcing chains.
            </summary>
            <param name="region">The region.</param>
            <param name="digit">The digit.</param>
            <param name="target">(<see langword="in"/> parameter) The target node.</param>
            <param name="outcomes">All outcomes (conclusions).</param>
            <returns>The technique information instance.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.LoopStepInfo">
            <summary>
            Provides a usage of <b>(grouped) continuous nice loop</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="XEnabled">Indicates whether the chain is enabled X strong relations.</param>
            <param name="yEnabled">Indicates whether the chain is enabled Y strong relations.</param>
            <param name="Target">The destination node that is off.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.LoopStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Boolean,System.Boolean,Sudoku.Data.Node@)">
            <summary>
            Provides a usage of <b>(grouped) continuous nice loop</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="XEnabled">Indicates whether the chain is enabled X strong relations.</param>
            <param name="yEnabled">Indicates whether the chain is enabled Y strong relations.</param>
            <param name="Target">The destination node that is off.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.LoopStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.LoopStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.LoopStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.LoopStepInfo.SortKey">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.LoopStepInfo.FlatComplexity">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.LoopStepInfo.IsXCycle">
            <summary>
            Indicates whether the specified cycle is an X-Cycle.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.LoopStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo">
            <summary>
            Provides a usage of <b>region forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region.</param>
            <param name="Digit">The digit.</param>
            <param name="Chains">All branches.</param>
            <param name="IsDynamic">Indicates whether the chain is dynamic.</param>
            <param name="Level">Indicates the depth level of the dynamic chains.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.Int32,Sudoku.Data.Node},System.Boolean,System.Int32)">
            <summary>
            Provides a usage of <b>region forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region.</param>
            <param name="Digit">The digit.</param>
            <param name="Chains">All branches.</param>
            <param name="IsDynamic">Indicates whether the chain is dynamic.</param>
            <param name="Level">Indicates the depth level of the dynamic chains.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo.SortKey">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo.FlatComplexity">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Chaining.RegionChainingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.DifficultyLevel">
            <summary>
            Provides a difficulty kind for a puzzle.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.DifficultyLevel.Unknown">
            <summary>
            Indicates the difficulty level is unknown.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.DifficultyLevel.Easy">
            <summary>
            Indicates the difficulty is easy.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.DifficultyLevel.Moderate">
            <summary>
            Indicates the difficulty is moderate.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.DifficultyLevel.Hard">
            <summary>
            Indicates the difficulty is hard.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.DifficultyLevel.Fiendish">
            <summary>
            Indicates the difficulty is fiendish.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.DifficultyLevel.Nightmare">
            <summary>
            Indicates the difficulty is nightmare.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.DifficultyLevel.LastResort">
            <summary>
            Indicates the puzzle can't be solved
            unless using last resort methods.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.BiBiPattern">
            <summary>
            Indicates the special eliminations provided by Bi-Bi pattern.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.BiBiPattern.EliminationTypeName">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.CompatibilityTest">
            <summary>
            Indicates the eliminations provided by compatibility test.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.CompatibilityTest.EliminationTypeName">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.Mirror">
            <summary>
            Indicates the special eliminations provided by mirror.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.Mirror.EliminationTypeName">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions">
            <summary>
            Encapsulates the elimination instance.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions._innerCollection">
            <summary>
            Indicates the conclusion list.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.Count">
            <summary>
            Indicates the number of conclusions in this collection.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.EliminationTypeName">
            <summary>
            Indicates the elimination type name.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.Conclusions">
            <summary>
            Indicates the conclusions list. If the collection is empty,
            the value will be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.Add(Sudoku.Data.Conclusion@)">
            <summary>
            Add the specified conclusion into the list.
            </summary>
            <param name="conclusion">(<see langword="in"/> parameter) The element.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.AddRange(System.Collections.Generic.IEnumerable{Sudoku.Data.Conclusion})">
            <summary>
            Add a serial of conclusions.
            </summary>
            <param name="conclusions">The conclusions.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions.op_BitwiseOr(Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions,Sudoku.Solving.Manual.Exocets.Eliminations.SpecialConclusions)">
            <summary>
            Merge the specified eliminations into the <paramref name="list"/> list, and returns the reference
            of <paramref name="list"/>.
            </summary>
            <param name="list">The list.</param>
            <param name="elims">The eliminations to merge.</param>
            <returns>The reference same as <paramref name="list"/>.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.Swordfish">
            <summary>
            Indicates the special eliminations provided by fish.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.Swordfish.EliminationTypeName">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.Target">
            <summary>
            Indicates the special eliminations provided by target, which is the basic eliminations.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.Target.EliminationTypeName">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.TargetPair">
            <summary>
            Indicates the special eliminations provided by target pair.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.TargetPair.EliminationTypeName">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Eliminations.TrueBase">
            <summary>
            Indicates the special eliminations provided by true base.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Eliminations.TrueBase.EliminationTypeName">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.ExocetStepInfo">
            <summary>
            Provides a usage of <b>exocet</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Exocet">The exocet.</param>
            <param name="Digits">All digits.</param>
            <param name="LockedMemberQ">The locked member Q.</param>
            <param name="LockedMemberR">The locked member R.</param>
            <param name="TargetEliminations">The target eliminations.</param>
            <param name="MirrorEliminations">The mirror eliminations.</param>
            <param name="BibiEliminations">
            The Bi-bi pattern eliminations (only used for junior exocets).
            </param>
            <param name="TargetPairEliminations">
            The target pair eliminations (only used for junior exocets).
            </param>
            <param name="SwordfishEliminations">
            The swordfish pattern eliminations (only used for junior exocets).
            </param>
            <param name="TrueBaseEliminations">
            The true base eliminations (only used for senior exocets).
            </param>
            <param name="CompatibilityEliminations">
            The compatibility test eliminations (only used for senior exocets).
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Exocets.Pattern@,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},Sudoku.Solving.Manual.Exocets.Eliminations.Target,Sudoku.Solving.Manual.Exocets.Eliminations.Mirror,Sudoku.Solving.Manual.Exocets.Eliminations.BiBiPattern,Sudoku.Solving.Manual.Exocets.Eliminations.TargetPair,Sudoku.Solving.Manual.Exocets.Eliminations.Swordfish,Sudoku.Solving.Manual.Exocets.Eliminations.TrueBase,Sudoku.Solving.Manual.Exocets.Eliminations.CompatibilityTest)">
            <summary>
            Provides a usage of <b>exocet</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Exocet">The exocet.</param>
            <param name="Digits">All digits.</param>
            <param name="LockedMemberQ">The locked member Q.</param>
            <param name="LockedMemberR">The locked member R.</param>
            <param name="TargetEliminations">The target eliminations.</param>
            <param name="MirrorEliminations">The mirror eliminations.</param>
            <param name="BibiEliminations">
            The Bi-bi pattern eliminations (only used for junior exocets).
            </param>
            <param name="TargetPairEliminations">
            The target pair eliminations (only used for junior exocets).
            </param>
            <param name="SwordfishEliminations">
            The swordfish pattern eliminations (only used for junior exocets).
            </param>
            <param name="TrueBaseEliminations">
            The true base eliminations (only used for senior exocets).
            </param>
            <param name="CompatibilityEliminations">
            The compatibility test eliminations (only used for senior exocets).
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.ToFullString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.GetAdditional">
            <summary>
            Get the additional message.
            </summary>
            <returns>The additional message.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.ToStringInternal">
            <summary>
            Same as <see cref="M:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.ToString"/> but the implementation part.
            </summary>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepInfo.GatherConclusions(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},Sudoku.Solving.Manual.Exocets.Eliminations.Target,Sudoku.Solving.Manual.Exocets.Eliminations.Mirror,Sudoku.Solving.Manual.Exocets.Eliminations.BiBiPattern,Sudoku.Solving.Manual.Exocets.Eliminations.TargetPair,Sudoku.Solving.Manual.Exocets.Eliminations.Swordfish,Sudoku.Solving.Manual.Exocets.Eliminations.TrueBase,Sudoku.Solving.Manual.Exocets.Eliminations.CompatibilityTest)">
            <summary>
            Gather conclusions.
            </summary>
            <param name="conclusions">The conclusions.</param>
            <param name="targetEliminations">The target eliminations.</param>
            <param name="mirrorEliminations">The mirror eliminations.</param>
            <param name="bibiEliminations">The Bi-bi pattern eliminations.</param>
            <param name="targetPairEliminations">The target pair eliminations.</param>
            <param name="swordfishEliminations">The swordfish eliminations.</param>
            <param name="trueBaseEliminations">The true base eliminations.</param>
            <param name="compatibilityEliminations">The compatibility eliminations.</param>
            <returns>The gathered result.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.ExocetStepSearcher">
            <summary>
            <para>
            Encapsulates an <b>exocet</b> technique searcher. The pattern will be like:
            <code>
            .-------.-------.-------.
            | B B E | E . . | E . . |
            | . . E | Q . . | R . . |
            | . . E | Q . . | R . . |
            :-------+-------+-------:
            | . . S | S . . | S . . |
            | . . S | S . . | S . . |
            | . . S | S . . | S . . |
            :-------+-------+-------:
            | . . S | S . . | S . . |
            | . . S | S . . | S . . |
            | . . S | S . . | S . . |
            '-------'-------'-------'
            </code>
            Where:
            <list type="table">
            <item><term>B</term><description>Base Cells.</description></item>
            <item><term>Q</term><description>1st Object Pair (Target cells pair 1).</description></item>
            <item><term>R</term><description>2nd Object Pair (Target cells pair 2).</description></item>
            <item><term>S</term><description>Cross-line Cells.</description></item>
            <item><term>E</term><description>Escape Cells.</description></item>
            </list>
            </para>
            <para>
            In the data structure, all letters will be used as the same one in this exemplar.
            In addition, if senior exocet, one of two target cells will lie in cross-line cells,
            and the lines of two target cells lying on can't contain any base digits.
            </para>
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Exocets.ExocetStepSearcher.Patterns">
            <summary>
            Indicates all patterns.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Exocets.ExocetStepSearcher.CheckAdvanced">
            <summary>
            Indicates whether the searcher will find advanced eliminations.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepSearcher.#ctor(System.Boolean)">
            <summary>
            Initializes an instance with the specified region maps.
            </summary>
            <param name="checkAdvanced">
            Indicates whether the searcher will find advanced eliminations.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepSearcher.#cctor">
            <inheritdoc cref="T:Sudoku.DocComments.StaticConstructor"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepSearcher.CheckMirror(Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,System.Int16,System.Int16,Sudoku.Data.Cells@,System.Int32,System.Int32,System.Collections.Generic.IList{Sudoku.Drawing.DrawingInfo},System.Collections.Generic.IList{Sudoku.Drawing.DrawingInfo})">
            <summary>
            Check mirror eliminations.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="target">The target cell.</param>
            <param name="target2">
            The another target cell that is adjacent with <paramref name="target"/>.
            </param>
            <param name="lockedNonTarget">The locked member that is non-target digits.</param>
            <param name="baseCandidateMask">The base candidate mask.</param>
            <param name="mirror">(<see langword="in"/> parameter) The mirror map.</param>
            <param name="x">The x.</param>
            <param name="onlyOne">The only one cell.</param>
            <param name="cellOffsets">The cell offsets.</param>
            <param name="candidateOffsets">The candidate offsets.</param>
            <returns>All mirror eliminations.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.ExocetStepSearcher.GetCombinations(System.Int16)">
            <summary>
            Get all combinations that contains all set bits from the specified number.
            </summary>
            <param name="seed">The specified number.</param>
            <returns>All combinations.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.JeStepInfo">
            <summary>
            Provides a usage of <b>junior exocet</b> (JE) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Exocet">The exocet.</param>
            <param name="Digits">All digits.</param>
            <param name="LockedMemberQ">The locked member Q.</param>
            <param name="LockedMemberR">The locked member R.</param>
            <param name="TargetEliminations">The target eliminations.</param>
            <param name="MirrorEliminations">The mirror eliminations.</param>
            <param name="BibiEliminations">The Bi-bi pattern eliminations.</param>
            <param name="TargetPairEliminations">The target pair eliminations.</param>
            <param name="SwordfishEliminations">The swordfish pattern eliminations.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Exocets.Pattern@,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},Sudoku.Solving.Manual.Exocets.Eliminations.Target,Sudoku.Solving.Manual.Exocets.Eliminations.Mirror,Sudoku.Solving.Manual.Exocets.Eliminations.BiBiPattern,Sudoku.Solving.Manual.Exocets.Eliminations.TargetPair,Sudoku.Solving.Manual.Exocets.Eliminations.Swordfish)">
            <summary>
            Provides a usage of <b>junior exocet</b> (JE) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Exocet">The exocet.</param>
            <param name="Digits">All digits.</param>
            <param name="LockedMemberQ">The locked member Q.</param>
            <param name="LockedMemberR">The locked member R.</param>
            <param name="TargetEliminations">The target eliminations.</param>
            <param name="MirrorEliminations">The mirror eliminations.</param>
            <param name="BibiEliminations">The Bi-bi pattern eliminations.</param>
            <param name="TargetPairEliminations">The target pair eliminations.</param>
            <param name="SwordfishEliminations">The swordfish pattern eliminations.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.JeStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.JeStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.JeStepSearcher">
            <summary>
            Encapsulates a <b>junior exocet</b> (JE) technique searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepSearcher.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.JeStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepSearcher.GatheringTargetElims(Sudoku.Solving.Manual.Exocets.Eliminations.Target,System.Int32,Sudoku.Data.SudokuGrid@,System.Int16,System.Int16)">
            <summary>
            The method for gathering target eliminations.
            </summary>
            <param name="targetElims">The target eliminations.</param>
            <param name="cell">The cell.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="baseCandsMask">The base candidates mask.</param>
            <param name="temp">The temp mask.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value indicating whether this method has been found eliminations.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepSearcher.CheckCrossline(Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check the cross-line cells.
            </summary>
            <param name="crossline">(<see langword="in"/> parameter) The cross line cells.</param>
            <param name="digitsNeedChecking">The digits that need checking.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value indicating whether the structure passed the validation.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JeStepSearcher.CheckTarget(Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,System.Int32,System.Int16@)">
            <summary>
            Check the target cells.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pos1">The cell 1 to determine.</param>
            <param name="pos2">The cell 2 to determine.</param>
            <param name="baseCandsMask">The base candidate mask.</param>
            <param name="otherCandsMask">
            (<see langword="out"/> parameter) The other candidate mask. If failed to check,
            the value will be <c>-1</c>.
            </param>
            <returns>The <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher">
            <summary>
            Encapsulates a <b>junior exocet</b> (JE) technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.BibiIter">
            <summary>
            The iterator for Bi-bi pattern.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.GatheringMirrorEliminations(System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int16,System.Int32,Sudoku.Data.SudokuGrid@,System.Int16,System.Collections.Generic.List{Sudoku.Drawing.DrawingInfo},System.Collections.Generic.List{Sudoku.Drawing.DrawingInfo})">
            <summary>
            Gathering mirror eliminations. This method is an entry for the method check mirror in base class.
            </summary>
            <param name="tq1">The target Q1 cell.</param>
            <param name="tq2">The target Q2 cell.</param>
            <param name="tr1">The target R1 cell.</param>
            <param name="tr2">The target R2 cell.</param>
            <param name="m1">(<see langword="in"/> parameter) The mirror 1 cell.</param>
            <param name="m2">(<see langword="in"/> parameter) The mirror 2 cell.</param>
            <param name="lockedNonTarget">The locked digits that is not the target digits.</param>
            <param name="x">The X digit.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="baseCandidatesMask">The base candidates mask.</param>
            <param name="cellOffsets">The highlight cells.</param>
            <param name="candidateOffsets">The highliht candidates.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.GatheringTargetEliminations(System.Int32,Sudoku.Data.SudokuGrid@,System.Int16,System.Int16,Sudoku.Solving.Manual.Exocets.Eliminations.Target)">
            <summary>
            The method for gathering target eliminations.
            </summary>
            <param name="cell">The cell.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="baseCandidatesMask">The base candidates mask.</param>
            <param name="temp">The temp mask.</param>
            <param name="targetElims">The target eliminations.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value indicating whether this method has been found eliminations.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.CheckCrossline(Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check the cross-line cells.
            </summary>
            <param name="crossline">(<see langword="in"/> parameter) The cross line cells.</param>
            <param name="digitsNeedChecking">The digits that need checking.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value indicating whether the structure passed the validation.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.CheckTarget(Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,System.Int32,System.Int16@,System.Int32@)">
            <summary>
            Check the target cells.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pos1">The cell 1 to determine.</param>
            <param name="pos2">The cell 2 to determine.</param>
            <param name="baseCandidatesMask">The base candidate mask.</param>
            <param name="otherCandidatesMask">
            (<see langword="out"/> parameter) The other candidate mask.
            </param>
            <param name="otherRegion">(<see langword="out"/> parameter) The other region.</param>
            <returns>The <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.JuniorExocetStepSearcher.CheckBibiPattern(Sudoku.Data.SudokuGrid@,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Boolean,System.Int16,System.Int16,Sudoku.Data.Cells@,Sudoku.Solving.Manual.Exocets.Eliminations.BiBiPattern@,Sudoku.Solving.Manual.Exocets.Eliminations.TargetPair@,Sudoku.Solving.Manual.Exocets.Eliminations.Swordfish@)">
            <summary>
            Check Bi-bi pattern eliminations.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="baseCandidatesMask">The base candidate mask.</param>
            <param name="b1">The base cell 1.</param>
            <param name="b2">The base cell 2.</param>
            <param name="tq1">The target Q1 cell.</param>
            <param name="tq2">The target Q2 cell.</param>
            <param name="tr1">The target R1 cell.</param>
            <param name="tr2">The target R2 cell.</param>
            <param name="crossline">(<see langword="in"/> parameter) The cross-line cells.</param>
            <param name="isRow">
            Indicates whether the specified exocet is in the horizontal direction.
            </param>
            <param name="lockedQ">The locked member Q.</param>
            <param name="lockedR">The locked member R.</param>
            <param name="targetMap">(<see langword="in"/> parameter) The target map.</param>
            <param name="bibiElims">
            (<see langword="out"/> parameter) The Bi-bi pattern eliminations.
            </param>
            <param name="targetPairElims">
            (<see langword="out"/> parameter) The target pair eliminations.
            </param>
            <param name="swordfishElims">
            (<see langword="out"/> parameter) The swordfish eliminations.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating whether the pattern exists.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.Pattern">
            <summary>
            Indicates an exocet pattern.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <summary>
            Initializes an instance with the specified cells.
            </summary>
            <param name="base1">The base cell 1.</param>
            <param name="base2">The base cell 2.</param>
            <param name="tq1">The target Q1 cell.</param>
            <param name="tq2">The target Q2 cell.</param>
            <param name="tr1">The target R1 cell.</param>
            <param name="tr2">The target R2 cell.</param>
            <param name="crossline">(<see langword="in"/> parameter) The cross line cells.</param>
            <param name="mq1">(<see langword="in"/> parameter) The mirror Q1 cell.</param>
            <param name="mq2">(<see langword="in"/> parameter) The mirror Q2 cell.</param>
            <param name="mr1">(<see langword="in"/> parameter) The mirror R1 cell.</param>
            <param name="mr2">(<see langword="in"/> parameter) The mirror R2 cell.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.Base1">
            <summary>
            Indicates the base cell 1.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.Base2">
            <summary>
            Indicates the base cell 2.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.TargetQ1">
            <summary>
            Indicates the target Q1 cell.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.TargetQ2">
            <summary>
            Indicates the target Q2 cell.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.TargetR1">
            <summary>
            Indicates the target R1 cell.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.TargetR2">
            <summary>
            Indicates the target R2 cell.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.CrossLine">
            <summary>
            Indicates the cross line cells.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.MirrorQ1">
            <summary>
            Indicates the mirror Q1 cell.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.MirrorQ2">
            <summary>
            Indicates the mirror Q2 cell.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.MirrorR1">
            <summary>
            Indicates the mirror R1 cell.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.Pattern.MirrorR2">
            <summary>
            Indicates the mirror R2 cell.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.Deconstruct(Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="baseCellsMap">(<see langword="out"/> parameter) The base cells.</param>
            <param name="targetCellsMap">(<see langword="out"/> parameter) The target cells.</param>
            <param name="crosslineMap">(<see langword="out"/> parameter) The cross-line cells.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="base1">(<see langword="out"/> parameter) The base cell 1.</param>
            <param name="base2">(<see langword="out"/> parameter) The base cell 2.</param>
            <param name="tq1">(<see langword="out"/> parameter) The target Q1 cell.</param>
            <param name="tq2">(<see langword="out"/> parameter) The target Q2 cell.</param>
            <param name="tr1">(<see langword="out"/> parameter) The target R1 cell.</param>
            <param name="tr2">(<see langword="out"/> parameter) The target R2 cell.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="base1">(<see langword="out"/> parameter) The base cell 1.</param>
            <param name="base2">(<see langword="out"/> parameter) The base cell 2.</param>
            <param name="tq1">(<see langword="out"/> parameter) The target Q1 cell.</param>
            <param name="tq2">(<see langword="out"/> parameter) The target Q2 cell.</param>
            <param name="tr1">(<see langword="out"/> parameter) The target R1 cell.</param>
            <param name="tr2">(<see langword="out"/> parameter) The target R2 cell.</param>
            <param name="crossline">(<see langword="out"/> parameter) The cross line cells.</param>
            <param name="mq1">(<see langword="out"/> parameter) The mirror Q1 cell.</param>
            <param name="mq2">(<see langword="out"/> parameter) The mirror Q2 cell.</param>
            <param name="mr1">(<see langword="out"/> parameter) The mirror R1 cell.</param>
            <param name="mr2">(<see langword="out"/> parameter) The mirror R2 cell.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.Equals(Sudoku.Solving.Manual.Exocets.Pattern@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.op_Equality(Sudoku.Solving.Manual.Exocets.Pattern@,Sudoku.Solving.Manual.Exocets.Pattern@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Equality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.Pattern.op_Inequality(Sudoku.Solving.Manual.Exocets.Pattern@,Sudoku.Solving.Manual.Exocets.Pattern@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Inequality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher">
            <summary>
            Encapsulates a <b>senior exocet</b> (SE) technique searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.CheckCrossline(Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int16,System.Int32,System.Int32,System.Boolean,System.Int32[]@)">
            <summary>
            Check the cross-line cells.
            </summary>
            <param name="baseMap">(<see langword="in"/> parameter) The base cells map.</param>
            <param name="tempCrossline">(<see langword="in"/> parameter) The cross-line map.</param>
            <param name="baseCandidatesMask">The base candidate mask.</param>
            <param name="t1">The target cell 1.</param>
            <param name="t2">The target cell 2.</param>
            <param name="isRow">Indicates whether the specified computation is for rows.</param>
            <param name="extraRegionsMask">
            (<see langword="out"/> parameter) The extra region to add
            (used for franken/mutant exocets). If normal, the value will be an array with 9 elements
            representing 9 different digits.
            </param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.DeepCrosslineCheck(System.Int32,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Span{System.Int32}@)">
            <summary>
            Deeply check of cross-line cells (franken/mutant exocets can be searched here).
            </summary>
            <param name="digit">The digit.</param>
            <param name="baseElimMap">(<see langword="in"/> parameter) The base elimination map.</param>
            <param name="tempCrossline">(<see langword="in"/> parameter) The cross-line map.</param>
            <param name="extraRegionsMask">(<see langword="ref"/> parameter) The extra regions.</param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.CompatibilityTest(System.Int16,Sudoku.Data.Cells[],Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int32,System.Int32)">
            <summary>
            Compatibility test.
            </summary>
            <param name="baseCandidatesMask">The base candidates mask.</param>
            <param name="digitMaps">The digit distributions.</param>
            <param name="tempCrossline">(<see langword="in"/> parameter) The cross-line map.</param>
            <param name="baseCellsMap">(<see langword="in"/> parameter) The base cells map.</param>
            <param name="t1">The target cell 1.</param>
            <param name="t2">The target cell 2.</param>
            <returns>The mask of all incompatible values.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.CompatibilityTest2(Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Exocets.Eliminations.CompatibilityTest,Sudoku.Data.Cells@,System.Int16,System.Int32,System.Int32)">
            <summary>
            The compatibility testing after the method
            <see cref="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.CompatibilityTest(System.Int16,Sudoku.Data.Cells[],Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int32,System.Int32)"/>.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="compatibilityElims">The compatibility eliminations.</param>
            <param name="baseCellsMap">(<see langword="in"/> parameter) The base cells map.</param>
            <param name="baseCandidatesMask">The base candidates mask.</param>
            <param name="t1">The target cell 1.</param>
            <param name="t2">The target cell 2.</param>
            <seealso cref="M:Sudoku.Solving.Manual.Exocets.SeniorExocetStepSearcher.CompatibilityTest(System.Int16,Sudoku.Data.Cells[],Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int32,System.Int32)"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.SeStepInfo">
            <summary>
            Provides a usage of <b>senior exocet</b> (SE) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Exocet">The exocet.</param>
            <param name="Digits">All digits.</param>
            <param name="EndoTargetCell">The endo target cell.</param>
            <param name="ExtraRegionsMask">The extra regions mask.</param>
            <param name="TargetEliminations">The target eliminations.</param>
            <param name="TrueBaseEliminations">The true base eliminations.</param>
            <param name="MirrorEliminations">The mirror eliminations.</param>
            <param name="CompatibilityEliminations">The compatibility eliminations.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Exocets.Pattern@,System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Int32[],Sudoku.Solving.Manual.Exocets.Eliminations.Target,Sudoku.Solving.Manual.Exocets.Eliminations.TrueBase,Sudoku.Solving.Manual.Exocets.Eliminations.Mirror,Sudoku.Solving.Manual.Exocets.Eliminations.CompatibilityTest)">
            <summary>
            Provides a usage of <b>senior exocet</b> (SE) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Exocet">The exocet.</param>
            <param name="Digits">All digits.</param>
            <param name="EndoTargetCell">The endo target cell.</param>
            <param name="ExtraRegionsMask">The extra regions mask.</param>
            <param name="TargetEliminations">The target eliminations.</param>
            <param name="TrueBaseEliminations">The true base eliminations.</param>
            <param name="MirrorEliminations">The mirror eliminations.</param>
            <param name="CompatibilityEliminations">The compatibility eliminations.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.SeStepInfo.ContainsExtraRegions">
            <summary>
            Indicates whether the specified instance contains any extra regions.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.SeStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.SeStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeStepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Exocets.SeStepSearcher">
            <summary>
            Encapsulates a <b>senior exocet</b> (SE) technique searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeStepSearcher.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Exocets.SeStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Exocets.SeStepSearcher.CheckCrossline(Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int16,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Check the cross-line cells.
            </summary>
            <param name="baseMap">(<see langword="in"/> parameter) The base cells map.</param>
            <param name="tempCrossline">(<see langword="in"/> parameter) The cross-line map.</param>
            <param name="baseCandidatesMask">The base candidate mask.</param>
            <param name="t1">The target cell 1.</param>
            <param name="t2">The target cell 2.</param>
            <param name="isRow">Indicates whether the specified computation is for rows.</param>
            <returns>The <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.ComplexFishStepSearcher">
            <summary>
            Encapsulates a <b>Hobiwan's fish</b> technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.ComplexFishStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.ComplexFishStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.ComplexFishStepSearcher.GetPomEliminationsFirstly(Sudoku.Data.SudokuGrid@)">
            <summary>
            Get POM technique eliminations at first.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <returns>The dictionary that contains all eliminations grouped by digit used.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.FishStepInfo">
            <summary>
            Provides a usage of <b>fish</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseSets">The base sets.</param>
            <param name="CoverSets">The cover sets.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.FishStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>fish</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseSets">The base sets.</param>
            <param name="CoverSets">The cover sets.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.FishStepInfo.FishNames">
            <summary>
            The names of all fishes by their sizes.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.FishStepInfo.Size">
            <summary>
            Indicates the size of this fish instance.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.FishStepInfo.Rank">
            <summary>
            Indicates the rank of the fish.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.FishStepSearcher">
            <summary>
            Encapsulates a <b>fish</b> technique searcher.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo">
            <summary>
            Provides a usage of <b>Hobiwan's fish</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseSets">The base sets.</param>
            <param name="CoverSets">The cover sets.</param>
            <param name="Exofins">All exo-fins.</param>
            <param name="Endofins">All endo-fins.</param>
            <param name="IsSashimi">
            Indicates whether the fish instance is sashimi.
            The value can be:
            <list type="table">
            <item>
            <term><see langword="true"/></term><description>Sashimi finned fish.</description>
            </item>
            <item>
            <term><see langword="false"/></term><description>Normal finned fish.</description>
            </item>
            <item>
            <term><see langword="null"/></term><description>Normal fish.</description>
            </item>
            </list>
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Nullable{System.Boolean})">
            <summary>
            Provides a usage of <b>Hobiwan's fish</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseSets">The base sets.</param>
            <param name="CoverSets">The cover sets.</param>
            <param name="Exofins">All exo-fins.</param>
            <param name="Endofins">All endo-fins.</param>
            <param name="IsSashimi">
            Indicates whether the fish instance is sashimi.
            The value can be:
            <list type="table">
            <item>
            <term><see langword="true"/></term><description>Sashimi finned fish.</description>
            </item>
            <item>
            <term><see langword="false"/></term><description>Normal finned fish.</description>
            </item>
            <item>
            <term><see langword="null"/></term><description>Normal fish.</description>
            </item>
            </list>
            </param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.BasicDiff">
            <summary>
            The basic difficulty rating table.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.FinnedDiff">
            <summary>
            The finned difficulty rating table.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.SashimiDiff">
            <summary>
            The sashimi difficulty rating table.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.FrankenShapeDiffExtra">
            <summary>
            The Franken shape extra difficulty rating table.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.MutantShapeDiffExtra">
            <summary>
            The mutant shape extra difficulty rating table.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.BaseDifficulty">
            <summary>
            Indicates the base difficulty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.SashimiExtraDifficulty">
            <summary>
            Indicates the extra difficulty on sashimi judgement.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.ShapeExtraDifficulty">
            <summary>
            Indicates the extra difficulty on shape.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.InternalName">
            <summary>
            The internal name.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.IsBasic">
            <summary>
            To check whether the specified structure is basic.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.HobiwanFishStepInfo.IsFranken">
            <summary>
            To check whether the specified structure is Franken.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher">
            <summary>
            Encapsulates a <b>Hobiwan's fish</b> technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher._exofinCount">
            <summary>
            Indicates the maximum number of exo-fins will be found.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher._endofinCount">
            <summary>
            Indicates the maximum number of endo-fins will be found.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher._size">
            <summary>
            Indicates the maximum size will be found. The maximum value supporting is 7.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher._checkPom">
            <summary>
            Indicates whether the puzzle will check POM first.
            If so and the digit doesn't have any eliminations, this digit
            will be skipped rather than do empty and useless loops.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes an instance with the specified information.
            </summary>
            <param name="size">The size.</param>
            <param name="exofinCount">The maximum number of exo-fins.</param>
            <param name="endofinCount">The maximum number of endo-fins.</param>
            <param name="checkPom">
            Indicates whether the puzzle will check POM first.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.HobiwanFishStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            Accumulate all technique information instances into the specified accumulator by size.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="size">The size to iterate on.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo">
            <summary>
            Provides a usage of <b>normal fish</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseSets">The base sets.</param>
            <param name="CoverSets">The cover sets.</param>
            <param name="FinCells">All fin cells.</param>
            <param name="IsSashimi">
            Indicates whether the fish instance is sashimi.
            The value can be:
            <list type="table">
            <item>
            <term><see langword="true"/></term><description>Sashimi finned fish.</description>
            </item>
            <item>
            <term><see langword="false"/></term><description>Normal finned fish.</description>
            </item>
            <item>
            <term><see langword="null"/></term><description>Normal fish.</description>
            </item>
            </list>
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},Sudoku.Data.Cells@,System.Nullable{System.Boolean})">
            <summary>
            Provides a usage of <b>normal fish</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseSets">The base sets.</param>
            <param name="CoverSets">The cover sets.</param>
            <param name="FinCells">All fin cells.</param>
            <param name="IsSashimi">
            Indicates whether the fish instance is sashimi.
            The value can be:
            <list type="table">
            <item>
            <term><see langword="true"/></term><description>Sashimi finned fish.</description>
            </item>
            <item>
            <term><see langword="false"/></term><description>Normal finned fish.</description>
            </item>
            <item>
            <term><see langword="null"/></term><description>Normal fish.</description>
            </item>
            </list>
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.BaseDifficulty">
            <summary>
            Indicates the base difficulty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.SashimiExtraDifficulty">
            <summary>
            Indicates the extra difficulty on sashimi judgement.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.InternalName">
            <summary>
            Indicates the internal name.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.ToString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.NormalFishStepSearcher">
            <summary>
            Encapsulates a <b>normal fish</b> technique searcher. Fins can also be found.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.NormalFishStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Boolean)">
            <summary>
            Searches all basic fish of the specified size.
            </summary>
            <param name="accumulator">The result accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="size">The size.</param>
            <param name="searchRow">
            Indicates the solver will searching rows or columns.
            </param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepSearcher.GetDirectView(Sudoku.Data.SudokuGrid@,System.Int32,System.ReadOnlySpan{System.Int32}@,System.ReadOnlySpan{System.Int32}@,System.Boolean,Sudoku.Data.Cells@)">
            <summary>
            Get the direct fish view with the specified grid and the base sets.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="digit">The digit.</param>
            <param name="baseSets">(<see langword="in"/> parameter) The base sets.</param>
            <param name="coverSets">(<see langword="in"/> parameter) The cover sets.</param>
            <param name="searchRow">Indicates whether the current searcher searches row.</param>
            <param name="finCellsMap">(<see langword="in"/> parameter) The fins map.</param>
            <returns>The view.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.NormalFishStepSearcher.GetGridMap(Sudoku.Data.Cells@,System.ReadOnlySpan{System.Int32}@,Sudoku.Data.Cells@)">
            <summary>
            Record all cells in the all regions to a <see cref="T:Sudoku.Data.Cells"/> instance.
            </summary>
            <param name="map">(<see langword="ref"/> parameter) The map.</param>
            <param name="regions">(<see langword="in"/> parameter) All region offsets.</param>
            <param name="candMap">(<see langword="in"/> parameter) The candidate map.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Fishes.RegionMap">
            <summary>
            Provides a region map that contains 27 bits indicating whether the corresponding region is used now.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.#ctor(System.Int32)">
            <summary>
            Initializes an instance with the specified mask.
            </summary>
            <param name="mask">The specified mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.#ctor(System.Int32[])">
            <summary>
            Initializes a map with the specified regions.
            </summary>
            <param name="regions">The regions.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.#ctor(System.ReadOnlySpan{System.Int32}@)">
            <summary>
            Initializes a map with the specified regions.
            </summary>
            <param name="regions">(<see langword="in"/> parameter) The regions.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a map with the specified regions.
            </summary>
            <param name="regions">The regions.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.RegionMap.Mask">
            <summary>
            The mask.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.RegionMap.Count">
            <summary>
            Indicates how many regions are used now.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.RegionMap.Regions">
            <summary>
            Indicates all regions used.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Fishes.RegionMap.Region(System.Int32)">
            <summary>
            Get whether the specified region is in this collection.
            </summary>
            <param name="region">The region.</param>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.Equals(Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <inheritdoc cref="M:System.IValueEquatable`1.Equals(`0@)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.ToArray">
            <summary>
            Get all regions, and copy them into an array.
            </summary>
            <returns>The array.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.GetEnumerator">
            <summary>
            Get the enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.Add(System.Int32)">
            <summary>
            Add a region.
            </summary>
            <param name="region">The region.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.AddRange(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Add regions.
            </summary>
            <param name="regions">The regions.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.Remove(System.Int32)">
            <summary>
            Remove a region.
            </summary>
            <param name="region">The region.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.op_Equality(Sudoku.Solving.Manual.Fishes.RegionMap@,Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Equality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.op_Inequality(Sudoku.Solving.Manual.Fishes.RegionMap@,Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Inequality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.op_OnesComplement(Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <summary>
            Negate the map.
            </summary>
            <param name="map"> The map.</param>
            <returns>The map after being negated.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.op_BitwiseAnd(Sudoku.Solving.Manual.Fishes.RegionMap@,Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <summary>
            Get the regions that two maps both contain.
            </summary>
            <param name="left">The left map.</param>
            <param name="right">The right map.</param>
            <returns>The result map.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.op_BitwiseOr(Sudoku.Solving.Manual.Fishes.RegionMap@,Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <summary>
            Get all regions that comes from two maps.
            </summary>
            <param name="left">The left map.</param>
            <param name="right">The right map.</param>
            <returns>The result map.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.op_ExclusiveOr(Sudoku.Solving.Manual.Fishes.RegionMap@,Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <summary>
            Get the regions that two maps contain but don't overlap with each other.
            </summary>
            <param name="left">The left map.</param>
            <param name="right">The right map.</param>
            <returns>The result map.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Fishes.RegionMap.op_Subtraction(Sudoku.Solving.Manual.Fishes.RegionMap@,Sudoku.Solving.Manual.Fishes.RegionMap@)">
            <summary>
            Get the regions that <paramref name="left"/> contains but the <paramref name="right"/>
            doesn't contain.
            </summary>
            <param name="left">The left map.</param>
            <param name="right">The right map.</param>
            <returns>The result map.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Intersections.AlcStepInfo">
            <summary>
            Provides a usage of <b>almost locked candidates</b> (ALC) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="DigitsMask">The mask to represent all digits used.</param>
            <param name="BaseCells">All base cells.</param>
            <param name="TargetCells">All target cells.</param>
            <param name="HasValueCell">Indicates whether the current ALC contains value cells.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.AlcStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int16,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Boolean)">
            <summary>
            Provides a usage of <b>almost locked candidates</b> (ALC) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="DigitsMask">The mask to represent all digits used.</param>
            <param name="BaseCells">All base cells.</param>
            <param name="TargetCells">All target cells.</param>
            <param name="HasValueCell">Indicates whether the current ALC contains value cells.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.AlcStepInfo.Size">
            <summary>
            Indicates the size.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.AlcStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.AlcStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.AlcStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.AlcStepInfo.BaseDifficulty">
            <summary>
            Indicates the base difficulty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.AlcStepInfo.ExtraDifficulty">
            <summary>
            Indicates the extra difficulty.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.AlcStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Intersections.AlcStepSearcher">
            <summary>
            Encapsulates an <b>almost locked candidates</b> (ALC) technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Intersections.AlcStepSearcher._checkAlq">
            <summary>
            Indicates the searcher will check almost locked quadruple (ALQ).
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.AlcStepSearcher.#ctor(System.Boolean)">
            <summary>
            Initializes an instance with the intersection table.
            </summary>
            <param name="checkAlq">
            Indicates whether the searcher should check almost locked quadruple.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.AlcStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.AlcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.AlcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            Get all technique information instances by size.
            </summary>
            <param name="result">The result accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="size">The size.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.AlcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <summary>
            Process the calculation.
            </summary>
            <param name="result">The result.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="size">The size.</param>
            <param name="baseSet">The base set.</param>
            <param name="coverSet">The cover set.</param>
            <param name="a">(<see langword="in"/> parameter) The left grid map.</param>
            <param name="b">(<see langword="in"/> parameter) The right grid map.</param>
            <param name="c">(<see langword="in"/> parameter) The intersection.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Intersections.IntersectionStepInfo">
            <summary>
            Provides a usage of <b>intersection</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.IntersectionStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>intersection</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Intersections.IntersectionStepSearcher">
            <summary>
            Encapsulates an <b>intersection</b> technique searcher.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Intersections.LcStepInfo">
            <summary>
            Provides a usage of <b>locked candidates</b> (LC) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit.</param>
            <param name="BaseSet">The base region.</param>
            <param name="CoverSet">The cover region.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.LcStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>locked candidates</b> (LC) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit.</param>
            <param name="BaseSet">The base region.</param>
            <param name="CoverSet">The cover region.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.LcStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.LcStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.LcStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.LcStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.LcStepInfo.ToString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.LcStepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Intersections.LcStepSearcher">
            <summary>
            Encapsulates a <b>locked candidates</b> (LC) technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Intersections.LcStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Intersections.LcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.BfStepInfo">
            <summary>
            Provides a usage of <b>brute force</b> (<b>BF</b>) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BfStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>brute force</b> (<b>BF</b>) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BfStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BfStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BfStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BfStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.BfStepSearcher">
            <summary>
            Encapsulates a <b>brute force</b> (<b>BF</b>) technique searcher.
            The searcher is not executed until all searchers whose priority
            is higher than this one can't find out any technique steps.
            </summary>
            <remarks>
            This searcher is a trick, because it will check the assignments on
            the terminal grid (I mean, the answer grid).
            </remarks>
        </member>
        <member name="F:Sudoku.Solving.Manual.LastResorts.BfStepSearcher.TryAndErrorOrder">
            <summary>
            The order of cell offsets to get values.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.LastResorts.BfStepSearcher._solution">
            <summary>
            The solution.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BfStepSearcher.#ctor(Sudoku.Data.SudokuGrid@)">
            <summary>
            A trick. Initializes an instance with the solution grid.
            This searcher will try to extract a value from the
            solution.
            </summary>
            <param name="solution">(<see langword="in"/> parameter) The solution.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BfStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BfStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepInfo">
            <summary>
            Provides a usage of <b>Bowman's bingo</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="ContradictionSeries">Indicates all conclusions that occurs a contradict.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion})">
            <summary>
            Provides a usage of <b>Bowman's bingo</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="ContradictionSeries">Indicates all conclusions that occurs a contradict.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher">
            <summary>
            Encapsulates a <b>Bowman's bingo</b> technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher._length">
            <summary>
            Indicates the length to find.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher._searcher">
            <summary>
            The singles searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher._tempConclusions">
            <summary>
            All temporary conclusions.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.#ctor(System.Int32)">
            <summary>
            Initializes an instance with the specified length.
            </summary>
            <param name="length">The length.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.LastResorts.BowmanBingoStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32)">
            <summary>
            Take all information recursively.
            </summary>
            <param name="result">The result.</param>
            <param name="grid">(<see langword="ref"/> parameter) The grid.</param>
            <param name="startCandidate">The start candidate.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.GetLinks">
            <summary>
            Get links.
            </summary>
            <returns>The links.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.RecordUndoInfo(Sudoku.Data.SudokuGrid@,System.Int32,System.Int32)">
            <summary>
            Record all information to be used in undo grid.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="cell">The cell.</param>
            <param name="digit">The digit.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.UndoGrid(Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32},System.Int32,System.Int16)">
            <summary>
            Undo the grid.
            </summary>
            <param name="grid">(<see langword="ref"/> parameter) The grid.</param>
            <param name="list">The list.</param>
            <param name="cell">The cell.</param>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.BowmanBingoStepSearcher.IsValidGrid(Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            To check the specified cell has a same digit filled in a cell
            which is same region with the current one.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="cell">The cell.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.LastResortStepInfo">
            <summary>
            Provides a usage of <b>last resort</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.LastResortStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>last resort</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.LastResortStepSearcher">
            <summary>
            Encapsulates a <b>last resort</b> technique searcher.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.PomStepInfo">
            <summary>
            Provides a usage of <b>pattern overlay method</b> (POM) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.PomStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>pattern overlay method</b> (POM) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.PomStepInfo.Digit">
            <summary>
            Indicates the digit.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.PomStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.PomStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.PomStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.PomStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.PomStepSearcher">
            <summary>
            Encapsulates a <b>pattern overlay method</b> (POM) technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.PomStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.PomStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.PomStepSearcher.GetInvalidPos(Sudoku.Data.SudokuGrid@)">
            <summary>
            Get all invalid positions.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <returns>The 9 maps for invalid positions of each digit.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.PomStepSearcher.GetTemplates">
            <summary>
            Get templates.
            </summary>
            <returns>The templates.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.TemplateStepInfo">
            <summary>
            Provides a usage of <b>template</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="IsTemplateDeletion">Indicates whether the current instance is template deletion.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.TemplateStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Boolean)">
            <summary>
            Provides a usage of <b>template</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="IsTemplateDeletion">Indicates whether the current instance is template deletion.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.TemplateStepInfo.Digit">
            <summary>
            Indicates the digit.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.TemplateStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.TemplateStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.TemplateStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.TemplateStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher">
            <summary>
            Encapsulates a <b>template</b> technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher._templateDeleteOnly">
            <summary>
            Indicates whether the searcher checks template deletes.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher.#ctor(System.Boolean)">
            <summary>
            Initializes an instance with the specified <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="templateDeleteOnly">
            Indicates whether the technique searcher checks template deletes only.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
            <exception cref="T:Sudoku.Runtime.WrongHandlingException">
            Throws when the puzzle is not unique.
            </exception>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher.GetAllTemplateSet(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <summary>
            Get all template sets.
            </summary>
            <param name="result">(<see langword="in"/> parameter) The result.</param>
            <param name="solution">The solution.</param>
            <returns>All template sets.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher.GetAllTemplateDelete(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <summary>
            Get all template deletes.
            </summary>
            <param name="result">(<see langword="in"/> parameter) The result.</param>
            <param name="solution">The solution.</param>
            <returns>All template deletes.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.LastResorts.TemplateStepSearcher.CreateInstance(Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            Create a <see cref="T:Sudoku.Data.Cells"/> instance with the specified solution.
            If the puzzle has been solved, this method will create a grid map of
            distribution of a single digit in this solution.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="digit">The digit to search.</param>
            <returns>
            The grid map that contains all cells of a digit appearing
            in the solution.
            </returns>
            <exception cref="T:System.ArgumentException">
            Throws when the puzzle has not been solved.
            </exception>
        </member>
        <member name="T:Sudoku.Solving.Manual.LightManualSolver">
            <summary>
            Provides a light manual solver used for testing and checking backdoors.
            This solver will use mankind logic to solve a puzzle, but only
            <b>Hidden Single</b>s and <b>Naked Single</b>s will be used.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.LightManualSolver.CanSolve(Sudoku.Data.SudokuGrid@)">
            <summary>
            To check whether the specified solver can solve the puzzle.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The puzzle.</param>
            <returns>
            A <see cref="T:System.Boolean"/> value indicating whether the solver
            solved the puzzle successfully.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.LightManualSolver.SaveStep(System.Collections.Generic.ICollection{Sudoku.Solving.Manual.StepInfo},Sudoku.Solving.Manual.StepInfo,Sudoku.Data.SudokuGrid@)">
            <summary>
            To record the current technique step.
            </summary>
            <param name="steps">The steps have been found.</param>
            <param name="step">The current step.</param>
            <param name="cloneation">(<see langword="ref"/> parameter) The cloneation of the grid.</param>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.ManualSolver">
            <summary>
            Provides a solver that use logical methods to solve a specified sudoku puzzle.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.SolverName">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.Solve(Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.SolveAsync(Sudoku.Data.SudokuGrid,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Globalization.CountryCode)">
            <summary>
            To solve the specified puzzle in asynchronous way.
            </summary>
            <param name="grid">The grid.</param>
            <param name="progress">The progress.</param>
            <param name="countryCode">The country code.</param>
            <returns>The task of the execution.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.Solve(Sudoku.Data.SudokuGrid@,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Globalization.CountryCode)">
            <summary>
            To solve the puzzle.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The puzzle.</param>
            <param name="progress">The progress instance to report the state.</param>
            <param name="countryCode">The country code.</param>
            <returns>The analysis result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.SolveNaively(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Collections.Generic.List{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Boolean,Sudoku.Models.GridProgressResult@,System.IProgress{Sudoku.Models.IProgressResult})">
            <summary>
            Solve naively.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="cloneation">(<see langword="ref"/> parameter) The cloneation grid to calculate.</param>
            <param name="steps">All steps found.</param>
            <param name="solution">(<see langword="in"/> parameter) The solution.</param>
            <param name="sukaku">Indicates whether the current mode is sukaku.</param>
            <param name="progressResult">
            (<see langword="ref"/> parameter)
            The progress result. This parameter is used for modify the state of UI controls.
            The current argument won't be used until <paramref name="progress"/> isn't <see langword="null"/>.
            In the default case, this parameter being
            <see langword="default"/>(<see cref="T:Sudoku.Models.GridProgressResult"/>) is okay.
            </param>
            <param name="progress">
            The progress used for report the current state. If we don't need, the value should
            be assigned <see langword="null"/>.
            </param>
            <returns>The analysis result.</returns>
            <exception cref="T:Sudoku.Runtime.WrongHandlingException">
            Throws when the solver can't solved due to wrong handling.
            </exception>
            <seealso cref="T:Sudoku.Models.GridProgressResult"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.SolveSeMode(Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Boolean,Sudoku.Models.GridProgressResult@,System.IProgress{Sudoku.Models.IProgressResult})">
            <summary>
            Solve the puzzle with <see cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/> option.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="cloneation">(<see langword="ref"/> parameter) The cloneation grid to calculate.</param>
            <param name="steps">All steps found.</param>
            <param name="solution">(<see langword="in"/> parameter) The solution.</param>
            <param name="sukaku">Indicates whether the current mode is sukaku mode.</param>
            <param name="progressResult">
            (<see langword="ref"/> parameter)
            The progress result. This parameter is used for modify the state of UI controls.
            The current argument won't be used until <paramref name="progress"/> isn't <see langword="null"/>.
            In the default case, this parameter being
            <see langword="default"/>(<see cref="T:Sudoku.Models.GridProgressResult"/>) is okay.
            </param>
            <param name="progress">
            The progress used for report the current state. If we don't need, the value should
            be assigned <see langword="null"/>.
            </param>
            <returns>The analysis result.</returns>
            <exception cref="T:Sudoku.Runtime.WrongHandlingException">
            Throws when the solver can't solved due to wrong handling.
            </exception>
            <seealso cref="T:Sudoku.Models.GridProgressResult"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.AllowAlsCycles">
            <summary>
            <para>Indicates whether the solver should check ALS cycles.</para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.AllowOverlappingAlses">
            <summary>
            <para>
            Indicates whether two ALSes can be overlapped with each other.
            </para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.AlsHighlightRegionInsteadOfCell">
            <summary>
            <para>
            Indicates whether all ALSes shows highlight regions
            instead of cells.
            </para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly">
            <summary>
            <para>
            Indicates whether the solver should check all technique
            information using the strict technique searchers order.
            </para>
            <para>
            If the value is <see langword="true"/>, all technique searchers
            will be enabled calculation in order. It ensures the strictness
            of difficulty rating that the maximum difficulty searched in
            one searcher should be no more than the minimum one searched in
            the searcher behind the previous one.
            </para>
            <para>
            The value is <see langword="false"/> in default case. In addition,
            if this value is <see langword="true"/>, the option
            <see cref="P:Sudoku.Solving.Manual.ManualSolver.OptimizedApplyingOrder"/> will be disabled. In other
            words, this option doesn't work while solving when the condition
            is satisfied. However, the time of calculation with this value
            <see langword="true"/> will be <b>much slower</b> than that with the
            value is <see langword="false"/>.
            </para>
            </summary>
            <seealso cref="P:Sudoku.Solving.Manual.ManualSolver.OptimizedApplyingOrder"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.CheckAlmostLockedQuadruple">
            <summary>
            <para>
            Indicates whether the solver should check the technique Almost
            Locked Quadruple (ALQ).
            </para>
            <para>
            The value is <see langword="true"/> in debug environment,
            and <see langword="false"/> in release environment.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.CheckConclusionValidityAfterSearched">
            <summary>
            <para>
            Indicates whether the solver will check the validity of the conclusions
            after searched them. If the conclusions eliminate the wrong digits or
            assign to the wrong cells, it will report the error
            (i.e. throw a <see cref="T:Sudoku.Runtime.WrongHandlingException"/>).
            </para>
            <para>
            The value is <see langword="true"/> in default case. If the value is
            <see langword="true"/>, all conclusions will be checked before applying
            to the grid. The comparer is the solution grid. Computer doesn't know
            which conclusions are correct and which ones are incorrect. Therefore,
            the best plan is to compare to the solution grid. If not, the solver
            won't check the validity of all conclusions. In other words, the solver
            doesn't stop the searching until the grid is totally invalid (None of
            eliminations or assignments can be searched). However, unfortunately,
            the grid has no solution at present.
            </para>
            </summary>
            <seealso cref="T:Sudoku.Runtime.WrongHandlingException"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.CheckGurthSymmetricalPlacement">
            <summary>
            <para>
            Indicates whether the solver should check Gurth's symmetrical placement
            at the initial grid.
            </para>
            <para>
            The value is <see langword="false"/> in default case. In addition,
            if the value is <see langword="true"/>, the solver will check the symmetry
            of the grid at initial. If the grid is symmetrical grid, the solver
            will give you a hint about the technique of symmetrical placement. However,
            the hint will influence the difficulty rating during solving the puzzle.
            If the puzzle is so easy (in other words, the grid doesn't need check
            it), this option will make the difficulty rating of the puzzle much more
            higher than that when the option is <see langword="false"/>. In addition,
            if the option <see cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/> is <see langword="true"/>,
            this option will be ignored.
            </para>
            </summary>
            <seealso cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.CheckIncompleteUniquenessPatterns">
            <summary>
            <para>
            Indicates whether the solver should check incomplete uniqueness patterns.
            </para>
            <para>
            The value is <see langword="true"/> in debug environment,
            and <see langword="false"/> in release environment.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.SearchExtendedUniqueRectangles">
            <summary>
            <para>
            Indicates whether the solver should search for extended
            unique rectangles.
            </para>
            <para>
            The value is <see langword="true"/> in debug environment,
            and <see langword="false"/> in release environment.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.EnableFullHouse">
            <summary>
            <para>
            Indicates whether the solver will record the step
            whose name or kind is full house.
            </para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
            <remarks>
            <b>Full house</b>s are the techniques that used in a single
            region. When the specified region has only one empty cell,
            the full house will be found at this empty cell (the last
            value in this region).
            </remarks>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.EnableGarbageCollectionForcedly">
            <summary>
            <para>
            Indicates whether the solver enables the garbage collection
            after finished searching a technique whose searcher is
            high space-complexity.
            </para>
            <para>This value is <see langword="true"/> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.EnableLastDigit">
            <summary>
            <para>
            Indicates whether the solver will record the step
            whose name or kind is last digit.
            </para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
            <remarks>
            <b>Last digit</b>s are the techniques that used in a single
            digit. When the whole grid has 8 same digits, the last
            one will be always found and set in the last position,
            which is last digit.
            </remarks>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.FastSearch">
            <summary>
            <para>
            Indicates whether the solver will apply multiple technique usages
            at the same time if searched more than one technique.
            As for the option <see cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/> is
            <see langword="true"/>, when searched more than one technique
            instance which holds a same difficulty, the searcher will apply
            them at the same time; however if the value is <see langword="false"/>,
            the solver will apply all same techniques searched at the same time.
            </para>
            <para>
            The value is <see langword="false"/> in default case. If the value
            is <see langword="true"/>, the solver will enable this mode to
            accelerate the running, but the applied techniques will be added much
            more than when the value is <see langword="false"/>.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.HobiwanFishCheckTemplates">
            <summary>
            <para>
            Indicates whether the solver will check templates before searching
            Hobiwan's fish.
            </para>
            <para>
            The value is <see langword="true"/> in default case. If the value
            is <see langword="true"/>, the solver will check templates first,
            and get all possible eliminations for each digit. If the digit does
            not contain any elimination, the digit won't exist any fish.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.OnlyRecordTemplateDelete">
            <summary>
            <para>
            Indicates whether the step accumulator only records template delete,
            and template set won't be in this collection (if necessary).
            </para>
            <para>
            If the value is <see langword="true"/>, and the solver has checked
            all template steps, only template deletes in these steps will be
            recorded into the step accumulator.
            </para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.OnlyShowSameLevelTechniquesInFindAllSteps">
            <summary>
            <para>
            Indicates whether the searcher will only display same-level techniques
            in Find All Steps tab page.
            </para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.OptimizedApplyingOrder">
            <summary>
            <para>Indicates whether the solver will optimizes the applying order.</para>
            <para>
            When the value is <see langword="true"/>, the result to apply to
            the grid will be the one which has the minimum difficulty
            rating; otherwise, the applying step will be the first one
            of all steps being searched.
            </para>
            <para>
            The value is <see langword="false"/> in default case. If the value
            is <see langword="true"/>, the option <see cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/>
            will be disabled.
            </para>
            </summary>
            <seealso cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.UseCalculationPriority">
            <summary>
            <para>
            Indicates whether the solver should order all technique searchers
            by its priority.
            </para>
            <para>
            The value is <see langword="false"/> in default case. In addition,
            if you enable the option <see cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/>,
            this option will be disabled because the solver will enable the
            function of count on all steps and get one with the <b>minimum</b>
            difficulty of them.
            </para>
            </summary>
            <seealso cref="P:Sudoku.Solving.Manual.ManualSolver.AnalyzeDifficultyStrictly"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.UseExtendedBugSearcher">
            <summary>
            <para>
            Indicates whether the solver should use extended BUG checker
            to searcher for all true candidates no matter how difficult
            the true candidates looking for.
            </para>
            <para>
            The value is <see langword="true"/> in debug environment,
            and <see langword="false"/> in release environment.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.CheckAdvancedInExocet">
            <summary>
            <para>
            Indicates whether the solver should check advanced eliminations
            during finding exocets.
            </para>
            <para>The value is <see langword="true"/> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.ShowDirectLines">
            <summary>
            <para>
            Indicates whether the solver will show cross hatching information single
            techniques).
            </para>
            <para>The value is <see langword="true"/> in debugger mode, and
            <see langword="false"/> in release mode in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.HobiwanFishMaximumSize">
            <summary>
            <para>
            Indicates what size of the Hobiwan's fish will be searched for.
            </para>
            <para>
            The value is <c>3</c> in default case. The maximum value supporting
            is <c>7</c>.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.HobiwanFishMaximumExofinsCount">
            <summary>
            <para>
            Indicates how many exo-fins in Hobiwan's fish will be searched for.
            </para>
            <para>The value is <c>3</c> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.HobiwanFishMaximumEndofinsCount">
            <summary>
            <para>
            Indicates how many endo-fins in Hobiwan's fish will be searched for.
            </para>
            <para>The value is <c>1</c> in default case.</para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.BowmanBingoMaximumLength">
            <summary>
            <para>
            Indicates the number of nodes to be searched for in bowman bingos.
            </para>
            <para>
            The value is <c>32</c> in default case. You can let this value
            be higher because this value take a little influence on the solver.
            However, each unique solution has more than 17 hints (given digits),
            which means you can't set this value more than <c>64</c> (81 - 17 = 64).
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.CheckRegularWingSize">
            <summary>
            <para>
            Indicates all regular wings with the size less than
            or equals to this specified value. This value should
            be between 3 and 5.
            </para>
            <para>The value is <c>5</c> in default case.</para>
            </summary>
            <remarks>
            In fact this value can be 9 at most (i.e. <c>value &gt;&#61; 3
            &amp;&amp; value &lt;&#61; 9</c>) theoretically.
            </remarks>
        </member>
        <member name="P:Sudoku.Solving.Manual.ManualSolver.MaxPetalsOfDeathBlossom">
            <summary>
            <para>Indicates the max petals of death blossom to search.</para>
            <para>The value is <c>5</c> in default case.</para>
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.RecordStep(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Solving.Manual.StepInfo,Sudoku.Data.SudokuGrid@,Sudoku.Data.SudokuGrid@,System.Diagnostics.Stopwatch,System.Collections.Generic.IList{Sudoku.Data.SudokuGrid},Sudoku.Solving.AnalysisResult@)">
            <summary>
            Bound with on-solving methods returns the solving state.
            </summary>
            <param name="steps">The steps.</param>
            <param name="step">The step.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="cloneation">(<see langword="ref"/> parameter) The cloneation (playground).</param>
            <param name="stopwatch">The stopwatch.</param>
            <param name="stepGrids">The step grids.</param>
            <param name="result">(<see langword="out"/> parameter) The analysis result.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.CheckConclusionsValidity(Sudoku.Data.SudokuGrid@,System.Collections.Generic.IEnumerable{Sudoku.Data.Conclusion})">
            <summary>
            To check the validity of all conclusions.
            </summary>
            <param name="solution">(<see langword="in"/> parameter) The solution.</param>
            <param name="conclusions">The conclusions.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating that.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.ReportProgress(Sudoku.Data.SudokuGrid@,System.IProgress{Sudoku.Models.IProgressResult},Sudoku.Models.GridProgressResult@)">
            <summary>
            To report the progress.
            </summary>
            <param name="cloneation">(<see langword="in"/> parameter) The cloneation grid.</param>
            <param name="progress">The progress reporter.</param>
            <param name="progressResult">(<see langword="ref"/> parameter) The progress result.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.InternalSelector(Sudoku.Solving.Manual.StepInfo)">
            <summary>
            The internal selector.
            </summary>
            <param name="info">The information.</param>
            <returns>The decimal selection.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.ManualSolver.InternalChecking(Sudoku.Solving.Manual.StepInfo,Sudoku.Data.SudokuGrid@)">
            <summary>
            Internal checking.
            </summary>
            <param name="info">The technique information.</param>
            <param name="solution">(<see langword="in"/> parameter) The solution.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.ErStepInfo">
            <summary>
            Provides a usage of <b>empty rectangle</b> (<b>ER</b>) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="Block">The block that the empty rectangle lies in.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.ErStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,Sudoku.Data.ConjugatePair@)">
            <summary>
            Provides a usage of <b>empty rectangle</b> (<b>ER</b>) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="Block">The block that the empty rectangle lies in.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.ErStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.ErStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.ErStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.ErStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.ErStepSearcher">
            <summary>
            Encapsulates an <b>empty rectangle</b> (<b>ER</b>) technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.ErStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.ErStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Solving.Manual.Sdps.ErStepSearcher.LinkIds">
            <summary>
            Indicates all regions iterating on the specified block
            forming an empty rectangle.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.GuardianStepInfo">
            <summary>
            Provides a usage of <b>guardian</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="Loop">The loop.</param>
            <param name="Guardians">All guardians.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.GuardianStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <summary>
            Provides a usage of <b>guardian</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="Loop">The loop.</param>
            <param name="Guardians">All guardians.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.GuardianStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.GuardianStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.GuardianStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.GuardianStepInfo.Equals(Sudoku.Solving.Manual.Sdps.GuardianStepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.GuardianStepInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.GuardianStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.GuardianStepSearcher">
            <summary>
            Encapsulates a <b>guardian</b> technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.GuardianStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.GuardianStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.GuardianStepSearcher.CreateGuardianMap(System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@)">
            <summary>
            Create the guardian map.
            </summary>
            <param name="cell1">The first cell.</param>
            <param name="cell2">The second cell.</param>
            <param name="digit">The current digit.</param>
            <param name="guardians">
            (<see langword="in"/> parameter) The current guardian cells.
            This map may not contain cells that lies in the region
            that <paramref name="cell1"/> and <paramref name="cell2"/> both lies in.
            </param>
            <returns>All guardians.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.SdpStepInfo">
            <summary>
            Provides a usage of <b>single-digit pattern</b> (SDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.SdpStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32)">
            <summary>
            Provides a usage of <b>single-digit pattern</b> (SDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.SdpStepSearcher">
            <summary>
            Encapsulates a <b>single-digit pattern</b> (SDP) technique searcher.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepInfo">
            <summary>
            Provides a usage of <b>two strong links</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseRegion">The base region.</param>
            <param name="TargetRegion">The target region.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>two strong links</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit used.</param>
            <param name="BaseRegion">The base region.</param>
            <param name="TargetRegion">The target region.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepSearcher">
            <summary>
            Encapsulates a <b>two strong links</b> technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Sdps.TwoStrongLinksStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Singles.FullHouseStepInfo">
            <summary>
            Indicates a usage of <b>full house</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.FullHouseStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32)">
            <summary>
            Indicates a usage of <b>full house</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.FullHouseStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.FullHouseStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.FullHouseStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.FullHouseStepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Singles.HiddenSingleStepInfo">
            <summary>
            Indicates a using of <b>hidden single</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
            <param name="Region">The region.</param>
            <param name="EnableAndIsLastDigit">Indicates whether the current technique is a last digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.HiddenSingleStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Indicates a using of <b>hidden single</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
            <param name="Region">The region.</param>
            <param name="EnableAndIsLastDigit">Indicates whether the current technique is a last digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.HiddenSingleStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.HiddenSingleStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.HiddenSingleStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.HiddenSingleStepInfo.ToString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.HiddenSingleStepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Singles.NakedSingleStepInfo">
            <summary>
            Indicates a usage of <b>naked single</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.NakedSingleStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32)">
            <summary>
            Indicates a usage of <b>naked single</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.NakedSingleStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.NakedSingleStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.NakedSingleStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.NakedSingleStepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Singles.SingleStepInfo">
            <summary>
            Provides a usage of <b>single</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.SingleStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>single</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cell">The cell.</param>
            <param name="Digit">The digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.SingleStepInfo.DifficultyLevel">
            <summary>
            Indicates the difficulty level.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher">
            <summary>
            Encapsulates a <b>single</b> technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Singles.SingleStepSearcher._enableFullHouse">
            <summary>
            Indicates the solver enables these options.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Singles.SingleStepSearcher._enableLastDigit">
            <summary>
            Indicates the solver enables these options.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Singles.SingleStepSearcher._showDirectLines">
            <summary>
            Indicates the solver enables these options.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.SingleStepSearcher.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes an instance with enable options.
            </summary>
            <param name="enableFullHouse">
            Indicates whether the solver enables full house.
            </param>
            <param name="enableLastDigit">
            Indicates whether the solver enables last digit.
            </param>
            <param name="showDirectLines">
            Indicates whether the solver shows the direct lines (cross-hatching information).
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Singles.SingleStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.SingleStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
            <remarks>
            Note that this technique searcher will be used in other functions,
            so we should not use base maps like '<see cref="P:Sudoku.Solving.Manual.StepSearcher.EmptyMap"/>'.
            Those maps will be initialized in the special cases.
            </remarks>
            <seealso cref="P:Sudoku.Solving.Manual.StepSearcher.EmptyMap"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.SingleStepSearcher.GetFullHouses(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <summary>
            Get all full houses.
            </summary>
            <param name="accumulator">The current accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.SingleStepSearcher.GetHiddenSinglesOrLastDigits(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <summary>
            Get all hidden singles or last digits.
            </summary>
            <param name="accumulator">The current accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Singles.SingleStepSearcher.GetNakedSingles(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <summary>
            Get all naked singles.
            </summary>
            <param name="accumulator">The current accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.StepInfo">
            <summary>
            Encapsulates all information after searched a solving step,
            which include the conclusion, the difficulty and so on.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Encapsulates all information after searched a solving step,
            which include the conclusion, the difficulty and so on.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.StepInfo.SubsetNames">
            <summary>
            The names of all subsets by their sizes.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepInfo.ShowDifficulty">
            <summary>
            <para>
            Indicates whether the difficulty rating of this technique should be
            shown in the output screen. Some techniques such as <b>Gurth's symmetrical placement</b>
            doesn't need to show the difficulty (because the difficulty of this technique
            is unstable).
            </para>
            <para>
            If the value is <see langword="true"/>, the analysis result won't show the difficulty
            of this instance.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepInfo.Name">
            <summary>
            Indicates the technique name.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepInfo.Difficulty">
            <summary>
            The difficulty or this step.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepInfo.TechniqueCode">
            <summary>
            The technique code of this instance used for comparison
            (e.g. search for specified puzzle that contains this technique).
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepInfo.DifficultyLevel">
            <summary>
            The difficulty level of this step.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.ApplyTo(Sudoku.Data.SudokuGrid@)">
            <summary>
            Put this instance into the specified grid.
            </summary>
            <param name="grid">(<see langword="ref"/> parameter) The grid.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.ToString">
            <summary>
            Returns a string that only contains the name and the basic information. Different with
            <see cref="M:Sudoku.Solving.Manual.StepInfo.ToFullString"/>, the method will only contains the basic introduction
            about the technique.
            For example, in the <see cref="T:Sudoku.Solving.Manual.Exocets.ExocetStepInfo"/>, the detail will contain the several special
            eliminations, in this method, those won't be displayed, But the method <see cref="M:Sudoku.Solving.Manual.StepInfo.ToFullString"/>
            will.
            </summary>
            <returns>The string instance.</returns>
            <seealso cref="T:Sudoku.Solving.Manual.Exocets.ExocetStepInfo"/>
            <seealso cref="M:Sudoku.Solving.Manual.StepInfo.ToFullString"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.ToSimpleString">
            <summary>
            Returns a string that only contains the name and the conclusions.
            </summary>
            <returns>The string instance.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.ToFullString">
            <summary>
            Returns a string that contains the name, the conclusions and its all details.
            This method is used for displaying details in text box control.
            </summary>
            <returns>The string instance.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.ToString(Sudoku.Globalization.CountryCode)">
            <summary>
            Returns a string that only contains the name and the basic information with
            the specified <see cref="T:Sudoku.Globalization.CountryCode"/> to tell different country.
            </summary>
            <param name="countryCode">The country code.</param>
            <returns>The string instance.</returns>
            <seealso cref="T:Sudoku.Globalization.CountryCode"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <summary>
            Returns a string that contains the name, the conclusions and its all details; with
            a specified country as a parameter of type <see cref="T:Sudoku.Globalization.CountryCode"/>.
            This method is used for displaying details in text box control.
            </summary>
            <param name="countryCode">The country code.</param>
            <returns>The string instance.</returns>
            <seealso cref="T:Sudoku.Globalization.CountryCode"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.Deconstruct(System.String@,System.Decimal@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="name">(<see langword="out"/> parameter) The name.</param>
            <param name="difficulty">(<see langword="out"/> parameter) The difficulty.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.Deconstruct(System.String@,System.Decimal@,Sudoku.Solving.Manual.DifficultyLevel@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="name">(<see langword="out"/> parameter) The name.</param>
            <param name="difficulty">(<see langword="out"/> parameter) The difficulty.</param>
            <param name="difficultyLevel">(<see langword="out"/> parameter) The difficulty level.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.Deconstruct(System.String@,System.Decimal@,Sudoku.Solving.Manual.DifficultyLevel@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion}@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="name">(<see langword="out"/> parameter) The name.</param>
            <param name="difficulty">(<see langword="out"/> parameter) The difficulty.</param>
            <param name="difficultyLevel">(<see langword="out"/> parameter) The difficulty level.</param>
            <param name="conclusions">(<see langword="out"/> parameter) All conclusions.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepInfo.Deconstruct(System.String@,System.Decimal@,Sudoku.Solving.Manual.DifficultyLevel@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion}@,System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View}@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="name">(<see langword="out"/> parameter) The name.</param>
            <param name="difficulty">(<see langword="out"/> parameter) The difficulty.</param>
            <param name="difficultyLevel">(<see langword="out"/> parameter) The difficulty level.</param>
            <param name="conclusions">(<see langword="out"/> parameter) All conclusions.</param>
            <param name="views">(<see langword="out"/> parameter) All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.StepSearcher">
            <summary>
            Encapsulates a step finder that used in solving in <see cref="T:Sudoku.Solving.Manual.ManualSolver"/>.
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolver"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepSearcher.GetOne(Sudoku.Data.SudokuGrid@)">
            <summary>
            Take a technique step after searched all solving steps.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid to search steps.</param>
            <returns>A technique information.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <summary>
            Accumulate all technique information instances into the specified accumulator.
            </summary>
            <param name="accumulator">The accumulator to store technique information.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid to search for techniques.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)">
            <summary>
            Initialize the maps that used later.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepSearcher.EmptyMap">
            <summary>
            The empty cells map.
            </summary>
            <remarks>
            This map <b>should</b> be used after <see cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/> called, and you<b>'d better</b>
            not use this field on <see cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/> instance.
            </remarks>
            <seealso cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/>
            <seealso cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepSearcher.BivalueMap">
            <summary>
            The bi-value cells map.
            </summary>
            <remarks>
            This map <b>should</b> be used after <see cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/> called, and you<b>'d better</b>
            not use this field on <see cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/> instance.
            </remarks>
            <seealso cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/>
            <seealso cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepSearcher.CandMaps">
            <summary>
            The candidate maps.
            </summary>
            <remarks>
            This map <b>should</b> be used after <see cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/> called, and you<b>'d better</b>
            not use this field on <see cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/> instance.
            </remarks>
            <seealso cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/>
            <seealso cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepSearcher.DigitMaps">
            <summary>
            The digit maps.
            </summary>
            <remarks>
            This map <b>should</b> be used after <see cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/> called, and you<b>'d better</b>
            not use this field on <see cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/> instance.
            </remarks>
            <seealso cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/>
            <seealso cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.StepSearcher.ValueMaps">
            <summary>
            The value maps.
            </summary>
            <remarks>
            This map <b>should</b> be used after <see cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/> called, and you<b>'d better</b>
            not use this field on <see cref="T:Sudoku.Solving.Manual.Singles.SingleStepSearcher"/> instance.
            </remarks>
            <seealso cref="M:Sudoku.Solving.Manual.StepSearcher.InitializeMaps(Sudoku.Data.SudokuGrid@)"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Subsets.HiddenSubsetStepInfo">
            <summary>
            Provides a usage of <b>hidden subset</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region that structure lies in.</param>
            <param name="Cells">All cells used.</param>
            <param name="Digits">All digits used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.HiddenSubsetStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>hidden subset</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region that structure lies in.</param>
            <param name="Cells">All cells used.</param>
            <param name="Digits">All digits used.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.HiddenSubsetStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.HiddenSubsetStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.HiddenSubsetStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.HiddenSubsetStepInfo.ToString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.HiddenSubsetStepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo">
            <summary>
            Provides a usage of <b>naked subset</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region that structure lies in.</param>
            <param name="Cells">All cells used.</param>
            <param name="Digits">All digits used.</param>
            <param name="IsLocked">Indicates whether the subset is locked.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Provides a usage of <b>naked subset</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region that structure lies in.</param>
            <param name="Cells">All cells used.</param>
            <param name="Digits">All digits used.</param>
            <param name="IsLocked">Indicates whether the subset is locked.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.BaseDifficulty">
            <summary>
            Indicates the base difficulty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.ExtraDifficulty">
            <summary>
            Indicates the extra difficulty.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.ToString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.NakedSubsetStepInfo.ToFullString(Sudoku.Globalization.CountryCode)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Subsets.SubsetStepInfo">
            <summary>
            Provides a usage of <b>subset</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region that structure lies in.</param>
            <param name="Cells">All cells used.</param>
            <param name="Digits">All digits used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.SubsetStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>subset</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Region">The region that structure lies in.</param>
            <param name="Cells">All cells used.</param>
            <param name="Digits">All digits used.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.SubsetStepInfo.Size">
            <summary>
            Indicates the size.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.SubsetStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Subsets.SubsetStepSearcher">
            <summary>
            Encapsulates a <b>subset</b> technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Subsets.SubsetStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.SubsetStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.SubsetStepSearcher.GetHiddenSubsets(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            Get all naked subsets.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="size">The size to search.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Subsets.SubsetStepSearcher.GetNakedSubsets(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Int32)">
            <summary>
            Get all hidden subsets.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="size">The size to search.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Symmetry.Gsp2StepInfo">
            <summary>
            Provides a usage of <b>Gurth's symmetrical placement 2</b> (GSP2) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SymmetryType">The symmetry type used.</param>
            <param name="SwappingTable">Indicates the swapping table.</param>
            <param name="MappingTable">
            The mapping table. The value is always not <see langword="null"/> unless the current instance
            contains multiple different symmetry types.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.Gsp2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.SymmetryType,System.Int32[][],System.Nullable{System.Int32}[])">
            <summary>
            Provides a usage of <b>Gurth's symmetrical placement 2</b> (GSP2) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SymmetryType">The symmetry type used.</param>
            <param name="SwappingTable">Indicates the swapping table.</param>
            <param name="MappingTable">
            The mapping table. The value is always not <see langword="null"/> unless the current instance
            contains multiple different symmetry types.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.Gsp2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.Gsp2StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.Gsp2StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.Gsp2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher">
            <summary>
            Encapsulates a <b>Gurth's symmetrical placement 2</b> (GSP2) technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.R1">
            <summary>
            Indictaes the iteration list.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.R2">
            <summary>
            Indictaes the iteration list.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.R3">
            <summary>
            Indictaes the iteration list.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.C1">
            <summary>
            Indictaes the iteration list.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.C2">
            <summary>
            Indictaes the iteration list.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.C3">
            <summary>
            Indictaes the iteration list.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.Searcher">
            <summary>
            Indicates the step searcher for GSP technique.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.FullRestore(System.Int32@,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Full restore a cell.
            </summary>
            <param name="cell">(<see langword="ref"/> parameter) The cell to restore.</param>
            <param name="r1">The region list 1 for a row.</param>
            <param name="r2">The region list 2 for a row.</param>
            <param name="r3">The region list 3 for a row.</param>
            <param name="c1">The region list 1 for a column.</param>
            <param name="c2">The region list 2 for a column.</param>
            <param name="c3">The region list 3 for a column.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.Gsp2StepSearcher.SwapTwoRegions(Sudoku.Data.SudokuGrid@,System.Int32,System.Int32)">
            <summary>
            Swap values on two different regions.
            </summary>
            <param name="grid">(<see langword="ref"/> parameter) The grid.</param>
            <param name="region1">The region 1.</param>
            <param name="region2">The region 2.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Symmetry.GspStepInfo">
            <summary>
            Provides a usage of <b>Gurth's symmetrical placement</b> (GSP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SymmetryType">The symmetry type used.</param>
            <param name="MappingTable">
            The mapping table. The value is always not <see langword="null"/> unless the current instance
            contains multiple different symmetry types.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.GspStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.SymmetryType,System.Nullable{System.Int32}[])">
            <summary>
            Provides a usage of <b>Gurth's symmetrical placement</b> (GSP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="SymmetryType">The symmetry type used.</param>
            <param name="MappingTable">
            The mapping table. The value is always not <see langword="null"/> unless the current instance
            contains multiple different symmetry types.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.GspStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.GspStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.GspStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.GspStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.GspStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.GspStepInfo.op_BitwiseOr(Sudoku.Solving.Manual.Symmetry.GspStepInfo,Sudoku.Solving.Manual.Symmetry.GspStepInfo)">
            <summary>
            Merge two information, and reserve all conclusions from them two.
            </summary>
            <param name="left">The left information to merge.</param>
            <param name="right">The right information to merge.</param>
            <returns>The merge result.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Symmetry.GspStepSearcher">
            <summary>
            Encapsulates a <b>Gurth's symmetrical placement</b> (GSP) technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Symmetry.GspStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.GspStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.GspStepSearcher.CheckDiagonal(System.Collections.Generic.IList{Sudoku.Data.Conclusion},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Symmetry.GspStepInfo@)">
            <summary>
            Check diagonal symmetry.
            </summary>
            <param name="result">The result accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="info">(<see langword="out"/> parameter) The step information result.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.GspStepSearcher.CheckAntiDiagonal(System.Collections.Generic.IList{Sudoku.Data.Conclusion},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Symmetry.GspStepInfo@)">
            <summary>
            Check anti-diagonal symmetry.
            </summary>
            <param name="result">The result accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="info">(<see langword="out"/> parameter) The step information result.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.GspStepSearcher.CheckCentral(System.Collections.Generic.IList{Sudoku.Data.Conclusion},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Symmetry.GspStepInfo@)">
            <summary>
            Check central symmetry.
            </summary>
            <param name="result">The result accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="info">(<see langword="out"/> parameter) The step information result.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Symmetry.SymmetryStepInfo">
            <summary>
            Provides a usage of <b>symmetry</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Symmetry.SymmetryStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>symmetry</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Symmetry.SymmetryStepSearcher">
            <summary>
            Encapsulates a <b>symmetry</b> technique searcher.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo">
            <summary>
            Provides a usage of <b>BUG + n</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Candidates">All candidates used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>BUG + n</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Candidates">All candidates used.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo.ExtraDifficulty">
            <summary>
            The table of extra difficulty values.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo">
            <summary>
            Provides a usage of <b>BUG + n with forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Candidates">All candidates.</param>
            <param name="Chains">The sub-chains.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyDictionary{System.Int32,Sudoku.Data.Node})">
            <summary>
            Provides a usage of <b>BUG + n with forcing chains</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Candidates">All candidates.</param>
            <param name="Chains">The sub-chains.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.CountDifficulty">
            <summary>
            The difficulty for the number of true candidates.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.LengthDifficulty">
            <summary>
            The length difficluty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.Complexity">
            <summary>
            The total length of all sub-chains gathered.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher">
            <summary>
            Encapsulates a <b>bivalue universal grave multiple</b> (BUG + n) with forcing chains
            technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.CheckMultipleWithForcingChains(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Check BUG + n with forcing chains.
            </summary>
            <param name="accumulator">The result list.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="trueCandidates">All true candidates.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.DoChaining(Sudoku.Data.SudokuGrid@,System.Collections.Generic.ISet{Sudoku.Data.Node},System.Collections.Generic.ISet{Sudoku.Data.Node})">
            <summary>
            Do chaining. This method is only called by
            <see cref="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.CheckMultipleWithForcingChains(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})"/>.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="toOn">All nodes to on.</param>
            <param name="toOff">All nodes to off.</param>
            <returns>The result nodes.</returns>
            <seealso cref="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.CheckMultipleWithForcingChains(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.CreateEliminationHint(System.Collections.Generic.IReadOnlyList{System.Int32},Sudoku.Data.Node@,System.Collections.Generic.IReadOnlyDictionary{System.Int32,System.Collections.Generic.Set{Sudoku.Data.Node}})">
            <summary>
            Create the elimination hint. This method is only called by
            <see cref="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.CheckMultipleWithForcingChains(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})"/>.
            </summary>
            <param name="trueCandidates">The true candidates.</param>
            <param name="target">(<see langword="in"/> parameter) The target node.</param>
            <param name="outcomes">All outcomes.</param>
            <returns>The result information instance.</returns>
            <seealso cref="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugMultipleWithFcStepSearcher.CheckMultipleWithForcingChains(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher">
            <summary>
            Encapsulates a <b>bivalue universal grave</b> (BUG) technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher._extended">
            <summary>
            Indicates whether the searcher should call the extended BUG checker
            to find all true candidates.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.#ctor(System.Boolean)">
            <summary>
            Initializes an instance with the region maps.
            </summary>
            <param name="extended">
            A <see cref="T:System.Boolean"/> value indicating whether the searcher should call
            the extended BUG checker to search for all true candidates no matter how
            difficult searching.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The result list.</param>
            <param name="trueCandidates">All true candidates.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.CheckType3Naked(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Check type 3 (with naked subsets).
            </summary>
            <param name="accumulator">The result.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="trueCandidates">All true candidates.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The result.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="trueCandidates">All true candidates.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.CheckMultiple(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Check BUG + n.
            </summary>
            <param name="accumulator">The result list.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="trueCandidates">All true candidates.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.CheckXz(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Check BUG-XZ.
            </summary>
            <param name="accumulator">The result list.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="trueCandidates">All true candidates.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugStepSearcher.CheckSingleDigit(System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Check whether all candidates in the list has same digit value.
            </summary>
            <param name="list">The list of all true candidates.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating that.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType1StepInfo">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 1 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 1 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType1StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType1StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType1StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType2StepInfo">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 2 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit.</param>
            <param name="Cells">All cell offsets.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 2 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit">The digit.</param>
            <param name="Cells">All cell offsets.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType2StepInfo.ExtraDifficulty">
            <summary>
            The table of extra difficulty values.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType2StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType2StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType3StepInfo">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 3 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TrueCandidates">All true candidates.</param>
            <param name="Digits">All digits.</param>
            <param name="Cells">All cells.</param>
            <param name="IsNaked">Indicates whether the subset is naked.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 3 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TrueCandidates">All true candidates.</param>
            <param name="Digits">All digits.</param>
            <param name="Cells">All cells.</param>
            <param name="IsNaked">Indicates whether the subset is naked.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType3StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType3StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType3StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType4StepInfo">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 4 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digits">All digits.</param>
            <param name="Cells">All cells.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType4StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},Sudoku.Data.ConjugatePair@)">
            <summary>
            Provides a usage of <b>bivalue universal grave</b> (BUG) type 4 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digits">All digits.</param>
            <param name="Cells">All cells.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType4StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType4StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType4StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugType4StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Bugs.BugXzStepInfo">
            <summary>
            Provides a usage of <b>bivalue universal grave XZ rule</b> (BUG-XZ) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="Cells">All cells.</param>
            <param name="ExtraCell">The extra cell.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugXzStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int16,System.Collections.Generic.IReadOnlyList{System.Int32},System.Int32)">
            <summary>
            Provides a usage of <b>bivalue universal grave XZ rule</b> (BUG-XZ) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="Cells">All cells.</param>
            <param name="ExtraCell">The extra cell.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugXzStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugXzStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Bugs.BugXzStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Bugs.BugXzStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo.ExtraDifficulty">
            <summary>
            The difficulty extra.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo.Size">
            <summary>
            Indicates the size of the instance.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepInfo.GetAdditional">
            <summary>
            Get additional string.
            </summary>
            <returns>The additional string.</returns>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher">
            <summary>
            Encapsulates an <b>extended rectangle</b> technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int16,System.Int32)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="allCellsMap">(<see langword="in"/> parameter) The map of all cells used.</param>
            <param name="extraCells">(<see langword="in"/> parameter) The extra cells map.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int16,System.Int32)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="allCellsMap">(<see langword="in"/> parameter) The map of all cells used.</param>
            <param name="extraCells">(<see langword="in"/> parameter) The extra cells map.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.CheckType3Naked(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,System.Int16,System.Int16,Sudoku.Data.Cells@)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="allCellsMap">(<see langword="in"/> parameter) The map of all cells used.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraDigits">The extra digits mask.</param>
            <param name="extraCellsMap">(<see langword="in"/> parameter) The map of extra cells.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.CheckType14(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,System.Int16,Sudoku.Data.Cells@)">
            <summary>
            Check type 4 and a part of type 1 that
            <see cref="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int16,System.Int32)"/>
            cannot be found.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="allCellsMap">(<see langword="in"/> parameter) The map of all cells used.</param>
            <param name="normalDigits">The normal digits mask.</param>
            <param name="extraCellsMap">(<see langword="in"/> parameter) The map of extra cells.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.Regions">
            <summary>
            The table of regions to traverse.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.FitTableRow">
            <summary>
            The fit type XRs table (row direction).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.FitTableColumn">
            <summary>
            The fit type XRs table (column direction).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.Combinations">
            <summary>
            All combinations.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrStepSearcher.#cctor">
            <inheritdoc cref="T:Sudoku.DocComments.StaticConstructor"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Extended.XrType1StepInfo">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 1 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 1 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType1StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType1StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType1StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType1StepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Extended.XrType2StepInfo">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 2 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,System.Int32)">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 2 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType2StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType2StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType2StepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Extended.XrType3StepInfo">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 3 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="ExtraDigitsMask">All extra digits mask.</param>
            <param name="Region">The region.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,System.Collections.Generic.IReadOnlyList{System.Int32},System.Int16,System.Int32)">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 3 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="ExtraDigitsMask">All extra digits mask.</param>
            <param name="Region">The region.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType3StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType3StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType3StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType3StepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Extended.XrType4StepInfo">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 4 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType4StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,Sudoku.Data.ConjugatePair@)">
            <summary>
            Provides a usage of <b>extended rectangle</b> (XR) type 4 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">All cells.</param>
            <param name="DigitsMask">All digits mask.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType4StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType4StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Extended.XrType4StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType4StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Extended.XrType4StepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo">
            <summary>
            Provides a usage of <b>unique loop</b> (UL) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,Sudoku.Data.Cells@)">
            <summary>
            Provides a usage of <b>unique loop</b> (UL) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.ExtraDifficulty">
            <summary>
            The difficulty extra.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.Type">
            <summary>
            Indicates the type.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.BaseDifficulty">
            <summary>
            Indicates the base difficulty.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.Equals(Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepSearcher">
            <summary>
            Encapsulates a <b>unique loop</b> (UL) technique searcher.
            In fact the unique loop can also search for URs.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Link},Sudoku.Data.Cells@)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">(<see langword="in"/> parameter) The loop.</param>
            <param name="links">The links.</param>
            <param name="extraCellsMap">(<see langword="in"/> parameter) The extra cells map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Link},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">(<see langword="in"/> parameter) The loop.</param>
            <param name="links">The links.</param>
            <param name="extraCellsMap">(<see langword="in"/> parameter) The extra cells map.</param>
            <param name="comparer">The comparer mask (equals to <c>1 &lt;&lt; d1 | 1 &lt;&lt; d2</c>).</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepSearcher.CheckType3(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Link},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">(<see langword="in"/> parameter) The loop.</param>
            <param name="links">The links.</param>
            <param name="extraCellsMap">(<see langword="in"/> parameter) The extra cells map.</param>
            <param name="comparer">The comparer mask (equals to <c>1 &lt;&lt; d1 | 1 &lt;&lt; d2</c>).</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Loops.UlStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Link},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="d1">The digit 1.</param>
            <param name="d2">The digit 2.</param>
            <param name="loop">(<see langword="in"/> parameter) The loop.</param>
            <param name="links">The links.</param>
            <param name="extraCellsMap">(<see langword="in"/> parameter) The extra cells map.</param>
            <param name="comparer">The comparer mask (equals to <c>1 &lt;&lt; d1 | 1 &lt;&lt; d2</c>).</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Loops.UlType1StepInfo">
            <summary>
            Provides a usage of <b>unique loop type 1</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,Sudoku.Data.Cells@)">
            <summary>
            Provides a usage of <b>unique loop type 1</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlType1StepInfo.Type">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType1StepInfo.Equals(Sudoku.Solving.Manual.Uniqueness.Loops.UlType1StepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType1StepInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Loops.UlType2StepInfo">
            <summary>
            Provides a usage of <b>unique loop type 2</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Provides a usage of <b>unique loop type 2</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlType2StepInfo.Type">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType2StepInfo.Equals(Sudoku.Solving.Manual.Uniqueness.Loops.UlType2StepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType2StepInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Loops.UlType3StepInfo">
            <summary>
            Provides a usage of <b>unique loop type 3</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
            <param name="SubsetDigitsMask">The subset digits mask.</param>
            <param name="SubsetCells">The subset cells.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int16,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>unique loop type 3</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
            <param name="SubsetDigitsMask">The subset digits mask.</param>
            <param name="SubsetCells">The subset cells.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlType3StepInfo.Type">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType3StepInfo.Equals(Sudoku.Solving.Manual.Uniqueness.Loops.UlType3StepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType3StepInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Loops.UlType4StepInfo">
            <summary>
            Provides a usage of <b>unique loop type 4</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType4StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,Sudoku.Data.Cells@,Sudoku.Data.ConjugatePair@)">
            <summary>
            Provides a usage of <b>unique loop type 4</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Loop">The loop.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Loops.UlType4StepInfo.Type">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType4StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType4StepInfo.Equals(Sudoku.Solving.Manual.Uniqueness.Loops.UlType4StepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Loops.UlType4StepInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher">
            <summary>
            Encapsulates a <b>Borescoper's deadly pattern</b> technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.Patterns">
            <summary>
            All different patterns.
            </summary>
            <remarks>
            All possible heptagons and octagons are in here.
            </remarks>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="cornerMask1">The corner mask 1.</param>
            <param name="cornerMask2">The corner mask 2.</param>
            <param name="centerMask">The center mask.</param>
            <param name="map">(<see langword="in"/> parameter) The map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="cornerMask1">The corner mask 1.</param>
            <param name="cornerMask2">The corner mask 2.</param>
            <param name="centerMask">The center mask.</param>
            <param name="map">(<see langword="in"/> parameter) The map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType3(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="cornerMask1">The corner mask 1.</param>
            <param name="cornerMask2">The corner mask 2.</param>
            <param name="centerMask">The center mask.</param>
            <param name="map">(<see langword="in"/> parameter) The map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="cornerMask1">The corner mask 1.</param>
            <param name="cornerMask2">The corner mask 2.</param>
            <param name="centerMask">The center mask.</param>
            <param name="map">(<see langword="in"/> parameter) The map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.#cctor">
            <inheritdoc cref="T:Sudoku.DocComments.StaticConstructor"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType1StepInfo">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 1</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 1</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType1StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType2StepInfo">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 2</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,System.Int32)">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 2</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType2StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType3StepInfo">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 3</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraCells">The extra cells.</param>
            <param name="ExtraDigitsMask">The extra digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 3</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraCells">The extra cells.</param>
            <param name="ExtraDigitsMask">The extra digits mask.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType3StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType3StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType4StepInfo">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 4</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ConjugateRegion">
            The so-called conjugate region. If you don't know what is a "conjugate region",
            please read the comments in the method
            <see cref="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)"/>
            for more details.
            </param>
            <param name="ExtraMask">Indicates the mask of digits that is the combination.</param>
            <seealso cref="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType4StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Provides a usage of <b>Borescoper's deadly pattern type 4</b> (BDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Map">The cells used.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ConjugateRegion">
            The so-called conjugate region. If you don't know what is a "conjugate region",
            please read the comments in the method
            <see cref="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)"/>
            for more details.
            </param>
            <param name="ExtraMask">Indicates the mask of digits that is the combination.</param>
            <seealso cref="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,System.Int16,System.Int16,System.Int16,Sudoku.Data.Cells@)"/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType4StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType4StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.BdpType4StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern">
            <summary>
            Indicates the borescoper's deadly pattern.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern._mask">
            <summary>
            Indicates the internal structure.
            </summary>
            <remarks>
            <para>
            This mask is of type <see cref="T:System.Int64"/>:
            <code>
            0      7     14     21     28     35     42     49     56
            ↓      ↓      ↓      ↓      ↓      ↓      ↓      ↓      ↓
            |-------|-------|-------|-------|-------|-------|-------|-------|
            </code>
            where the bit [0..56] is for 8 cells, the last 7 bits determine the pattern is a
            heptagon or a octagon. If the value is 127 (not available), the pattern will be a heptagon.
            </para>
            <para>
            Due to the rendering engine, you have to check this file rather than the tip window.
            </para>
            </remarks>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.#ctor(System.Int64)">
            <summary>
            Initializes an instance with the specified mask.
            </summary>
            <param name="mask">The mask.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.Pair1">
            <summary>
            Indicates the pair 1.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.Pair2">
            <summary>
            Indicates the pair 2.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.CenterCells">
            <summary>
            Indicates the other three (or four) cells.
            </summary>
            <remarks>
            <b>If and only if</b> the fourth value in the returned quadruple is available.
            </remarks>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.IsHeptagon">
            <summary>
            Indicates whether the specified pattern is a heptagon.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.Pair1Map">
            <summary>
            Indicates the map of pair 1 cells.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.Pair2Map">
            <summary>
            Indicates the map of pair 2 cells.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.CenterCellsMap">
            <summary>
            The map of other three (or four) cells.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.Map">
            <summary>
            The map.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.Equals(Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.op_Equality(Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Equality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern.op_Inequality(Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@,Sudoku.Solving.Manual.Uniqueness.Polygons.Pattern@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Inequality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern">
            <summary>
            Encapsulates a pattern for Qiu's deadly pattern (QDP).
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.#ctor(Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <summary>
            Initializes an instance with the specified maps.
            </summary>
            <param name="square">(<see langword="in"/> parameter) The square.</param>
            <param name="baseLine">(<see langword="in"/> parameter) The base line.</param>
            <param name="pair">(<see langword="in"/> parameter) The pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.Square">
            <summary>
            Indicates the square.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.BaseLine">
            <summary>
            Indicates the base line.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.Pair">
            <summary>
            Indicates the pair.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.FullMap">
            <summary>
            Indicates the full map.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.Deconstruct(Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="pair">(<see langword="out"/> parameter) The pair map.</param>
            <param name="square">(<see langword="out"/> parameter) The square map.</param>
            <param name="baseLine">(<see langword="out"/> parameter) The base line map.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.Equals(Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.op_Equality(Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Equality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.op_Inequality(Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_Inequality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpLockedTypeStepInfo">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern locked type</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="Candidates">The candidates.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpLockedTypeStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern locked type</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="Candidates">The candidates.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpLockedTypeStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpLockedTypeStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpLockedTypeStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@)">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher">
            <summary>
            Encapsulates a <b>Qiu's deadly pattern</b> technique searcher.
            <code>
            .-------.-------.-------.
            | . . . | . . . | . . . |
            | . . . | . . . | . . . |
            | P P . | . . . | . . . |
            :-------+-------+-------:
            | S S B | B B B | B B B |
            | S S B | B B B | B B B |
            | . . . | . . . | . . . |
            :-------+-------+-------:
            | . . . | . . . | . . . |
            | . . . | . . . | . . . |
            | . . . | . . . | . . . |
            '-------'-------'-------'
            </code>
            Where:
            <list type="table">
            <item><term>P</term><description>Pair Cells.</description></item>
            <item><term>S</term><description>Square Cells.</description></item>
            <item><term>B</term><description>Base Line Cells.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.Patterns">
            <summary>
            All different patterns.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Boolean,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int16,System.Int16)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="isRow">Indicates whether the searching is for rows.</param>
            <param name="pair">(<see langword="in"/> parameter) The pair cells.</param>
            <param name="square">(<see langword="in"/> parameter) The square cells.</param>
            <param name="baseLine">(<see langword="in"/> parameter) The base line cells.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="otherDigitsMask">Other digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Boolean,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int16,System.Int16)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="isRow">Indicates whether the searching is for rows.</param>
            <param name="pair">(<see langword="in"/> parameter) The pair cells.</param>
            <param name="square">(<see langword="in"/> parameter) The square cells.</param>
            <param name="baseLine">(<see langword="in"/> parameter) The base line cells.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="otherDigitsMask">Other digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.CheckType3(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Boolean,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int16,System.Int16)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="isRow">Indicates whether the searching is for rows.</param>
            <param name="pair">(<see langword="in"/> parameter) The pair cells.</param>
            <param name="square">(<see langword="in"/> parameter) The square cells.</param>
            <param name="baseLine">(<see langword="in"/> parameter) The base line cells.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="otherDigitsMask">Other digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},System.Boolean,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int16)">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="isRow">Indicates whether the searching is for rows.</param>
            <param name="pair">(<see langword="in"/> parameter) The pair cells.</param>
            <param name="square">(<see langword="in"/> parameter) The square cells.</param>
            <param name="baseLine">(<see langword="in"/> parameter) The base line cells.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="comparer">The mask comparer.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.CheckLockedType(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,System.Boolean,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Data.Cells@,Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int16)">
            <summary>
            Check locked type.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="isRow">Indicates whether the searching is for rows.</param>
            <param name="pair">(<see langword="in"/> parameter) The pair cells.</param>
            <param name="square">(<see langword="in"/> parameter) The square cells.</param>
            <param name="baseLine">(<see langword="in"/> parameter) The base line cells.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="comparer">The mask comparer.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.BaseLineIterator">
            <summary>
            The base line iterator.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.StartCells">
            <summary>
            The start cells iterator (used as a <see cref="P:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.Pair"/>).
            </summary>
            <seealso cref="P:Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern.Pair"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpStepSearcher.#cctor">
            <inheritdoc cref="M:Sudoku.DocComments.DefaultConstructor.#ctor"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType1StepInfo">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 1</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="Candidate">The candidate.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int32)">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 1</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="Candidate">The candidate.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType1StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType2StepInfo">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 2</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int32)">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 2</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType2StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType3StepInfo">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 3</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="ExtraDigitsMask">The extra digits mask.</param>
            <param name="ExtraCells">The extra cells.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,System.Int16,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 3</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="ExtraDigitsMask">The extra digits mask.</param>
            <param name="ExtraCells">The extra cells.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType3StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType3StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType4StepInfo">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 4</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType4StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Qiu.Pattern@,Sudoku.Data.ConjugatePair@)">
            <summary>
            Provides a usage of <b>Qiu's deadly pattern type 4</b> (QDP) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pattern">The pattern.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType4StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType4StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Qiu.QdpType4StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.HiddenUrStepInfo">
            <summary>
            Provides a usage of <b>hidden unique rectangle</b> (HUR) or
            <b>hidden avoidable rectangle</b> (HAR) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ConjugatePairs">All conjugate pairs.</param>
            <param name="AbsoluteOffset">The absolute offset used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.HiddenUrStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int32[],System.Boolean,System.Collections.Generic.IReadOnlyList{Sudoku.Data.ConjugatePair},System.Int32)">
            <summary>
            Provides a usage of <b>hidden unique rectangle</b> (HUR) or
            <b>hidden avoidable rectangle</b> (HAR) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ConjugatePairs">All conjugate pairs.</param>
            <param name="AbsoluteOffset">The absolute offset used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.HiddenUrStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.Ur2DOr3XStepInfo">
            <summary>
            Provides a usage of <b>unique rectangle + 2D (or 3X)</b> or
            <b>avoidable rectangle + 2D (or 3X)</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ConjugatePairs">All conjugate pairs.</param>
            <param name="XDigit">The X digit.</param>
            <param name="YDigit">The Y digit.</param>
            <param name="XyCell">The cell that only contains X and Y digit.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.Ur2DOr3XStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode,System.Int32,System.Int32,System.Int32[],System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>unique rectangle + 2D (or 3X)</b> or
            <b>avoidable rectangle + 2D (or 3X)</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ConjugatePairs">All conjugate pairs.</param>
            <param name="XDigit">The X digit.</param>
            <param name="YDigit">The Y digit.</param>
            <param name="XyCell">The cell that only contains X and Y digit.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.Ur2DOr3XStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.Ur2DOr3XStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.Ur2DOr3XStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.Ur2DOr3XStepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrPlusStepInfo">
            <summary>
            Provides a usage of <b>unique rectangle plus</b> (UR+) or
            <b>avoidable rectangle plus</b> (AR+) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ConjugatePairs">All conjugate pairs.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrPlusStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode,System.Int32,System.Int32,System.Int32[],System.Boolean,System.Collections.Generic.IReadOnlyList{Sudoku.Data.ConjugatePair},System.Int32)">
            <summary>
            Provides a usage of <b>unique rectangle plus</b> (UR+) or
            <b>avoidable rectangle plus</b> (AR+) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ConjugatePairs">All conjugate pairs.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrPlusStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrPlusStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrPlusStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrPlusStepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode,System.Int32,System.Int32,System.Int32[],System.Boolean,System.Int32)">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.GetAdditional">
            <summary>
            Get additional string.
            </summary>
            <returns>The additional string.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.ToStringInternal">
            <summary>
            Same as <see cref="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.ToString"/> but this is implementation part.
            </summary>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.System#IComparable{Sudoku#Solving#Manual#Uniqueness#Rects#UrStepInfo}#CompareTo(Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.InternalComparsion(Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo,Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo)">
            <summary>
            Internal comparsion.
            </summary>
            <param name="l">The left comparer.</param>
            <param name="r">The right comparer.</param>
            <returns>An <see cref="T:System.Int32"/> value indicating the result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.op_GreaterThan(Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo,Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_GreaterThan(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.op_GreaterThanOrEqual(Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo,Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_GreaterThanOrEqual(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.op_LessThan(Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo,Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_LessThan(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo.op_LessThanOrEqual(Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo,Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo)">
            <inheritdoc cref="M:Sudoku.DocComments.Operators.op_LessThanOrEqual(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher">
            <summary>
            Encapsulates an <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) technique searcher.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher._allowIncompleteUr">
            <summary>
            Indicates whether the UR can be incomplete. In other words,
            some of UR candidates can be removed before the pattern forms.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher._searchExtended">
            <summary>
            Indicates whether the searcher can search for extended URs.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes an instance with the specified value indicating
            whether the structure can be incomplete, and a value indicating
            whether the searcher can search for extended URs.
            </summary>
            <param name="allowIncomplete">
            A <see cref="T:System.Boolean"/> value indicating that.
            </param>
            <param name="searchExtended">A <see cref="T:System.Boolean"/> value indicating that.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Boolean)">
            <summary>
            Get all possible hints from the grid.
            </summary>
            <param name="gathered">The list stored the result.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="arMode">Indicates whether the current mode is searching for ARs.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckPreconditions(Sudoku.Data.SudokuGrid@,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Check preconditions.
            </summary>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is searching for ARs.</param>
            <returns>Indicates whether the UR is passed to check.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.IsConjugatePair(System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            To determine whether the specified region forms a conjugate pair
            of the specified digit, and the cells where they contain the digit
            is same as the given map contains.
            </summary>
            <param name="digit">The digit.</param>
            <param name="map">(<see langword="in"/> parameter) The map.</param>
            <param name="region">The region.</param>
            <returns>A <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckHighlightType(Sudoku.Drawing.DrawingInfo@)">
            <summary>
            Check highlight type.
            </summary>
            <param name="pair">(<see langword="in"/> parameter) The pair.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.GetDiagonalCell(System.Int32[],System.Int32)">
            <summary>
            Get a cell that can't see each other.
            </summary>
            <param name="urCells">The UR cells.</param>
            <param name="cell">The current cell.</param>
            <returns>The diagonal cell.</returns>
            <exception cref="T:System.ArgumentException">
            Throws when the specified argument <paramref name="cell"/> is invalid.
            </exception>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.IsSameRegionCell(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get a cell that is in the same region of the specified cell lies in.
            </summary>
            <param name="currentCell">The current cell.</param>
            <param name="anotherCell">Another cell to check.</param>
            <param name="region">
            (<see langword="out"/> parameter) The result regions that both cells lie in.
            If the cell can't be found, the parameter will be an empty array of type <see cref="T:System.Int32"/>.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/> value indicating whether the another cell is same region as the current one.
            </returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.GetHighlightCells(System.Int32[])">
            <summary>
            Get all highlight cells.
            </summary>
            <param name="urCells">The all UR cells used.</param>
            <returns>The list of highlight cells.</returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckType3Naked(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckType5(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check type 5.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckType6(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check type 6.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckHidden(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check hidden UR.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check2D(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+2D.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check2B1SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+2B/1SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check2D1SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+2D/1SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check3X(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+3X.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check3X2SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+3X/2SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check3N2SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+3N/2SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check3U2SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+3U/2SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check3E2SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+3E/2SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="cornerCell">The corner cell.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check4X3SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+4X/3SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.Check4C3SL(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32)">
            <summary>
            Check UR+4C/3SL.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.CheckWing(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Rects.UrStepInfo},Sudoku.Data.SudokuGrid@,System.Int32[],System.Boolean,System.Int16,System.Int32,System.Int32,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32,System.Int32)">
            <summary>
            Check UR-XY-Wing, UR-XYZ-Wing and UR-WXYZ-Wing.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="urCells">All UR cells.</param>
            <param name="arMode">Indicates whether the current mode is AR mode.</param>
            <param name="comparer">The mask comparer.</param>
            <param name="d1">The digit 1 used in UR.</param>
            <param name="d2">The digit 2 used in UR.</param>
            <param name="corner1">The corner cell 1.</param>
            <param name="corner2">The corner cell 2.</param>
            <param name="otherCellsMap">
            (<see langword="in"/> parameter) The map of other cells during the current UR searching.
            </param>
            <param name="size">The size of the wing to search.</param>
            <param name="index">The index.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrStepSearcher.PossibleUrList">
            <summary>
            <para>The table of all UR cells.</para>
            <para>You <b>can't</b> modify any values in this table.</para>
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrType1StepInfo">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) type 1 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int32[],System.Boolean,System.Int32)">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) type 1 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType1StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType1StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType1StepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrType2StepInfo">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) type 2 (or type 5) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ExtraDigit">The extra digit.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode,System.Int32,System.Int32,System.Int32[],System.Boolean,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) type 2 (or type 5) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ExtraDigit">The extra digit.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType2StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType2StepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) type 3 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ExtraDigits">All extra digits.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Region">The region.</param>
            <param name="IsNaked">Indicates whether the subset is naked.</param>
             <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int32[],System.Boolean,System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Int32,System.Boolean,System.Int32)">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) type 3 technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ExtraDigits">All extra digits.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Region">The region.</param>
            <param name="IsNaked">Indicates whether the subset is naked.</param>
             <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo.BaseDifficulty">
            <summary>
            Indicates the base difficulty.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo.SizeExtraDifficulty">
            <summary>
            Indicates the extra difficulty on size.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrType3StepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode">
            <summary>
            Indicates the type code for each UR type. Some types have the another name,
            which have been listed also.
            </summary>
            <remarks>
            All types can be found in
            <a href="https://github.com/Sunnie-Shine/Sudoku/wiki/The-gallery-of-Unique-Rectangles">this link</a>.
            </remarks>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus1">
            <summary>
            Indicates the type 1 (UR + 1).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Type1">
            <summary>
            Indicates the type 1 (UR + 1).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus2x">
            <summary>
            Indicates the type 2 (UR + 2x).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Type2">
            <summary>
            Indicates the type 2 (UR + 2x).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Type3">
            <summary>
            Indicates the type 3 (UR + 2X).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus2X1SL">
            <summary>
            Indicates the type 4 (UR + 2X / 1SL).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Type4">
            <summary>
            Indicates the type 4 (UR + 2X / 1SL).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus2d_Lower">
            <summary>
            Indicates the type 5 (UR + 2d).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3x_Lower">
            <summary>
            Indicates the type 5 (UR + 3x).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Type5">
            <summary>
            Indicates the type 5 (UR + 2d or UR + 3x).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Type6">
            <summary>
            Indicates the type 6.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Hidden">
            <summary>
            Indicates the hidden UR (UR + 3C / 2SL).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3C2SL">
            <summary>
            Indicates the hidden UR (UR + 3C / 2SL).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus2D_Upper">
            <summary>
            Indicates the UR + 2D.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus2B1SL">
            <summary>
            Indicates the UR + 2B / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus2D1SL">
            <summary>
            Indicates the UR + 2D / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3X_Upper">
            <summary>
            Indicates the UR + 3X.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3x1SL_Lower">
            <summary>
            Indicates the UR + 3x / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3X1SL_Upper">
            <summary>
            Indicates the UR + 3X / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3X2SL">
            <summary>
            Indicates the UR + 3X / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3N2SL">
            <summary>
            Indicates the UR + 3N / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3U2SL">
            <summary>
            Indicates the UR + 3U / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus3E2SL">
            <summary>
            Indicates the UR + 3E / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus4x1SL_Lower">
            <summary>
            Indicates the UR + 4x / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus4X1SL_Upper">
            <summary>
            Indicates the UR + 4X / 1SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus4x2SL_Lower">
            <summary>
            Indicates the UR + 4x / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus4X2SL_Upper">
            <summary>
            Indicates the UR + 4X / 2SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus4X3SL">
            <summary>
            Indicates the UR + 4X / 3SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Plus4C3SL">
            <summary>
            Indicates the UR + 4C / 3SL.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.XyWing">
            <summary>
            Indicates the UR-XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.XyzWing">
            <summary>
            Indicates the UR-XYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.WxyzWing">
            <summary>
            Indicates the UR-WXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.Sdc">
            <summary>
            Indicates the UR-SdC.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.APlus1">
            <summary>
            Indicates the type 1 (AR + 1).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AType1">
            <summary>
            Indicates the type 1 (AR + 1).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AType2">
            <summary>
            Indicates the type 2 (AR + 2x).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.APlus2X">
            <summary>
            Indicates the type 3 (AR + 2X).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AType3">
            <summary>
            Indicates the type 3 (AR + 2X).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.APlus2d_Lower">
            <summary>
            Indicates the type 5 (AR + 2d).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.APlus3x_Lower">
            <summary>
            Indicates the type 5 (AR + 3x).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AType5">
            <summary>
            Indicates the type 5 (AR + 2d or AR + 3x).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AHidden">
            <summary>
            Indicates the hidden AR (AR + 3C / 2SL).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.APlus3C2SL">
            <summary>
            Indicates the hidden AR (AR + 3C / 2SL).
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.APlus2D_Upper">
            <summary>
            Indicates the AR + 2D.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.APlus3X_Upper">
            <summary>
            Indicates the AR + 3X.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AXyWing">
            <summary>
            Indicates the AR-XY-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AXyzWing">
            <summary>
            Indicates the AR-XYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.AWxyzWing">
            <summary>
            Indicates the AR-WXYZ-Wing.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode.ASdc">
            <summary>
            Indicates the AR-SdC.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) with wings technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ExtraCells">The extra cells.</param>
            <param name="ExtraDigits">The extra digits.</param>
            <param name="Pivots">The pivot cells.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Solving.Manual.Uniqueness.Rects.UrTypeCode,System.Int32,System.Int32,System.Int32[],System.Boolean,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
            Provides a usage of <b>unique rectangle</b> (UR) or
            <b>avoidable rectangle</b> (AR) with wings technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="TypeCode">The type code.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="Cells">All cells.</param>
            <param name="IsAvoidable">Indicates whether the structure is an AR.</param>
            <param name="ExtraCells">The extra cells.</param>
            <param name="ExtraDigits">The extra digits.</param>
            <param name="Pivots">The pivot cells.</param>
            <param name="AbsoluteOffset">The absolute offset that used in sorting.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.ExtraDifficulty">
            <summary>
            Indicates the difficulty rating extra.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.AvoidableExtraDifficulty">
            <summary>
            Indicates the extra difficulty on whether the UR is an AR.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.WingSizeExtraDifficulty">
            <summary>
            Indicates the extra difficulty on wing size.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Rects.UrWithWingStepInfo.GetAdditional">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepInfo">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="Digit1">Indicates the digit 1.</param>
            <param name="Digit2">Indicates the digit 2.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="Digit1">Indicates the digit 1.</param>
            <param name="Digit2">Indicates the digit 2.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepSearcher">
            <summary>
            Encapsulates a <b>reverse bi-value universal grave</b> technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepSearcher.ContainsValidPath(Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{System.Int32}@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Link}@)">
            <summary>
            Check whether the specified cells form a valid unique loop (or rectangle).
            </summary>
            <param name="cells">(<see langword="in"/> parameter) The cells.</param>
            <param name="list">
            (<see langword="out"/> parameter) If found any valid loop, the value will be the cells in order;
            otherwise, <see langword="null"/>.
            </param>
            <param name="links">
            (<see langword="out"/> parameter) If found any valid loop, the value will be 
            </param>
            <returns></returns>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,Sudoku.Data.Cells@,System.Int32,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Link},System.Int16)">
            <summary>
            Check the type 1.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="d1">The digit 1 to check.</param>
            <param name="d2">The digit 2 to check.</param>
            <param name="loop">(<see langword="in"/> parameter) The cells of that loop.</param>
            <param name="extraCell">Indicates the extra cell.</param>
            <param name="links">The links.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugStepInfo},Sudoku.Data.SudokuGrid@,System.Int32,System.Int32,Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Collections.Generic.IReadOnlyList{Sudoku.Data.Link},System.Int16)">
            <summary>
            Check the type 2.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="d1">The digit 1 to check.</param>
            <param name="d2">The digit 2 to check.</param>
            <param name="loop">(<see langword="in"/> parameter) The cells of that loop.</param>
            <param name="extraCells">(<see langword="in"/> parameter) The cells of all extra cells.</param>
            <param name="links">The links.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType1StepInfo">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 1</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="Anchor">Indicates the anchor cell that produces the conclusion.</param>
            <param name="AnchorLastDigit">
            Indicates the digit when the anchor cell is filled with it, then the structure may
            form a deadly pattern.
            </param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 1</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="Anchor">Indicates the anchor cell that produces the conclusion.</param>
            <param name="AnchorLastDigit">
            Indicates the digit when the anchor cell is filled with it, then the structure may
            form a deadly pattern.
            </param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType1StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType1StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType1StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType2StepInfo">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 2</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int32,System.Int32,System.Int32)">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 2</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType2StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType2StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType3StepInfo">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 3</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="DigitsMask">All extra digits used.</param>
            <param name="IsNaked">Indicates whether the subset is naked.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int32,System.Int32,System.Int16,System.Boolean)">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 3</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="DigitsMask">All extra digits used.</param>
            <param name="IsNaked">Indicates whether the subset is naked.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType3StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType3StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType3StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType4StepInfo">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 4</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="ConjugatePair">Indicates the conjugate pair.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType4StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,Sudoku.Data.Cells@,System.Int32,System.Int32,Sudoku.Data.ConjugatePair@)">
            <summary>
            Provides a usage of <b>reverse bi-value universal grave type 4</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Loop">All cells used.</param>
            <param name="ExtraCells">All extra cells.</param>
            <param name="Digit1">The digit 1 used.</param>
            <param name="Digit2">The digit 2 used.</param>
            <param name="ConjugatePair">Indicates the conjugate pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType4StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType4StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType4StepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Reversal.ReverseBugType4StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo">
            <summary>
            Provides a usage of <b>unique square</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Provides a usage of <b>unique square</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo.Name">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo.ShowDifficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher">
            <summary>
            Encapsulates a <b>uniqueness square</b> (US) technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.CheckType1(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check type 1.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.CheckType2(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check type 2.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.CheckType3(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check type 3.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.CheckType4(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@,Sudoku.Data.Cells@,System.Int16)">
            <summary>
            Check type 4.
            </summary>
            <param name="accumulator">The technique accumulator.</param>
            <param name="grid">(<see langword="in"/> parameter) The grid.</param>
            <param name="pattern">(<see langword="in"/> parameter) The pattern.</param>
            <param name="mask">The mask.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.ChuteIterator">
            <summary>
            The chute iterator.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.Patterns">
            <summary>
            Indicates the patterns.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsStepSearcher.#cctor">
            <inheritdoc cref="T:Sudoku.DocComments.StaticConstructor"/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Square.UsType1StepInfo">
            <summary>
            Provides a usage of <b>unique square type 1</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="Candidate">Indicates the true candidate.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType1StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,System.Int32)">
            <summary>
            Provides a usage of <b>unique square type 1</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="Candidate">Indicates the true candidate.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsType1StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType1StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Square.UsType2StepInfo">
            <summary>
            Provides a usage of <b>unique square type 2</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType2StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,System.Int32)">
            <summary>
            Provides a usage of <b>unique square type 2</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraDigit">The extra digit.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsType2StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsType2StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType2StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Square.UsType3StepInfo">
            <summary>
            Provides a usage of <b>unique square type 3</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraDigitsMask">The extra digits mask.</param>
            <param name="ExtraCells">The extra cells.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType3StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,System.Int16,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>unique square type 3</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="ExtraDigitsMask">The extra digits mask.</param>
            <param name="ExtraCells">The extra cells.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsType3StepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsType3StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsType3StepInfo.ExtraDifficulty">
            <summary>
            Indicates the extra difficulty.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType3StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.Square.UsType4StepInfo">
            <summary>
            Provides a usage of <b>unique square type 4</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="ConjugateRegion">The so-called conjugate region.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType4StepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},Sudoku.Data.Cells@,System.Int16,System.Int32,System.Int32,Sudoku.Data.Cells@)">
            <summary>
            Provides a usage of <b>unique square type 4</b> (US) technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Cells">The cells.</param>
            <param name="DigitsMask">The digits mask.</param>
            <param name="Digit1">The digit 1.</param>
            <param name="Digit2">The digit 2.</param>
            <param name="ConjugateRegion">The so-called conjugate region.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Uniqueness.Square.UsType4StepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.Square.UsType4StepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.UniquenessStepInfo">
            <summary>
            Provides a usage of <b>uniqueness</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Uniqueness.UniquenessStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>uniqueness</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Uniqueness.UniquenessStepSearcher">
            <summary>
            Encapsulates a <b>uniqueness</b> technique searcher.
            </summary>
        </member>
        <member name="T:Sudoku.Solving.Manual.Wings.Irregular.IrregularWingStepInfo">
            <summary>
            Encapsulates a usage of <b>irregular wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Irregular.IrregularWingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Encapsulates a usage of <b>irregular wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Wings.Irregular.IrregularWingStepSearcher">
            <summary>
            Encapsulates an <b>irregular wing</b> technique searcher.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Irregular.IrregularWingStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Irregular.IrregularWingStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
            <remarks>
            In fact, <c>Hybrid-Wing</c>s, <c>Local-Wing</c>s, <c>Split-Wing</c>s and <c>M-Wing</c>s can
            be found in another searcher. In addition, these wings are not elementary and necessary techniques
            so we doesn't need to list them.
            </remarks>
        </member>
        <member name="T:Sudoku.Solving.Manual.Wings.Irregular.WWingStepInfo">
            <summary>
            Provides a usage of <b>W-Wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="StartCell">The start cell.</param>
            <param name="EndCell">The end cell.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Irregular.WWingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,Sudoku.Data.ConjugatePair@)">
            <summary>
            Provides a usage of <b>W-Wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="StartCell">The start cell.</param>
            <param name="EndCell">The end cell.</param>
            <param name="ConjugatePair">The conjugate pair.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Irregular.WWingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Irregular.WWingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Irregular.WWingStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Irregular.WWingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo">
            <summary>
            Provides a usage of <b>regular wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pivot">The pivot cell.</param>
            <param name="PivotCandidatesCount">The number of candidates that is in the pivot.</param>
            <param name="DigitsMask">The mask of all digits used.</param>
            <param name="Cells">The cells used.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View},System.Int32,System.Int32,System.Int16,System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Provides a usage of <b>regular wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
            <param name="Pivot">The pivot cell.</param>
            <param name="PivotCandidatesCount">The number of candidates that is in the pivot.</param>
            <param name="DigitsMask">The mask of all digits used.</param>
            <param name="Cells">The cells used.</param>
        </member>
        <member name="F:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.DifficultyRating">
            <summary>
            The difficulty rating.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.RegularWingNames">
            <summary>
            The names of all regular wings by their sizes.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.IsIncomplete">
            <summary>
            Indicates whether the structure is incomplete.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.Size">
            <summary>
            Indicates the size of this regular wing.
            </summary>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.Difficulty">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.DifficultyLevel">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.TechniqueCode">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.InternalName">
            <summary>
            Indicates the internal name.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepSearcher">
            <summary>
            Encapsulates a <b>regular wing</b> technique solver.
            </summary>
        </member>
        <member name="F:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepSearcher._size">
            <summary>
            The size.
            </summary>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepSearcher.#ctor(System.Int32)">
            <summary>
            Initializes an instance with the specified size.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="P:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepSearcher.Properties">
            <inheritdoc cref="T:Sudoku.DocComments.SearchingProperties"/>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.Regular.RegularWingStepSearcher.GetAll(System.Collections.Generic.IList{Sudoku.Solving.Manual.StepInfo},Sudoku.Data.SudokuGrid@)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Solving.Manual.Wings.WingStepInfo">
            <summary>
            Provides a usage of <b>wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="M:Sudoku.Solving.Manual.Wings.WingStepInfo.#ctor(System.Collections.Generic.IReadOnlyList{Sudoku.Data.Conclusion},System.Collections.Generic.IReadOnlyList{Sudoku.Drawing.View})">
            <summary>
            Provides a usage of <b>wing</b> technique.
            </summary>
            <param name="Conclusions">All conclusions.</param>
            <param name="Views">All views.</param>
        </member>
        <member name="T:Sudoku.Solving.Manual.Wings.WingStepSearcher">
            <summary>
            Encapsulates a <b>wing</b> technique solver.
            </summary>
        </member>
    </members>
</doc>
