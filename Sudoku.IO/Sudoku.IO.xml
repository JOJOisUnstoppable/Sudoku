<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.IO</name>
    </assembly>
    <members>
        <member name="T:Sudoku.IO.GridReader">
            <summary>
            Provides a grid text reader.
            </summary>
        </member>
        <member name="F:Sudoku.IO.GridReader._reader">
            <summary>
            Indicates the inner text reader instance.
            </summary>
        </member>
        <member name="M:Sudoku.IO.GridReader.#ctor(System.String)">
            <summary>
            Initializes an instance with a path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Sudoku.IO.GridReader.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.IO.GridReader.ReadLine">
            <summary>
            Read a line of all text, and parse it to grid.
            </summary>
            <returns>
            The result after parsed. If failed to parse, the value will be
            <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Sudoku.IO.GridReader.ReadToEnd">
            <summary>
            Read all text in a file, and parse it to grid.
            </summary>
            <returns>
            The result after parsed. If failed to parsem the value will be
            <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Sudoku.IO.GridReader.ReadLineAsync(System.Boolean)">
            <summary>
            Read a line of all text, and parse it to grid in an asynchronized way.
            </summary>
            <param name="continueOnCapturedContext">
            <see langword="true"/> to attempt to marshal the continuation back to the
            original context captured; otherwise, <see langword="false"/>.
            </param>
            <returns>The task.</returns>
        </member>
        <member name="M:Sudoku.IO.GridReader.ReadToEndAsync(System.Boolean)">
            <summary>
            Read all text in a file, and parse it to grid in an asynchronized way.
            </summary>
            <param name="continueOnCapturedContext">
            <see langword="true"/> to attempt to marshal the continuation back to the
            original context captured; otherwise, <see langword="false"/>.
            </param>
            <returns>The task.</returns>
        </member>
        <member name="T:Sudoku.IO.GridWriter">
            <summary>
            Provides a grid text writer.
            </summary>
        </member>
        <member name="F:Sudoku.IO.GridWriter._writer">
            <summary>
            Indicates the inner text writer.
            </summary>
        </member>
        <member name="M:Sudoku.IO.GridWriter.#ctor(System.String)">
            <summary>
            Initializes an instance with the file path.
            </summary>
            <param name="path">The file path.</param>
        </member>
        <member name="M:Sudoku.IO.GridWriter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.IO.GridWriter.Write(Sudoku.Data.Meta.Grid)">
            <summary>
            Write the grid.
            </summary>
            <param name="grid">The grid to write.</param>
        </member>
        <member name="M:Sudoku.IO.GridWriter.Write(Sudoku.Data.Meta.Grid,System.String)">
            <summary>
            Write the grid with the specified format.
            </summary>
            <param name="grid">The grid to write.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Sudoku.IO.GridWriter.WriteAsync(Sudoku.Data.Meta.Grid,System.Boolean)">
            <summary>
            Write the grid in an asynchronized way.
            </summary>
            <param name="grid">The grid to write.</param>
            <param name="continueOnCapturedContext">
            <see langword="true"/> to attempt to marshal the continuation back to the
            original context captured; otherwise, <see langword="false"/>.
            </param>
            <returns>The task.</returns>
        </member>
        <member name="M:Sudoku.IO.GridWriter.WriteAsync(Sudoku.Data.Meta.Grid,System.String,System.Boolean)">
            <summary>
            Write the grid with the specified format in an asynchronized way.
            </summary>
            <param name="grid">The grid to write.</param>
            <param name="format">The format.</param>
            <param name="continueOnCapturedContext">
            <see langword="true"/> to attempt to marshal the continuation back to the
            original context captured; otherwise, <see langword="false"/>.
            </param>
            <returns>The task.</returns>
        </member>
    </members>
</doc>
