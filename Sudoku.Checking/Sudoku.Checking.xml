<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Checking</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Checking.BackdoorSearcher">
            <summary>
            Provides a backdoor searcher.
            </summary>
            <remarks>
            <b>Backdoor</b>s are <see cref="T:Sudoku.Solving.Conclusion"/>s making the difficulty of
            a puzzle decrease sharply after they are applied to a grid.
            </remarks>
            <seealso cref="T:Sudoku.Solving.Conclusion"/>
        </member>
        <member name="F:Sudoku.Checking.BackdoorSearcher._result">
            <summary>
            The result list.
            </summary>
        </member>
        <member name="F:Sudoku.Checking.BackdoorSearcher.TestSolver">
            <summary>
            The temporary test solver used in this searcher.
            </summary>
        </member>
        <member name="M:Sudoku.Checking.BackdoorSearcher.#ctor(Sudoku.Data.Meta.Grid,System.Int32)">
            <summary>
            Initializes an instance with a grid and searching depth.
            </summary>
            <param name="grid">The sudoku grid to search backdoors.</param>
            <param name="depth">The maximum depth to search. No more than 3.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when <paramref name="depth"/> is greater than 3.
            </exception>
            <seealso cref="P:Sudoku.Checking.BackdoorSearcher.Depth"/>
        </member>
        <member name="P:Sudoku.Checking.BackdoorSearcher.Depth">
            <summary>
            The maximum depth to search.
            </summary>
        </member>
        <member name="M:Sudoku.Checking.BackdoorSearcher.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Checking.BackdoorSearcher.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Checking.BackdoorSearcher.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Checking.BackdoorSearcher.FindBackdoors(Sudoku.Data.Meta.Grid)">
            <summary>
            To find all backdoors in a sudoku grid.
            </summary>
            <param name="grid">A sudoku grid to search backdoors.</param>
        </member>
        <member name="T:Sudoku.Checking.PuzzleAttributeChecker">
            <summary>
            Provides some puzzle attributes validation operations.
            </summary>
        </member>
        <member name="M:Sudoku.Checking.PuzzleAttributeChecker.IsUnique(Sudoku.Data.Meta.Grid,Sudoku.Data.Meta.Grid@)">
            <summary>
            To check if a puzzle has only one solution or not.
            </summary>
            <param name="this">The puzzle to check.</param>
            <param name="solutionIfUnique">
            (out parameter) The solution if the puzzle is unique; otherwise, <c>null</c>.
            </param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Checking.PuzzleAttributeChecker.IsMinimal(Sudoku.Data.Meta.Grid)">
            <summary>
            To check if the puzzle is minimal or not.
            </summary>
            <param name="this">The puzzle to check.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Checking.PuzzleAttributeChecker.IsPearl(Sudoku.Data.Meta.Grid)">
            <summary>
            To check if the puzzle is pearl or not.
            </summary>
            <param name="this">The puzzle to check.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.Checking.PuzzleAttributeChecker.IsDiamond(Sudoku.Data.Meta.Grid)">
            <summary>
            To check if the puzzle is diamond or not.
            </summary>
            <param name="this">The puzzle to check.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
    </members>
</doc>
