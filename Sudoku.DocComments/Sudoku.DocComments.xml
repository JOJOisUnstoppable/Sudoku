<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.DocComments</name>
    </assembly>
    <members>
        <member name="T:Sudoku.DocComments.DeconstructMethod">
            <summary>
            (Deconstruct method) Deconstruct the instance to multiple values.
            </summary>
            <remarks>
            <para>
            The method should be customed when the type is a normal <see langword="struct"/> or <see langword="class"/>.
            If the method is a <see langword="record"/>, the method will be generated by the comipler and returns all
            properties from those <see langword="out"/> parameters.
            </para>
            <para>
            Please note that the deconstruct methods can contain more than 8 <see langword="out"/> parameters, although
            a normal <see cref="T:System.ValueTuple"/> can only contain at most 8 parameters.
            </para>
            </remarks>
            <seealso cref="T:System.ValueTuple"/>
        </member>
        <member name="T:Sudoku.DocComments.DefaultConstructor">
            <summary>
            Indicates the default constructor.
            </summary>
            <remarks>
            Default constructor is a parameterless constructor, which is very useful in <see langword="struct"/>s
            and <see langword="class"/>es. However, please note that if you defined other constructors
            in <see langword="class"/>es, the default constructor won't be generated automatically.
            </remarks>
        </member>
        <member name="T:Sudoku.DocComments.Events">
            <summary>
            Provides doc comments on event-delegating methods.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.Events.Click(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when a control is clicked.
            </summary>
            <param name="sender">The control to trigger <c>Click</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.TextChanged(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the text in a text box is changed.
            </summary>
            <param name="sender">The control to trigger <c>TextChanged</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when a combo box selected to another one.
            </summary>
            <param name="sender">The control to trigger <c>SelectionChanged</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the size of a window is changed.
            </summary>
            <param name="sender">The control to trigger <c>SizeChanged</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the value is changed.
            </summary>
            <param name="sender">The control to trigger <c>ValueChanged</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.DragDelta(System.Object,System.EventArgs)">
            <summary>
            Trigger execution of this method when a splitter changed its position.
            </summary>
            <param name="sender">The control to trigger <c>DragDelta</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.ContextMenuOpening(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when a context menu is opening.
            </summary>
            <param name="sender">The control to trigger <c>ContextMenuOpening</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.MouseLeftButtonDown(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the left button in mouse is pressed down.
            </summary>
            <param name="sender">The control to trigger <c>MouseLeftButtonDown</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.MouseRightButtonDown(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the right button in mouse is pressed down.
            </summary>
            <param name="sender">The control to trigger <c>MouseRightButtonDown</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.MouseRightButtonUp(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the right button in mouse is pressed up.
            </summary>
            <param name="sender">The control to trigger <c>MouseRightButtonUp</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.PreviewKeyDown(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the key is down before triggering key down event.
            </summary>
            <param name="sender">The control to trigger <c>PreviewKeyDown</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.MouseDown(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the mouse is pressed down.
            </summary>
            <param name="sender">The control to trigger <c>MouseDown</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.MouseUp(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the mouse is pressed up.
            </summary>
            <param name="sender">The control to trigger <c>MouseUp</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="M:Sudoku.DocComments.Events.MouseMove(System.Object,System.EventArgs)">
            <summary>
            Trigger execution when the mouse cursor is moved.
            </summary>
            <param name="sender">The control to trigger <c>MouseMove</c> event.</param>
            <param name="e">The event information, whose value is specified as a parameter.</param>
        </member>
        <member name="T:Sudoku.DocComments.ExocetElimination">
            <summary>
            Provides with doc comments for exocet eliminations.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.ExocetElimination.#ctor(System.Collections.Generic.IList{Sudoku.DocComments.ExocetElimination.Conclusion})">
            <summary>
            Initializes an instance with the specified conclusions.
            </summary>
            <param name="conclusions">All conclusions.</param>
        </member>
        <member name="P:Sudoku.DocComments.ExocetElimination.Count">
            <summary>
            Indicates the number of all conclusions.
            </summary>
        </member>
        <member name="P:Sudoku.DocComments.ExocetElimination.Conclusions">
            <summary>
            Indicates the conclusions.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.ExocetElimination.Add(Sudoku.DocComments.ExocetElimination.Conclusion@)">
            <summary>
            Add the conclusion into the collection.
            </summary>
            <param name="conclusion">(<see langword="in"/> parameter) The conclusion.</param>
        </member>
        <member name="M:Sudoku.DocComments.ExocetElimination.AddRange(System.Collections.Generic.IEnumerable{Sudoku.DocComments.ExocetElimination.Conclusion})">
            <summary>
            Add a serial of conclusions into this collection.
            </summary>
            <param name="conclusions">All conclusions.</param>
        </member>
        <member name="M:Sudoku.DocComments.ExocetElimination.Merge(Sudoku.DocComments.ExocetElimination[])">
            <summary>
            Merge all eliminations.
            </summary>
            <param name="eliminations">(<see langword="params"/> parameter) All instances to merge.</param>
            <returns>The merged result.</returns>
        </member>
        <member name="M:Sudoku.DocComments.ExocetElimination.MergeAll(System.Collections.Generic.IEnumerable{Sudoku.DocComments.ExocetElimination})">
            <summary>
            Merge all conclusions.
            </summary>
            <param name="list">The list.</param>
            <returns>The merged result.</returns>
        </member>
        <member name="M:Sudoku.DocComments.ExocetElimination.MergeAll(Sudoku.DocComments.ExocetElimination[])">
            <summary>
            Merge all conclusions.
            </summary>
            <param name="list">(<see langword="params"/> parameter) The list.</param>
            <returns>The merged result.</returns>
        </member>
        <member name="T:Sudoku.DocComments.ExocetElimination.Conclusion">
            <summary>
            Encapsulates a conclusion same as <c>Sudoku.Data.Conclusion</c>.
            </summary>
        </member>
        <member name="T:Sudoku.DocComments.Formattable">
            <summary>
            Provides with doc comments for <c>ToString</c> methods.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.Formattable.ToString(System.String)">
            <summary>
            Returns a string that represents the current object with the specified format string.
            </summary>
            <param name="format">The format. If available, the parameter can be <see langword="null"/>.</param>
            <returns>The string result.</returns>
        </member>
        <member name="T:Sudoku.DocComments.Integer">
            <summary>
            Provides with doc comments for checking methods around integers.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.Integer.IsPowerOfTwo(Sudoku.DocComments.Integer)">
            <summary>
            Indicates whether the specified value is the power of two.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The value.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.DocComments.Integer.FindFirstSet(Sudoku.DocComments.Integer)">
            <summary>
            Find the first offset of set bit of the binary representation
            of the specified value. If the value is 0, this method
            will always return -1.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The value.</param>
            <returns>
            An <see cref="T:System.Int32"/> value indicating that. Please note that if the value is 0,
            the return value will be always 32 (for <see cref="T:System.Int32"/>) or 64 (for <see cref="T:System.Int64"/>).
            The method simply calls the method <see cref="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)"/>
            or <see cref="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)"/>.
            </returns>
            <seealso cref="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)"/>
            <seealso cref="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)"/>
        </member>
        <member name="M:Sudoku.DocComments.Integer.PopCount(Sudoku.DocComments.Integer)">
            <summary>
            Get the total number of set bits of the binary representation of a specified value.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The value.</param>
            <returns>An <see cref="T:System.Int32"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.DocComments.Integer.GetNextSet(Sudoku.DocComments.Integer,System.Int32)">
            <summary>
            Find a index of the binary representation of a value after the specified index,
            whose bit is set <see langword="true"/>.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The value.</param>
            <param name="index">The index.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:Sudoku.DocComments.Integer.SetAt(Sudoku.DocComments.Integer,System.Int32)">
            <summary>
            Get an <see cref="T:System.Int32"/> value, indicating that the absolute position of
            all set bits with the specified set bit order.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The value.</param>
            <param name="order">The number of the order of set bits.</param>
            <returns>The position.</returns>
        </member>
        <member name="M:Sudoku.DocComments.Integer.GetAllSets(Sudoku.DocComments.Integer)">
            <summary>
            Find all offsets of set bits of the binary representation of a specified value.
            </summary>
            <param name="this">(<see langword="this"/> parameter) The value.</param>
            <returns>All offsets.</returns>
        </member>
        <member name="M:Sudoku.DocComments.Integer.ReverseBits(Sudoku.DocComments.Integer@)">
            <summary>
            <para>Reverse all bits in a specified value.</para>
            <para>
            Note that the value is passed by <b>reference</b> though the
            method is an extension method, and returns nothing.
            </para>
            </summary>
            <param name="this">(<see langword="this ref"/> parameter) The value.</param>
        </member>
        <member name="M:Sudoku.DocComments.Integer.GetEnumerator(Sudoku.DocComments.Integer)">
            <summary>
            <para>Extension get enumerator of this type.</para>
            <para>
            This method will allow you to use <see langword="foreach"/> loop to iterate on
            all indices of set bits.
            </para>
            </summary>
            <param name="this">
            (<see langword="this"/> parameter) The value.
            </param>
            <returns>All indices of set bits.</returns>
            <remarks>
            This implementation will allow you use <see langword="foreach"/> loop:
            <code>
            foreach (int setIndex in 17)
            {
            	// Do something...
            }
            </code>
            </remarks>
        </member>
        <member name="T:Sudoku.DocComments.Operators">
            <summary>
            Provides with doc comments for operators.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_Equality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To check whether two instances are equal.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_Equality</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_Inequality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To check whether two instances are not equal, which means they hold difference values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_Inequality</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_GreaterThan(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is greater than the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_GreaterThan</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_GreaterThanOrEqual(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is greater than or equal to the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_GreaterThanOrEqual</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_LessThan(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is less than the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_LessThan</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_LessThanOrEqual(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is less than or equal to the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_LessThanOrEqual</c>.
            </remarks>
        </member>
        <member name="T:Sudoku.DocComments.SearchingProperties">
            <summary>
            Indicates the searcher properties.
            </summary>
        </member>
        <member name="T:Sudoku.DocComments.StaticConstructor">
            <summary>
            Indicates the static constructor.
            </summary>
            <remarks>
            Static constructor is commonly appeared while initializing static fields. If the initialization can't
            be described by a simple value (or a simple expression), the static constructor will be useful.
            </remarks>
        </member>
    </members>
</doc>
