<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.DocComments</name>
    </assembly>
    <members>
        <member name="T:Sudoku.DocComments.DeconstructMethod">
            <summary>
            (Deconstruct method) Deconstruct the instance to multiple values.
            </summary>
            <remarks>
            <para>
            The method should be customed when the type is a normal <see langword="struct"/> or <see langword="class"/>.
            If the method is a <see langword="record"/>, the method will be generated by the comipler and returns all
            properties from those <see langword="out"/> parameters.
            </para>
            <para>
            Please note that the deconstruct methods can contain more than 8 <see langword="out"/> parameters, although
            a normal <see cref="T:System.ValueTuple"/> can only contain at most 8 parameters.
            </para>
            </remarks>
            <seealso cref="T:System.ValueTuple"/>
        </member>
        <member name="T:Sudoku.DocComments.DefaultConstructor">
            <summary>
            Indicates the default constructor.
            </summary>
        </member>
        <member name="T:Sudoku.DocComments.Formattable">
            <summary>
            Provides with doc comments for <c>ToString</c> methods.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.Formattable.ToString(System.String)">
            <summary>
            Returns a string that represents the current object with the specified format string.
            </summary>
            <param name="format">The format. If available, the parameter can be <see langword="null"/>.</param>
            <returns>The string result.</returns>
        </member>
        <member name="T:Sudoku.DocComments.Operators">
            <summary>
            Provides with doc comments for operators.
            </summary>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_Equality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To check whether two instances are equal.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_Equality</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_Inequality(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To check whether two instances are not equal, which means they hold difference values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_Inequality</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_GreaterThan(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is greater than the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_GreaterThan</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_GreaterThanOrEqual(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is greater than or equal to the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_GreaterThanOrEqual</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_LessThan(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is less than the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_LessThan</c>.
            </remarks>
        </member>
        <member name="M:Sudoku.DocComments.Operators.op_LessThanOrEqual(Sudoku.DocComments.Operators,Sudoku.DocComments.Operators)">
            <summary>
            To determine whether the left instance is less than or equal to the right one by their values.
            </summary>
            <param name="left">The left instance.</param>
            <param name="right">The right instance.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
            <remarks>
            This method is equivalent to the bottom-level method name called <c>op_LessThanOrEqual</c>.
            </remarks>
        </member>
        <member name="T:Sudoku.DocComments.StaticConstructor">
            <summary>
            Indicates the static constructor.
            </summary>
        </member>
    </members>
</doc>
