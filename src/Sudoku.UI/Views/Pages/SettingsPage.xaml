<Page
	x:Class="Sudoku.UI.Views.Pages.SettingsPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:c="using:Sudoku.UI.Views.Controls"
	xmlns:cvt="using:Sudoku.UI.DataConversion.ValueConverters"
	xmlns:data="using:Sudoku.UI.DataConversion"
	xmlns:dts="using:Sudoku.UI.DataConversion.DataTemplateSelectors"
	xmlns:m="using:Sudoku.UI.Models"
	xmlns:ms="using:Sudoku.UI.Models.SettingItems"
	xmlns:z="using:Sudoku.UI"
	xmlns:msx="using:Microsoft.UI.Xaml"
	mc:Ignorable="d"
	NavigationCacheMode="Required">
	<Grid>
		<Grid.Resources>
			<Thickness x:Key="_rSettingItemMargin">0,6,0,12</Thickness>
			<Thickness x:Key="_rSettingDescriptionMargin">0,9,0,0</Thickness>
			<cvt:Int32ToStringConverter x:Key="_rToStringConverter" />
			<Style x:Key="_rSettingItemNameTextBlockStyle" TargetType="TextBlock">
				<Setter Property="FontWeight" Value="Bold" />
			</Style>
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="60" />
		</Grid.RowDefinitions>

		<TextBlock
			Grid.Row="0" Text="{StaticResource SettingsPage_DetailDescrption}"
			Style="{ThemeResource PlainTextWithMarginBottom}" />
		<ListView x:Name="_cListView" ItemsSource="{x:Bind ((z:App)msx:Application.Current).RuntimeInfo.PreferenceItemGroups}" Grid.Row="1" SelectionMode="None">
			<ListView.ItemTemplate>
				<DataTemplate x:DataType="m:SettingGroupItem">
					<Expander Margin="40,20,0,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left">
						<Expander.Header>
							<Grid>
								<TextBlock
									Text="{x:Bind Name}" FontWeight="Bold" HorizontalAlignment="Left"
									VerticalAlignment="Center" />
								<TextBlock
									Text="{x:Bind Description}" HorizontalAlignment="Right"
									VerticalAlignment="Center" />
							</Grid>
						</Expander.Header>
						<Expander.Content>
							<ListView ItemsSource="{x:Bind SettingItem}" SelectionMode="None">
								<ListView.ItemTemplateSelector>
									<dts:SettingItemDataTemplateSelector>
										<dts:SettingItemDataTemplateSelector.DefaultTemplate>
											<DataTemplate x:DataType="ms:SettingItem">
												<TextBlock Text="{StaticResource __SampleField}" />
											</DataTemplate>
										</dts:SettingItemDataTemplateSelector.DefaultTemplate>
										<dts:SettingItemDataTemplateSelector.ToggleSwitchTemplate>
											<DataTemplate x:DataType="ms:ToggleSwitchSettingItem">
												<ToggleSwitch
													IsOn="{x:Bind GetPreference(),
														Mode=TwoWay,
														UpdateSourceTrigger=PropertyChanged,
														BindBack=SetPreference}"
													Margin="{StaticResource _rSettingItemMargin}"
													OnContent="{x:Bind OnContent}" OffContent="{x:Bind OffContent}">
													<ToggleSwitch.Header>
														<StackPanel>
															<TextBlock
																Text="{x:Bind Name}"
																Style="{StaticResource _rSettingItemNameTextBlockStyle}" />
															<TextBlock
																Visibility="{x:Bind data:SimpleConverters.StringToVisibility(Description)}"
																Text="{x:Bind Description}"
																Margin="{StaticResource _rSettingDescriptionMargin}"
																Style="{ThemeResource CaptionTextBlockStyle}" />
														</StackPanel>
													</ToggleSwitch.Header>
												</ToggleSwitch>
											</DataTemplate>
										</dts:SettingItemDataTemplateSelector.ToggleSwitchTemplate>
										<dts:SettingItemDataTemplateSelector.SliderTemplate>
											<DataTemplate x:DataType="ms:SliderSettingItem">
												<StackPanel Orientation="Horizontal">
													<Slider
														x:Name="_cSlider" TickPlacement="Outside"
														Width="600"
														Minimum="{x:Bind MinValue}" Maximum="{x:Bind MaxValue}"
														TickFrequency="{x:Bind TickFrequency}"
														StepFrequency="{x:Bind StepFrequency}"
														Margin="{StaticResource _rSettingItemMargin}"
														Value="{x:Bind GetPreference(),
															Mode=TwoWay,
															UpdateSourceTrigger=PropertyChanged,
															BindBack=SetPreference}">
														<Slider.Header>
															<StackPanel>
																<TextBlock
																	Text="{x:Bind Name}"
																	Style="{ThemeResource _rSettingItemNameTextBlockStyle}" />
																<TextBlock
																	Visibility="{x:Bind data:SimpleConverters.StringToVisibility(Description)}"
																	Text="{x:Bind Description}"
																	Margin="{StaticResource _rSettingDescriptionMargin}"
																	Style="{ThemeResource CaptionTextBlockStyle}" />
																<TextBlock
																	Style="{ThemeResource CaptionTextBlockStyle}"
																	Margin="{StaticResource _rSettingDescriptionMargin}"
																	Text="{x:Bind data:SimpleConverters.SliderPossibleValueString(MinValue,MaxValue,StepFrequency,TickFrequency)}" />
															</StackPanel>
														</Slider.Header>
													</Slider>
													<TextBlock
														VerticalAlignment="Center"
														Text="{Binding
															ElementName=_cSlider,
															Path=Value,
															Converter={StaticResource _rToStringConverter},
															ConverterParameter='0.0',
															UpdateSourceTrigger=PropertyChanged,
															Mode=OneWay}"
														Style="{StaticResource BoldText}" />
												</StackPanel>
											</DataTemplate>
										</dts:SettingItemDataTemplateSelector.SliderTemplate>
										<dts:SettingItemDataTemplateSelector.Int32SliderTemplate>
											<DataTemplate x:DataType="ms:Int32SliderSettingItem">
												<StackPanel Orientation="Horizontal">
													<Slider
														x:Name="_cSlider" TickPlacement="Outside"
														Width="600"
														Minimum="{x:Bind MinValue}" Maximum="{x:Bind MaxValue}"
														TickFrequency="{x:Bind TickFrequency}"
														StepFrequency="{x:Bind StepFrequency}"
														Margin="{StaticResource _rSettingItemMargin}"
														Value="{x:Bind GetPreference(),
															Mode=TwoWay,
															UpdateSourceTrigger=PropertyChanged,
															BindBack=SetPreference}">
														<Slider.Header>
															<StackPanel>
																<TextBlock
																	Text="{x:Bind Name}"
																	Style="{ThemeResource _rSettingItemNameTextBlockStyle}" />
																<TextBlock
																	Visibility="{x:Bind data:SimpleConverters.StringToVisibility(Description)}"
																	Text="{x:Bind Description}"
																	Margin="{StaticResource _rSettingDescriptionMargin}"
																	Style="{ThemeResource CaptionTextBlockStyle}" />
																<TextBlock
																	Style="{ThemeResource CaptionTextBlockStyle}"
																	Margin="{StaticResource _rSettingDescriptionMargin}"
																	Text="{x:Bind data:SimpleConverters.SliderPossibleValueStringInt32(MinValue,MaxValue,StepFrequency,TickFrequency)}" />
															</StackPanel>
														</Slider.Header>
													</Slider>
													<TextBlock
														VerticalAlignment="Center"
														Text="{Binding
															ElementName=_cSlider,
															Path=Value,
															Converter={StaticResource _rToStringConverter},
															ConverterParameter='0',
															UpdateSourceTrigger=PropertyChanged,
															Mode=OneWay}"
														Style="{StaticResource BoldText}" />
												</StackPanel>
											</DataTemplate>
										</dts:SettingItemDataTemplateSelector.Int32SliderTemplate>
										<dts:SettingItemDataTemplateSelector.ColorPickerTemplate>
											<DataTemplate x:DataType="ms:ColorPickerSettingItem">
												<StackPanel>
													<TextBlock
														Text="{x:Bind Name}"
														Style="{ThemeResource _rSettingItemNameTextBlockStyle}" />
													<TextBlock
														Visibility="{x:Bind data:SimpleConverters.StringToVisibility(Description)}"
														Text="{x:Bind Description}"
														Margin="{StaticResource _rSettingDescriptionMargin}"
														Style="{ThemeResource CaptionTextBlockStyle}" />
													<c:ColorSelector
														Margin="0,20,0,20"
														SelectedColor="{x:Bind GetPreference(),
															Mode=TwoWay,
															UpdateSourceTrigger=PropertyChanged,
															BindBack=SetPreference}" />
												</StackPanel>
											</DataTemplate>
										</dts:SettingItemDataTemplateSelector.ColorPickerTemplate>
										<dts:SettingItemDataTemplateSelector.ColorSelectorGroupTemplate>
											<DataTemplate x:DataType="ms:ColorSelectorGroupSettingItem">
												<StackPanel>
													<TextBlock
														Text="{x:Bind Name}"
														Style="{ThemeResource _rSettingItemNameTextBlockStyle}" />
													<TextBlock
														Visibility="{x:Bind data:SimpleConverters.StringToVisibility(Description)}"
														Text="{x:Bind Description}"
														Margin="{StaticResource _rSettingDescriptionMargin}"
														Style="{ThemeResource CaptionTextBlockStyle}" />
													<GridView
														SelectionMode="None" ItemsSource="{x:Bind ConstructInfoList()}"
														Margin="{StaticResource _rSettingDescriptionMargin}">
														<GridView.ItemsPanel>
															<ItemsPanelTemplate>
																<ItemsWrapGrid MaximumRowsOrColumns="5" />
															</ItemsPanelTemplate>
														</GridView.ItemsPanel>
														<GridView.ItemTemplate>
															<DataTemplate x:DataType="m:ColorSelectorGroupInfo">
																<c:ColorSelector
																	SelectedColor="{x:Bind Color,
																		Mode=TwoWay,
																		UpdateSourceTrigger=PropertyChanged}" />
															</DataTemplate>
														</GridView.ItemTemplate>
													</GridView>
												</StackPanel>
											</DataTemplate>
										</dts:SettingItemDataTemplateSelector.ColorSelectorGroupTemplate>
									</dts:SettingItemDataTemplateSelector>
								</ListView.ItemTemplateSelector>
							</ListView>
						</Expander.Content>
					</Expander>
				</DataTemplate>
			</ListView.ItemTemplate>
		</ListView>
		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>

			<Border Grid.ColumnSpan="4" BorderThickness="0,1.5,0,0" BorderBrush="Silver" />
			<TextBlock
				Text="{StaticResource SettingsPage_SavePreferenceDescription}" Grid.Column="0"
				HorizontalAlignment="Left" VerticalAlignment="Center" Margin="55,0,0,0" />
			<Button
				Content="{StaticResource SettingsPage_OpenPreferenceFolder}" Grid.Column="1"
				HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,15,0"
				Click="OpenPreferenceFolder_Click" />
			<Button
				Content="{StaticResource SettingsPage_BackupPreference}" Grid.Column="2"
				HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,15,0"
				Click="BackupPreference_ClickAsync" />
			<Button
				Content="{StaticResource SettingsPage_LoadLocalBackupPreference}" Grid.Column="3"
				HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,15,0"
				Click="LoadBackupPreferenceFromLocal_ClickAsync" />
		</Grid>
	</Grid>
</Page>
