<Page
	x:Class="Sudoku.UI.Views.Pages.SudokuPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:c="using:Sudoku.UI.Views.Controls"
	xmlns:cvt="using:Sudoku.UI.DataConversion.ValueConverters"
	xmlns:data="using:Sudoku.UI.DataConversion"
	xmlns:m="using:Sudoku.UI.Models"
	xmlns:xc="using:CommunityToolkit.WinUI.UI.Controls"
	mc:Ignorable="d" NavigationCacheMode="Required" Loaded="Page_Loaded">
	<ScrollViewer>
		<Grid>
			<Grid.Resources>
				<Style TargetType="xc:TabbedCommandBarItem">
					<Setter Property="DefaultLabelPosition" Value="Right" />
				</Style>
				<cvt:UndoOrRedoStackToIsEnabledConverter x:Key="_rUndoingOrRedoingConverter" />
				<cvt:ExpanderIsExpandedToOpenCloseConverter x:Key="_rExpanderHeaderConverter" />
				<cvt:ItemSourceNullabilityToVisibilityConverter x:Key="_rItemSourceNullabilityConverter" />
			</Grid.Resources>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<!--Tabbed command bar-->
			<xc:TabbedCommandBar Grid.ColumnSpan="2" Margin="25,0,25,0" IsTabStop="True">
				<xc:TabbedCommandBar.PaneFooter>
					<CommandBar Background="Transparent" DefaultLabelPosition="Right">
						<!--
						<AppBarButton Label="Share" Icon="Share"/>
						<AppBarButton Label="Comments" Icon="Message"/>
						-->
						<AppBarButton
							x:Name="_cClearInfoBars" Icon="ClearSelection"
							Label="{StaticResource SudokuPage_ClearInfoBars}">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandClearMessages_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
					</CommandBar>
				</xc:TabbedCommandBar.PaneFooter>
				<xc:TabbedCommandBar.MenuItems>
					<!--First tab-->
					<xc:TabbedCommandBarItem Header="{StaticResource SudokuPage_ToolList_Editing}">
						<AppBarButton Label="{StaticResource SudokuPage_Open}" Icon="OpenFile">
							<AppBarButton.Command>
								<XamlUICommand
									CanExecuteRequested="CommandOpenOrSaveSudokuFile_CanExecuteRequested"
									ExecuteRequested="CommandOpenSudokuFile_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_Copy}" Icon="Copy">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandCopySudokuGridText_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_CopyEx}" Icon="Copy">
							<AppBarButton.Flyout>
								<MenuFlyout>
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyInitial}"
										Click="CopyInitial_Click" />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyCurrent}"
										Click="CopyCurrent_Click" />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyCurrentIgnoreModifiable}"
										Click="CopyCurrentIgnoreModifiables_Click" />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopySolution}"
										Click="CopySolution_Click" />
									<MenuFlyoutSeparator />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyInitialMultilined}"
										Click="CopyInitialMultilined_Click" />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopySolutionMultilined}"
										Click="CopySolutionMultilined_Click" />
									<MenuFlyoutSeparator />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyPmCurrent}"
										Click="CopyPmCurrent_Click" />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyPmCurrentIgnoreModifiable}"
										Click="CopyPmCurrentIgnoreModifiable_Click" />
									<MenuFlyoutSeparator />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopySukakuCurrent}"
										Click="CopySukakuCurrent_Click" />
									<MenuFlyoutSeparator />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyExcelCurrent}"
										Click="CopyExcelCurrent_Click" />
									<MenuFlyoutSeparator />
									<MenuFlyoutItem
										Text="{StaticResource SudokuPage_CopyOpenSudokuCurrent}"
										Click="CopyOpenSudokuCurrent_Click" />
								</MenuFlyout>
							</AppBarButton.Flyout>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_CopyPic}" Icon="Copy">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandCopyControlSnapshot_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_Paste}" Icon="Paste">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandPasteSudokuGridText_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_Save}" Icon="Save">
							<AppBarButton.Command>
								<XamlUICommand
									CanExecuteRequested="CommandOpenOrSaveSudokuFile_CanExecuteRequested"
									ExecuteRequested="CommandSaveSudokuFile_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarSeparator />
						<AppBarButton Label="{StaticResource SudokuPage_Reset}" Icon="Refresh">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandReset_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_Clear}" Icon="Clear">
							<AppBarButton.Flyout>
								<Flyout>
									<StackPanel>
										<TextBlock
											Style="{StaticResource BaseTextBlockStyle}" Margin="0,0,0,12"
											TextWrapping="WrapWholeWords" MaxWidth="400"
											Text="{StaticResource SudokuPage_Info_WillClearSudokuGrid}" />
										<Button
											Content="{StaticResource SudokuPage_Sure}"
											CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
											<Button.Command>
												<XamlUICommand ExecuteRequested="CommandReturnEmptyGrid_ExecuteRequested" />
											</Button.Command>
										</Button>
									</StackPanel>
								</Flyout>
							</AppBarButton.Flyout>
						</AppBarButton>
						<AppBarSeparator />
						<AppBarButton Label="{StaticResource SudokuPage_Fix}" Icon="Pin">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandFix_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_Unfix}" Icon="UnPin">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandUnfix_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarSeparator />
						<AppBarButton
							x:Name="_cUndo" Label="{StaticResource SudokuPage_Undo}" Icon="Undo"
							IsEnabled="{Binding
								ElementName=_cPane,
								Path=UndoStepsCount,
								Converter={StaticResource _rUndoingOrRedoingConverter},
								Mode=OneWay,
								UpdateSourceTrigger=PropertyChanged}">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandUndo_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton
							x:Name="_cRedo" Icon="Redo" Label="{StaticResource SudokuPage_Redo}"
							IsEnabled="{Binding
								ElementName=_cPane,
								Path=RedoStepsCount,
								Converter={StaticResource _rUndoingOrRedoingConverter},
								Mode=OneWay,
								UpdateSourceTrigger=PropertyChanged}">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandRedo_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
					</xc:TabbedCommandBarItem>

					<!--Second tab-->
					<xc:TabbedCommandBarItem Header="{StaticResource SudokuPage_ToolList_Analysis}">
						<AppBarButton x:Name="_cButtonGenerate" Label="{StaticResource SudokuPage_Generate}" Icon="Go">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandGenerate_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_GetSolution}" Icon="Emoji2">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandGetSolution_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton
							x:Name="_cButtonAnalyze" Label="{StaticResource SudokuPage_Analysis}" Icon="ShowBcc">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandAnalysis_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
					</xc:TabbedCommandBarItem>

					<!--Third tab-->
					<xc:TabbedCommandBarItem Header="{StaticResource SudokuPage_ToolList_Displaying}">
						<AppBarButton Label="{StaticResource SudokuPage_ShowCandidates}" Icon="ShowBcc">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandShowCandidates_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_HideCandidates}" Icon="HideBcc">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CommandHideCandidates_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_Mask}" Icon="HideBcc">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="ComamndMask_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_Unmask}" Icon="ShowBcc">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="ComamndUnmask_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
					</xc:TabbedCommandBarItem>

					<!-- Fourth tab-->
					<xc:TabbedCommandBarItem Header="{StaticResource SudokuPage_ToolList_AttributesChecking}">
						<AppBarButton Label="{StaticResource SudokuPage_CheckMinimal}" Icon="Play">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CheckMinimal_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton Label="{StaticResource SudokuPage_CheckIttouryu}" Icon="Play">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="CheckIttouryu_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarSeparator />
						<AppBarButton Label="{StaticResource SudokuPage_FindMissingDigit}" Icon="Play">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="FindMissingDigit_ExecuteRequested" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton
							x:Name="_cCommandFindTrueCandidates" Icon="Play"
							Label="{StaticResource SudokuPage_FindTrueCandidates}">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="FindTrueCandidates_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
						<AppBarButton
							x:Name="_cCommandFindBackdoors" Icon="Play"
							Label="{StaticResource SudokuPage_FindBackdoors}">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="FindBackdoors_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
					</xc:TabbedCommandBarItem>

					<!-- Fifth tab-->
					<xc:TabbedCommandBarItem Header="{StaticResource SudokuPage_ToolList_Printing}">
						<AppBarButton Label="{StaticResource SudokuPage_Print}" Icon="Print">
							<AppBarButton.Command>
								<XamlUICommand ExecuteRequested="ComamndPrint_ExecuteRequestedAsync" />
							</AppBarButton.Command>
						</AppBarButton>
					</xc:TabbedCommandBarItem>
				</xc:TabbedCommandBar.MenuItems>
			</xc:TabbedCommandBar>

			<!--Sudoku grid-->
			<StackPanel x:Name="_cPaneParent" Orientation="Vertical" Grid.Row="1" Margin="25,25,0,0">
				<c:SudokuPane
					x:Name="_cPane" x:FieldModifier="internal" Size="560" OutsideOffset="10"
					GridRefreshed="Pane_GridRefreshed" FailedReceivedDroppedFile="Pane_FailedReceivedDroppedFile"
					SuccessfullyReceivedDroppedFile="Pane_SuccessfullyReceivedDroppedFile" />
				<PipsPager
					x:Name="_cPipsPager" Margin="0,3,0,0" MaxVisiblePips="10" HorizontalAlignment="Center"
					Visibility="Collapsed" PreviousButtonVisibility="Collapsed" NextButtonVisibility="Collapsed"
					SelectedIndexChanged="PipsPager_SelectedIndexChanged" />
			</StackPanel>

			<!--Analysis data-->
			<!--Title="{StaticResource SudokuPage_AnalysisData}"-->
			<TabView
				Background="GhostWhite" TabWidthMode="Equal" IsAddTabButtonVisible="False"
				Grid.Row="1" Grid.Column="1" Margin="25" Width="750" Height="600"
				HorizontalAlignment="Right" VerticalAlignment="Stretch">
				<TabView.Resources>
					<Style TargetType="TabViewItem">
						<Setter Property="IsClosable" Value="False" />
					</Style>
				</TabView.Resources>

				<TabView.TabItems>
					<!--Info-->
					<TabViewItem Header="{StaticResource SudokuPage_InfoBarBoard}">
						<TabViewItem.IconSource>
							<SymbolIconSource Symbol="Message" />
						</TabViewItem.IconSource>

						<c:InfoBarBoard x:Name="_cInfoBoard" x:FieldModifier="internal" CollectionChanged="InfoBoard_CollectionChanged" />
					</TabViewItem>

					<!--Summary page-->
					<TabViewItem Header="{StaticResource SudokuPage_Summary}">
						<TabViewItem.IconSource>
							<SymbolIconSource Symbol="Preview" />
						</TabViewItem.IconSource>

						<ScrollViewer>
							<xc:DataGrid
								x:Name="_cAnalysisDataGrid" HorizontalScrollBarVisibility="Visible"
								VerticalScrollBarVisibility="Visible" SelectionMode="Single" CanUserSortColumns="False"
								CanUserReorderColumns="False" CanUserResizeColumns="False" AreRowDetailsFrozen="True"
								AreRowGroupHeadersFrozen="True" HeadersVisibility="Column" AutoGenerateColumns="False"
								RowBackground="White" GridLinesVisibility="Horizontal" Margin="12"
								Visibility="{Binding
									ElementName=_cAnalysisDataGrid,
									Path=ItemsSource,
									Converter={StaticResource _rItemSourceNullabilityConverter},
									Mode=OneWay}">
								<xc:DataGrid.Columns>
									<xc:DataGridTemplateColumn Header="{StaticResource SudokuPage_AnalysisResultColumn_TechniqueName}">
										<xc:DataGridTemplateColumn.CellTemplate>
											<DataTemplate x:DataType="m:AnalysisResultRow">
												<TextBlock
													Text="{x:Bind TechniqueName}"
													HorizontalAlignment="Center" VerticalAlignment="Center" />
											</DataTemplate>
										</xc:DataGridTemplateColumn.CellTemplate>
									</xc:DataGridTemplateColumn>
									<xc:DataGridTemplateColumn Header="{StaticResource SudokuPage_AnalysisResultColumn_Count}">
										<xc:DataGridTemplateColumn.CellTemplate>
											<DataTemplate x:DataType="m:AnalysisResultRow">
												<TextBlock
													Text="{x:Bind CountOfSteps}"
													HorizontalAlignment="Center" VerticalAlignment="Center" />
											</DataTemplate>
										</xc:DataGridTemplateColumn.CellTemplate>
									</xc:DataGridTemplateColumn>
									<xc:DataGridTemplateColumn Header="{StaticResource SudokuPage_AnalysisResultColumn_DifficultyRating}">
										<xc:DataGridTemplateColumn.CellTemplate>
											<DataTemplate x:DataType="m:AnalysisResultRow">
												<Grid>
													<Rectangle
														Fill="{x:Bind data:SimpleConverters.DifficultyLevelToBackground(DifficultyLevel)}"
														RadiusX="5" RadiusY="5" Margin="24,3,24,3" />
													<TextBlock
														HorizontalAlignment="Center" VerticalAlignment="Center"
														Text="{x:Bind data:SimpleConverters.DifficultyLevelToResourceText(DifficultyLevel)}"
														Foreground="{x:Bind data:SimpleConverters.DifficultyLevelToForeground(DifficultyLevel)}" />
												</Grid>
											</DataTemplate>
										</xc:DataGridTemplateColumn.CellTemplate>
									</xc:DataGridTemplateColumn>
									<xc:DataGridTemplateColumn Header="{StaticResource SudokuPage_AnalysisResultColumn_TotalDifficulty}">
										<xc:DataGridTemplateColumn.CellTemplate>
											<DataTemplate x:DataType="m:AnalysisResultRow">
												<TextBlock
													Text="{x:Bind TotalDifficulty}"
													HorizontalAlignment="Center" VerticalAlignment="Center" />
											</DataTemplate>
										</xc:DataGridTemplateColumn.CellTemplate>
									</xc:DataGridTemplateColumn>
									<xc:DataGridTemplateColumn Header="{StaticResource SudokuPage_AnalysisResultColumn_MaxDifficulty}">
										<xc:DataGridTemplateColumn.CellTemplate>
											<DataTemplate x:DataType="m:AnalysisResultRow">
												<TextBlock
													Text="{x:Bind MaximumDifficulty}"
													HorizontalAlignment="Center" VerticalAlignment="Center" />
											</DataTemplate>
										</xc:DataGridTemplateColumn.CellTemplate>
									</xc:DataGridTemplateColumn>
								</xc:DataGrid.Columns>
							</xc:DataGrid>
						</ScrollViewer>
					</TabViewItem>

					<!--Technique metadata-->
					<TabViewItem Header="{StaticResource SudokuPage_TechniquesMetadata}">
						<TabViewItem.IconSource>
							<SymbolIconSource Symbol="OutlineStar" />
						</TabViewItem.IconSource>

						<c:MetadataSequence x:Name="_cTechniqueMetadata" Margin="0,12,0,0" ItemsSource="{x:Bind _techniqueMetadata}" />
					</TabViewItem>

					<!--Step details-->
					<TabViewItem Header="{StaticResource SudokuPage_StepDetails}">
						<TabViewItem.IconSource>
							<SymbolIconSource Symbol="ShowResults" />
						</TabViewItem.IconSource>

						<ScrollViewer>
							<ListView
								x:Name="_cAnalysisDataPath" SelectionMode="Single" IsItemClickEnabled="True"
								Visibility="{Binding
									ElementName=_cAnalysisDataPath,
									Path=ItemsSource,
									Converter={StaticResource _rItemSourceNullabilityConverter},
									Mode=OneWay}"
								Height="480" Margin="0,0,0,15"
								ItemClick="ListView_ItemClick">
								<ListView.ItemTemplate>
									<DataTemplate x:DataType="m:LogicalStep">
										<ListViewItem
											Tag="{x:Bind}" Grid.Column="1"
											Background="{x:Bind data:SimpleConverters.DifficultyLevelToBackground(Step.DifficultyLevel)}">
											<ListViewItem.Content>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="12" />
														<ColumnDefinition />
													</Grid.ColumnDefinitions>

													<Ellipse
														Width="12" Height="12" Grid.Column="0" Stroke="White"
														HorizontalAlignment="Center" VerticalAlignment="Center"
														StrokeThickness="1" Visibility="{x:Bind ExtraFeatureBadgeVisibility}"
														Fill="{x:Bind GetBadgeBackgroundBrush()}"
														ToolTipService.ToolTip="{x:Bind GetToolTipText()}" />
													<TextBlock
														Text="{x:Bind ToDisplayString()}"
														Margin="6,0,0,0" Grid.Column="1"
														Foreground="{x:Bind data:SimpleConverters.DifficultyLevelToForeground(Step.DifficultyLevel)}" />
												</Grid>
											</ListViewItem.Content>
										</ListViewItem>
									</DataTemplate>
								</ListView.ItemTemplate>
							</ListView>
						</ScrollViewer>
					</TabViewItem>

					<!--Gathering-->
					<TabViewItem Header="{StaticResource SudokuPage_StepGathering}">
						<TabViewItem.IconSource>
							<SymbolIconSource Symbol="List" />
						</TabViewItem.IconSource>

						<ScrollViewer>
							<StackPanel Spacing="8">
								<StackPanel Margin="0,12,0,0" Orientation="Horizontal" Spacing="4">
									<Button
										x:Name="_cSearchAllSteps" Content="{StaticResource SudokuPage_SearchAllSteps}"
										Click="GatherStepsButton_ClickAsync" />
									<TextBlock
										x:Name="_cFilteringProcessIsOnTextBlock" Visibility="Collapsed"
										VerticalAlignment="Center"
										Text="{StaticResource SudokuPage_FilteringIsInProcess}" />
								</StackPanel>
								<StackPanel Orientation="Horizontal" Spacing="4">
									<TextBox
										x:Name="_cStepGatheringTextBox"
										Width="300" PlaceholderText="{StaticResource Emoji_Search}" />
									<Button
										Content="{StaticResource SudokuPage_FilterGatheredSteps}"
										Click="FilterGatheredStepsButton_Click" />
								</StackPanel>
								<c:TechniqueGroupView
									x:Name="_cTechniqueGroupView"
									StepChosen="TechniqueGroupView_StepChosen" />
							</StackPanel>
						</ScrollViewer>
					</TabViewItem>
				</TabView.TabItems>
			</TabView>
		</Grid>
	</ScrollViewer>
</Page>
