#pragma warning disable RS2008

namespace Sudoku.Diagnostics.CodeGen;

partial class HighLevelGenerator
{
	private static readonly DiagnosticDescriptor SCA0001 = new(
		id: nameof(SCA0001),
		title: "The argument array must contain at least one element",
		messageFormat: "The argument array must contain at least one element; you can't pass an empty array, or even a 'null' literal",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0002 = new(
		id: nameof(SCA0002),
		title: "The argument can't be null here",
		messageFormat: "The argument can't be null here",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Warning,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0003 = new(
		id: nameof(SCA0003),
		title: "The argument as the diagnostic ID should start with 'SCA' and end with four-digit number as the ID number",
		messageFormat: "The argument as the diagnostic ID should start with 'SCA' and end with four-digit number as the ID number",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0004 = new(
		id: nameof(SCA0004),
		title: "The attribute can only apply to a top-level type",
		messageFormat: "The attribute can only apply to a top-level type",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0005 = new(
		id: nameof(SCA0005),
		title: "The attribute can only apply to a non-abstract type",
		messageFormat: "The attribute can only apply to a non-abstract type",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0006 = new(
		id: nameof(SCA0006),
		title: "The syntax checker should be a non-generic type",
		messageFormat: "The syntax checker should be a non-generic type",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0007 = new(
		id: nameof(SCA0007),
		title: "The syntax checker should be a partial type",
		messageFormat: "The syntax checker should be a partial type because the source generator will automatically generate the constructor",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0008 = new(
		id: nameof(SCA0008),
		title: "The attribute should be a sealed type",
		messageFormat: "The attribute should be a sealed type",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Warning,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0009 = new(
		id: nameof(SCA0009),
		title: $"The attribute can only apply to a type that has implemented '{nameof(ISyntaxContextReceiver)}'",
		messageFormat: $"The attribute can only apply to a type that has implemented '{nameof(ISyntaxContextReceiver)}'",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0010 = new(
		id: nameof(SCA0010),
		title: "The field '_cancellationToken' will be generated by source generator",
		messageFormat: "The field '_cancellationToken' will be generated by source generator; you can't declare this field",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0011 = new(
		id: nameof(SCA0011),
		title: "The property 'Diagnostics' will be generated by source generator",
		messageFormat: "The property 'Diagnostics' will be generated by source generator; you can't declare this property",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Error,
		isEnabledByDefault: true,
		helpLinkUri: null
	);

	private static readonly DiagnosticDescriptor SCA0012 = new(
		id: nameof(SCA0012),
		title: "The name of the syntax checker type should end with 'SyntaxChecker'",
		messageFormat: "The name of the syntax checker type should end with 'SyntaxChecker'",
		category: "Sunnie.SourceGen",
		defaultSeverity: DiagnosticSeverity.Warning,
		isEnabledByDefault: true,
		helpLinkUri: null
	);
}
