<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.XmlDocs</name>
    </assembly>
    <members>
        <member name="T:Sudoku.XmlDocs.CustomAccessibility">
            <summary>
            Indicates the accessibility of the member.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomAccessibility.None">
            <summary>
            Indicates the accessibility is none.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomAccessibility.Public">
            <summary>
            Indicates the <see langword="public"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomAccessibility.Internal">
            <summary>
            Indicates the <see langword="internal"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomAccessibility.Protected">
            <summary>
            Indicates the <see langword="protected"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomAccessibility.ProtectedInternal">
            <summary>
            Indicates the <see langword="protected internal"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomAccessibility.Private">
            <summary>
            Indicates the <see langword="private"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomAccessibility.PrivateProtected">
            <summary>
            Indicates the <see langword="private protected"/> modifier.
            </summary>
        </member>
        <member name="T:Sudoku.XmlDocs.CustomModifier">
            <summary>
            Indicates the custom modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.None">
            <summary>
            Indicates the modifier is none.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Abstract">
            <summary>
            Indicates the <see langword="abstract"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Async">
            <summary>
            Indicates the <see langword="async"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Const">
            <summary>
            Indicates the <see langword="const"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Extern">
            <summary>
            Indicates the <see langword="extern"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.In">
            <summary>
            Indicates the <see langword="in"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.New">
            <summary>
            Indicates the <see langword="new"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Out">
            <summary>
            Indicates the <see langword="out"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Override">
            <summary>
            Indicates the <see langword="override"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.ReadOnly">
            <summary>
            Indicates the <see langword="readonly"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Sealed">
            <summary>
            Indicates the <see langword="sealed"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Static">
            <summary>
            Indicates the <see langword="static"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Unsafe">
            <summary>
            Indicates the <see langword="unsafe"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Virtual">
            <summary>
            Indicates the <see langword="virtual"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Volatile">
            <summary>
            Indicates the <see langword="volatile"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.Ref">
            <summary>
            Indicates the <see langword="ref"/> modifier.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.CustomModifier.All">
            <summary>
            Indicates all modififers.
            </summary>
        </member>
        <member name="T:Sudoku.XmlDocs.DocCommentBlocks">
            <summary>
            Indicates the documentation block names.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Summary">
            <summary>
            Indicates the "summary" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Remarks">
            <summary>
            Indicates the "remarks" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Returns">
            <summary>
            Indicates the "returns" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Example">
            <summary>
            Indicates the "example" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Exception">
            <summary>
            Indicates the "exception" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Value">
            <summary>
            Indicates the "value" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Param">
            <summary>
            Indicates the "param" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.ParamRef">
            <summary>
            Indicates the "paramref" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.TypeParam">
            <summary>
            Indicates the "typeparam" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.TypeParamRef">
            <summary>
            Indicates the "typeparamref" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.InheritDoc">
            <summary>
            Indicates the "inheritdoc" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Para">
            <summary>
            Indicates the "para" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.C">
            <summary>
            Indicates the inline code block ("c") node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.Code">
            <summary>
            Indicates the code block ("code") node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.See">
            <summary>
            Indicates the "see" node name.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentBlocks.SeeAlso">
            <summary>
            Indicates the "seealso" node name.
            </summary>
        </member>
        <member name="T:Sudoku.XmlDocs.DocCommentHeaders">
            <summary>
            Provides the documentation comment headers to display.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.Summary">
            <summary>
            Indicates the "summary" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.Remarks">
            <summary>
            Indicates the "remarks" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.Returns">
            <summary>
            Indicates the "returns" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.Example">
            <summary>
            Indicates the "example" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.Exception">
            <summary>
            Indicates the "exception" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.Value">
            <summary>
            Indicates the "value" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.Parameter">
            <summary>
            Indicates the "param" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.TypeParameter">
            <summary>
            Indicates the "typeparam" block.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.DocCommentHeaders.SeeAlso">
            <summary>
            Indicates the "seealso" block.
            </summary>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.DocumentEx">
            <summary>
            Provides extension methods on <see cref="T:System.Text.Markdown.Document"/>.
            </summary>
            <seealso cref="T:System.Text.Markdown.Document"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendTitle(System.Text.Markdown.Document,Sudoku.XmlDocs.MemberKind,System.String)">
            <summary>
            Append the title with the specified member kind.
            </summary>
            <param name="this">The document.</param>
            <param name="memberKind">The member kind.</param>
            <param name="title">The title.</param>
            <returns>The document itself.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendSummary(System.Text.Markdown.Document,System.String)">
            <summary>
            Append "summary" section text. If the inner text is <see langword="null"/>, this method
            will do nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="text">The inner text.</param>
            <returns>The document itself.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendReturns(System.Text.Markdown.Document,System.String,Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax)">
            <summary>
            Append "returns" section text. If the inner text is <see langword="null"/>,
            the specified node doesn't return any values (such as field, etc.), or
            the node returns <see langword="void"/>, this method will do nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="text">The inner text.</param>
            <param name="node">The node to check.</param>
            <returns>The document itself.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendRemarks(System.Text.Markdown.Document,System.String)">
            <summary>
            Append "remarks" section text. If the inner text is <see langword="null"/>,
            this method will do nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="text">The inner text.</param>
            <returns>The document itself.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendExample(System.Text.Markdown.Document,System.String)">
            <summary>
            Append "example" section text. If the inner text is <see langword="null"/>,
            this method will do nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="text">The inner text.</param>
            <returns>The document itself.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendException(System.Text.Markdown.Document,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Append "exception" section text. If the exceptions is <see langword="null"/>, it'll do nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="exceptions">The exceptions.</param>
            <returns>The document itself.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendValue(System.Text.Markdown.Document,System.String,Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax)">
            <summary>
            Append "value" section text. If the inner text is <see langword="null"/>, the member
            isn't neither a property nor a indexer, or the member doesn't contain
            neither <see langword="set"/>ter nor <see langword="init"/>er, this method will do
            nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="text">The inner text.</param>
            <param name="node">The property or indexer syntax node.</param>
            <returns>The document itself.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendParams(System.Text.Markdown.Document,System.ValueTuple{System.String,System.String,System.String}[],System.Nullable{Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax}}@)">
            <summary>
            Append "param" section text. If the parameter can't be found in the real parameter list,
            this method will do nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="parameters">The parameter list.</param>
            <param name="parameterNodesToCheck">The parameters to check.</param>
            <returns>The current document.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.DocumentEx.AppendTypeParams(System.Text.Markdown.Document,System.ValueTuple{System.String,System.String}[],System.Nullable{Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax}}@)">
            <summary>
            Append "typeparam" section text. If the type parameter can't be found
            in the real type parameter list, this method will do nothing.
            </summary>
            <param name="this">The document.</param>
            <param name="typeParameters">The type parameter list.</param>
            <param name="typeParameterListToCheck">The type parameters to check.</param>
            <returns>The current document.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx.GetSummary(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)">
            <summary>
            Get summary content.
            </summary>
            <param name="this">The node.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx.GetParamList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)">
            <summary>
            Get param content.
            </summary>
            <param name="this">The node.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx.GetTypeParamList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)">
            <summary>
            Get typeparam content.
            </summary>
            <param name="this">The node.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx.GetRemarks(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)">
            <summary>
            Get remarks content.
            </summary>
            <param name="this">The node.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx.GetExample(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)">
            <summary>
            Get example content.
            </summary>
            <param name="this">The node.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx.GetExceptions(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)">
            <summary>
            Get exceptions content.
            </summary>
            <param name="this">The node.</param>
            <returns>The content.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.FieldDeclarationSyntaxEx.GetSeeAlsoList(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)">
            <summary>
            Get see-also content.
            </summary>
            <param name="this">The node.</param>
            <returns>The content.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.LocationEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.Location"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.Location"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.LocationEx.IsInRange(Microsoft.CodeAnalysis.Location,System.Int32,System.Int32)">
            <summary>
            Indicates whether the current location is in the specified range.
            </summary>
            <param name="this">The location instance.</param>
            <param name="min">The minimal value.</param>
            <param name="max">The maximal value.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.ParameterSyntaxEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.ParameterSyntaxEx.Deconstruct(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax@,Microsoft.CodeAnalysis.SyntaxToken@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="this">The current parameter syntax node.</param>
            <param name="type">The type syntax node.</param>
            <param name="identifier">The identifier syntax token.</param>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.SeparatedSyntaxListEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.SeparatedSyntaxList`1"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.SeparatedSyntaxList`1"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SeparatedSyntaxListEx.All``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0}@,System.Predicate{``0})">
            <summary>
            Check whether all elements in the current list satisfied the specified condition.
            </summary>
            <typeparam name="TSyntaxNode">The type of the inner element.</typeparam>
            <param name="this">The list.</param>
            <param name="condition">The condition to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SeparatedSyntaxListEx.Any``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0}@,System.Predicate{``0})">
            <summary>
            Check whether the current list contains any syntax node that satisfied the specified condition.
            </summary>
            <typeparam name="TSyntaxNode">The type of the inner element.</typeparam>
            <param name="this">The list.</param>
            <param name="condition">The condition to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.SyntaxListEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.SyntaxList`1"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.SyntaxList`1"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxListEx.All``1(Microsoft.CodeAnalysis.SyntaxList{``0}@,System.Predicate{``0})">
            <summary>
            Check whether all elements in the current list satisfied the specified condition.
            </summary>
            <typeparam name="TSyntaxNode">The type of the inner element.</typeparam>
            <param name="this">The list.</param>
            <param name="condition">The condition to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxListEx.Any``1(Microsoft.CodeAnalysis.SyntaxList{``0}@,System.Predicate{``0})">
            <summary>
            Check whether the current list contains any syntax node that satisfied the specified condition.
            </summary>
            <typeparam name="TSyntaxNode">The type of the inner element.</typeparam>
            <param name="this">The list.</param>
            <param name="condition">The condition to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.SyntaxNodeEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.SyntaxNode"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.SyntaxNode"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxNodeEx.VisitDocDescendants(Microsoft.CodeAnalysis.SyntaxNode,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.SyntaxVisitor,Sudoku.XmlDocs.AttributedSyntaxVisitor,Sudoku.XmlDocs.AttributedSyntaxVisitorWithoutDescendants)">
            <summary>
            Visits all documentation comment XML nodes.
            </summary>
            <param name="this">The root node of the documentation comments.</param>
            <param name="summaryNodeVisitor">
            A delegated method that invokes while the "summary" node is visiting.
            </param>
            <param name="remarksNodeVisitor">
            A delegated method that invokes while the "remarks" node is visiting.
            </param>
            <param name="returnsNodeVisitor">
            A delegated method that invokes while the "returns" node is visiting.
            </param>
            <param name="valueNodeVisitor">
            A delegated method that invokes while the "value" node is visiting.
            </param>
            <param name="exampleNodeVisitor">
            A delegated method that invokes while the "example" node is visiting.
            </param>
            <param name="paramNodeVisitor">
            A delegated method that invokes while the "param" node is visiting.
            </param>
            <param name="typeParamNodeVisitor">
            A delegated method that invokes while the "typeparam" node is visiting.
            </param>
            <param name="seeAlsoNodeVisitor">
            A delegated method that invokes while the "seealso" node is visiting.
            </param>
            <param name="exceptionNodeVisitor">
            A delegated method that invokes while the "exception" node is visiting.
            </param>
            <param name="inheritDocNodeVisitor">
            A delegated method that invokes while the "inheritdoc" node is visiting.
            </param>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.SyntaxTokenEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.SyntaxToken"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.SyntaxToken"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxTokenEx.IsKeyword(Microsoft.CodeAnalysis.SyntaxToken@,System.String)">
            <summary>
            Check whether the specified token is the keyword.
            </summary>
            <param name="this">The token.</param>
            <param name="keyword">The keyword.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxTokenEx.IsKeyword(Microsoft.CodeAnalysis.SyntaxToken@,System.String[])">
            <summary>
            Check whether the specified token is the specified keyword in the list <paramref name="keywords"/>.
            </summary>
            <param name="this">The token.</param>
            <param name="keywords">The keywords to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating that.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.SyntaxTokenListEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.SyntaxTokenList"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.SyntaxTokenList"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxTokenListEx.GetCustomModifiers(Microsoft.CodeAnalysis.SyntaxTokenList@)">
            <summary>
            Get custom modifiers from the specified syntax token list.
            </summary>
            <param name="this">The list.</param>
            <returns>The result modifiers.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxTokenListEx.GetCustomAccessibilities(Microsoft.CodeAnalysis.SyntaxTokenList@)">
            <summary>
            Get custom accessibilities from the specified syntax token list.
            </summary>
            <param name="this">The list.</param>
            <returns>The result accessibilities.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxTokenListEx.Contains(Microsoft.CodeAnalysis.SyntaxTokenList@,Sudoku.XmlDocs.CustomModifier)">
            <summary>
            Check whether the specified list contains the specified modifier.
            </summary>
            <param name="this">The list.</param>
            <param name="customModifier">The custom modifier.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxTokenListEx.Contains(Microsoft.CodeAnalysis.SyntaxTokenList@,Sudoku.XmlDocs.CustomAccessibility)">
            <summary>
            Check whether the specified list contains the specified accessibility.
            </summary>
            <param name="this">The list.</param>
            <param name="customAccessibility">The custom accessibility.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.SyntaxTriviaEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.SyntaxTrivia"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.SyntaxTrivia"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.SyntaxTriviaEx.Deconstruct(Microsoft.CodeAnalysis.SyntaxTrivia@,Microsoft.CodeAnalysis.CSharp.SyntaxKind@,Microsoft.CodeAnalysis.SyntaxNode@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="this">The syntax trivia.</param>
            <param name="kind">The syntax kind.</param>
            <param name="structure">The strutured syntax node (used for doc comments).</param>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.TextSpanEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.Text.TextSpan"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.Text.TextSpan"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.TextSpanEx.Deconstruct(Microsoft.CodeAnalysis.Text.TextSpan@,System.Int32@,System.Int32@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="this">The current instance.</param>
            <param name="start">The range start value.</param>
            <param name="end">The range end value.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.TextSpanEx.Deconstruct(Microsoft.CodeAnalysis.Text.TextSpan@,System.Int32@,System.Int32@,System.Int32@)">
            <inheritdoc cref="T:Sudoku.DocComments.DeconstructMethod"/>
            <param name="this">The current instance.</param>
            <param name="start">The range start value.</param>
            <param name="end">The range end value.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.TypeDeclarationSyntaxEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.TypeDeclarationSyntaxEx.GetMembers(Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,System.Boolean)">
            <summary>
            Like the method <see cref="M:System.Type.GetMembers"/>,
            this method will get all members of this declared type, but from the syntax node view.
            </summary>
            <param name="this">The type declaration node.</param>
            <param name="checkNestedTypes">Indicates whether the method will check nested type.</param>
            <returns>All possible member declaration syntax nodes.</returns>
            <seealso cref="M:System.Type.GetMembers"/>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.XmlElementEndTagSyntaxEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.XmlElementEndTagSyntaxEx.IsMarkup(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax,System.String)">
            <summary>
            Check whether the current tag is the specified markup.
            </summary>
            <param name="this">The node to check.</param>
            <param name="textToCheck">The markup text to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Extensions.XmlElementStartTagSyntaxEx">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"/>
        </member>
        <member name="M:Sudoku.XmlDocs.Extensions.XmlElementStartTagSyntaxEx.IsMarkup(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax,System.String)">
            <summary>
            Check whether the current tag is the specified markup.
            </summary>
            <param name="this">The node to check.</param>
            <param name="textToCheck">The markup text to check.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.Keywords">
            <summary>
            Provides keywords used.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.Keywords.VoidKeyword">
            <summary>
            Indicates the <see langword="void"/> keyword.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.Keywords.GetKeyword">
            <summary>
            Indicates the <see langword="get"/> keyword.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.Keywords.SetKeyword">
            <summary>
            Indicates the <see langword="set"/> keyword.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.Keywords.InitKeyword">
            <summary>
            Indicates the <see langword="init"/> keyword.
            </summary>
        </member>
        <member name="T:Sudoku.XmlDocs.MemberKind">
            <summary>
            Provides a member kind.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Field">
            <summary>
            Indicates the member is a field.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Constructor">
            <summary>
            Indicates the member is a constructor.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.PrimaryConstructor">
            <summary>
            Indicates the member is a primary constructor. This member now only appears
            in the <see langword="record"/>s.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Property">
            <summary>
            Indicates the member is a property.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Indexer">
            <summary>
            Indicates the member is an indexer.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Event">
            <summary>
            Indicates the member is an event.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Method">
            <summary>
            Indicates the member is a method.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Operator">
            <summary>
            Indicates the member is an operator overloading.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.MemberKind.Cast">
            <summary>
            Indicates the member is an implicit or explicit cast.
            </summary>
        </member>
        <member name="T:Sudoku.XmlDocs.OutputService">
            <summary>
            Indicates the output service.
            </summary>
        </member>
        <member name="M:Sudoku.XmlDocs.OutputService.#ctor">
            <summary>
            Initializes an <see cref="T:Sudoku.XmlDocs.OutputService"/> with the default instantiation behavior.
            </summary>
        </member>
        <member name="P:Sudoku.XmlDocs.OutputService.RootPath">
            <summary>
            Indicates the root path that stores all projects.
            </summary>
        </member>
        <member name="P:Sudoku.XmlDocs.OutputService.XmlDocDirectoryPath">
            <summary>
            Indicates the directory path that stores all documentation files about all possible assemblies.
            </summary>
        </member>
        <member name="M:Sudoku.XmlDocs.OutputService.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Execute the service, and outputs the documentation files.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task of the execution.</returns>
        </member>
        <member name="M:Sudoku.XmlDocs.OutputService.GetMemberSyntaxInfos(Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax)">
            <summary>
            Get information from all members, and returns the list of those instances.
            </summary>
            <param name="typeDeclaration">The type declaration syntax node.</param>
            <returns>The list of information instances.</returns>
        </member>
        <member name="T:Sudoku.XmlDocs.SyntaxInfo.ConstructorSyntaxInfo">
            <summary>
            Defines a constructor syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="IdentifierName">The identifier name of this member.</param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="CustomModifier">The custom modifier.</param>
            <param name="Summary">The documentation comment for the section "summary".</param>
            <param name="Remarks">The documentation comment for the section "remarks".</param>
            <param name="Example">The documentation comment for the section "example".</param>
            <param name="ParamList">The documentation comment for the section "param".</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.SyntaxInfo.ConstructorSyntaxInfo.#ctor(Microsoft.CodeAnalysis.SyntaxNode,System.String,Sudoku.XmlDocs.CustomAccessibility,Sudoku.XmlDocs.CustomModifier,System.String,System.String,System.String,System.ValueTuple{System.String,System.String,System.String}[],System.ValueTuple{System.String,System.String}[],System.String[])">
            <summary>
            Defines a constructor syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="IdentifierName">The identifier name of this member.</param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="CustomModifier">The custom modifier.</param>
            <param name="Summary">The documentation comment for the section "summary".</param>
            <param name="Remarks">The documentation comment for the section "remarks".</param>
            <param name="Example">The documentation comment for the section "example".</param>
            <param name="ParamList">The documentation comment for the section "param".</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.SyntaxInfo.ConstructorSyntaxInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.XmlDocs.SyntaxInfo.FieldSyntaxInfo">
            <summary>
            Defines a field syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="IdentifierName">The identifier name of this member.</param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="CustomModifier">The custom modifier.</param>
            <param name="Summary">The documentation comment for the section "summary".</param>
            <param name="Remarks">The documentation comment for the section "remarks".</param>
            <param name="Example">The documentation comment for the section "example".</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.SyntaxInfo.FieldSyntaxInfo.#ctor(Microsoft.CodeAnalysis.SyntaxNode,System.String,Sudoku.XmlDocs.CustomAccessibility,Sudoku.XmlDocs.CustomModifier,System.String,System.String,System.String,System.ValueTuple{System.String,System.String}[],System.String[])">
            <summary>
            Defines a field syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="IdentifierName">The identifier name of this member.</param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="CustomModifier">The custom modifier.</param>
            <param name="Summary">The documentation comment for the section "summary".</param>
            <param name="Remarks">The documentation comment for the section "remarks".</param>
            <param name="Example">The documentation comment for the section "example".</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.SyntaxInfo.FieldSyntaxInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.XmlDocs.SyntaxInfo.MemberSyntaxInfo">
            <summary>
            Defines a member syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="IdentifierName">
            The identifier name of this member. <see langword="null"/> if the member is the
            <see langword="record"/>'s primary constructor; otherwise, not <see langword="null"/>.
            </param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="CustomModifier">The custom modifier.</param>
            <param name="Summary">The documentation comment for the section "summary".</param>
            <param name="Remarks">The documentation comment for the section "remarks".</param>
            <param name="Example">The documentation comment for the section "example".</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.SyntaxInfo.MemberSyntaxInfo.#ctor(Microsoft.CodeAnalysis.SyntaxNode,System.String,Sudoku.XmlDocs.CustomAccessibility,Sudoku.XmlDocs.CustomModifier,System.String,System.String,System.String,System.ValueTuple{System.String,System.String}[],System.String[])">
            <summary>
            Defines a member syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="IdentifierName">
            The identifier name of this member. <see langword="null"/> if the member is the
            <see langword="record"/>'s primary constructor; otherwise, not <see langword="null"/>.
            </param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="CustomModifier">The custom modifier.</param>
            <param name="Summary">The documentation comment for the section "summary".</param>
            <param name="Remarks">The documentation comment for the section "remarks".</param>
            <param name="Example">The documentation comment for the section "example".</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="T:Sudoku.XmlDocs.SyntaxInfo.PrimaryConstructorSyntaxInfo">
            <summary>
            Defines a primary constructor syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="ParamList">The <c>param</c> list.</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.SyntaxInfo.PrimaryConstructorSyntaxInfo.#ctor(Microsoft.CodeAnalysis.SyntaxNode,Sudoku.XmlDocs.CustomAccessibility,System.ValueTuple{System.String,System.String,System.String}[],System.ValueTuple{System.String,System.String}[],System.String[])">
            <summary>
            Defines a primary constructor syntax information.
            </summary>
            <param name="SyntaxNode">The current syntax node.</param>
            <param name="CustomAccessibility">The accessibility.</param>
            <param name="ParamList">The <c>param</c> list.</param>
            <param name="ExceptionList">The <c>exception</c> list.</param>
            <param name="SeeAlsoList">The <c>seealso</c> list.</param>
        </member>
        <member name="M:Sudoku.XmlDocs.SyntaxInfo.PrimaryConstructorSyntaxInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.XmlDocs.SyntaxVisitor">
            <summary>
            Indicates the delegated methods that will be invoked while the specified node type is visiting.
            </summary>
            <param name="node">The doc comment node.</param>
            <param name="descendants">All descendants.</param>
        </member>
        <member name="T:Sudoku.XmlDocs.AttributedSyntaxVisitor">
            <summary>
            <para>
            Indicates the delegated methods that will be invoked while the specified node type is visiting.
            </para>
            <para>
            Different with <see cref="T:Sudoku.XmlDocs.SyntaxVisitor"/>, this type contains a new parameter
            named <paramref name="attributes"/>, which belongs to the markup.
            </para>
            </summary>
            <param name="node">The doc comment node.</param>
            <param name="attributes">The attributes of the node.</param>
            <param name="descendants">All descendants.</param>
            <seealso cref="T:Sudoku.XmlDocs.SyntaxVisitor"/>
        </member>
        <member name="T:Sudoku.XmlDocs.AttributedSyntaxVisitorWithoutDescendants">
            <summary>
            <para>
            Indicates the delegated methods that will be invoked while the specified node type is visiting.
            </para>
            <para>
            Different with <see cref="T:Sudoku.XmlDocs.AttributedSyntaxVisitor"/>, this type doesn't contain any descedants.
            </para>
            </summary>
            <param name="node">The doc comment node.</param>
            <param name="attributes">The attributes of the node.</param>
            <seealso cref="T:Sudoku.XmlDocs.AttributedSyntaxVisitor"/>
        </member>
        <member name="T:Sudoku.XmlDocs.TypeKind">
            <summary>
            Indicates a type kind.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.TypeKind.Struct">
            <summary>
            Indicates the type is a <see langword="struct"/>.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.TypeKind.Class">
            <summary>
            Indicates the type is a <see langword="class"/>.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.TypeKind.RecordClass">
            <summary>
            Indicates the type is a <see langword="record class"/>.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.TypeKind.RecordStruct">
            <summary>
            Indicates the type is a <see langword="record struct"/>.
            </summary>
        </member>
        <member name="F:Sudoku.XmlDocs.TypeKind.Interface">
            <summary>
            Indicates the type is a <see langword="interface"/>.
            </summary>
        </member>
    </members>
</doc>
