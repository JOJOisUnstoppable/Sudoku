<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Diagnostics.CodeAnalysis</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DiscardParameterAnalyzer">
            <summary>
            Defines an analyzer that analyzes the code for the usage of the type <see cref="T:Sudoku.Diagnostics.CodeAnalysis.DiscardAttribute"/>
            on parameters.
            </summary>
            <seealso cref="T:Sudoku.Diagnostics.CodeAnalysis.DiscardAttribute"/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DiscardParameterAnalyzer.Descriptor">
            <summary>
            Indicates the descriptor.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DiscardParameterAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DiscardParameterAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.DiscardAttribute">
            <summary>
            Defines an attribute that is used onto a parameter, to indicate the parameter
            is a discard, which means it can't be used anyway.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.DiscardWhenAttribute">
            <summary>
            To mark onto a parameter, to tell the compiler that the argument must be a discard
            and can't be used when the return value is specified value.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.DiscardWhenAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.DiscardWhenAttribute"/> instance.
            </summary>
            <param name="returnValue">The return value.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.DiscardWhenAttribute.ReturnValue">
            <summary>
            Indicates the return value that makes the parameter a discard.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.ISyntaxContextReceiverWithResult">
            <summary>
            Provides with the <see cref="T:Microsoft.CodeAnalysis.ISyntaxContextReceiver"/> with the diagnotic results.
            </summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.ISyntaxContextReceiverWithResult.Diagnostics">
            <summary>
            Indicates the diagnostic result found and gathered.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.PrimaryConstructorAttribute">
            <summary>
            <para>
            Indicates the current constructor is a primary constructor in a normal <see langword="struct"/>
            or <see langword="class"/>, which means the constructor is generated by the source generator,
            and marks onto the constructor to distinct the generated constructor or the normal constructors.
            </para>
            <para>
            Although the primary constructor is now only used for <see langword="record"/>s or
            <see langword="record struct"/>s, this concept is nearly totally same as the primary constructors
            in <see langword="record"/>s.
            </para>
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
                Reserved to be used by the compiler for tracking metadata.
                This class should not be used by developers in source code.
            </summary>
            <remarks>
                This definition is provided by the <i>IsExternalInit</i> NuGet package (https://www.nuget.org/packages/IsExternalInit).
                Please see https://github.com/manuelroemer/IsExternalInit for more information.
            </remarks>
        </member>
    </members>
</doc>
