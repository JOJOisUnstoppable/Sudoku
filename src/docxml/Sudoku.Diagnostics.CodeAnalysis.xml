<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Diagnostics.CodeAnalysis</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0305">SD0305</see></term>
            <description>The input value in this initializer is invalid</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0306">SD0306F</see></term>
            <description>The remove expression in the initializer following with the current constructor has no effect</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0307">SD0307</see></term>
            <description>The expression can be simplified</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0308">SD0308F</see></term>
            <description>The initializer contains the duplicate value</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.SD0305">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0305">SD0305</see>
            diagnostic result (The input value in this initializer is invalid).
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.SD0306">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0306">SD0306</see>
            diagnostic result (The remove expression in the initializer following with the current constructor has no effect).
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.SD0307">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0307">SD0307</see>
            diagnostic result (The expression can be simplified).
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CellsOrCandidatesInitializerAnalyzer.SD0308">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0308">SD0308</see>
            diagnostic result (The initializer contains the duplicate value).
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0302">SD0302</see></term>
            <description>Replace 'Count == 0' or 'Count != 0' with 'IsEmpty' or '!IsEmpty'</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.CountIsEqualToZeroAnalyzer.SD0302">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0302">SD0302</see>
            diagnostic result (Replace 'Count == 0' or 'Count != 0' with 'IsEmpty' or '!IsEmpty').
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0303">SD0303</see></term>
            <description>Please use the default-value field to avoid instantiation</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0304">SD0304</see></term>
            <description>Please use the specific property to simplify the invocation</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.SD0303">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0303">SD0303</see>
            diagnostic result (Please use the default-value field to avoid instantiation).
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.DefaultExpressionAnalyzer.SD0304">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0304">SD0304</see>
            diagnostic result (Please use the specific property to simplify the invocation).
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0310">SD0310</see></term>
            <description>Please add the format string as the argument into the method invocation of 'SudokuGrid', such as '.' for default case, or '#' for intelligent-handling case</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0311">SD0311</see></term>
            <description>Invalid format string in 'SudokuGrid.ToString'</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.CodeAnalyzer.PossibleFormats">
            <summary>
            All possible format strings to check.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.SD0310">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0310">SD0310</see>
            diagnostic result (Please add the format string as the argument into the method invocation of 'SudokuGrid', such as '.' for default case, or '#' for intelligent-handling case).
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.GridFormatStringAnalyzer.SD0311">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0311">SD0311</see>
            diagnostic result (Invalid format string in 'SudokuGrid.ToString').
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0406">SD0406</see></term>
            <description>The source generator will be well-working until the method marked '[ProxyEquality]' is 'static'</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0407">SD0407</see></term>
            <description>The source generator will be well-working until the method marked '[ProxyEquality]' should return 'bool'</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0408">SD0408</see></term>
            <description>The source generator will be well-working until the method marked '[ProxyEquality]' should contain a pair of parameters that is of the current type</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0409">SD0409</see></term>
            <description>The source generator will be well-working until the number of methods marked '[ProxyEquality]' should be only 1</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0410">SD0410</see></term>
            <description>The source generator will be well-working until the method marked '[ProxyEquality]' should contain 2 parameters</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.SD0406">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0406">SD0406</see>
            diagnostic result (The source generator will be well-working until the method marked '[ProxyEquality]' is 'static').
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.SD0407">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0407">SD0407</see>
            diagnostic result (The source generator will be well-working until the method marked '[ProxyEquality]' should return 'bool').
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.SD0408">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0408">SD0408</see>
            diagnostic result (The source generator will be well-working until the method marked '[ProxyEquality]' should contain a pair of parameters that is of the current type).
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.SD0409">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0409">SD0409</see>
            diagnostic result (The source generator will be well-working until the number of methods marked '[ProxyEquality]' should be only 1).
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.ProxyEqualityAttributeAnalyzer.SD0410">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0410">SD0410</see>
            diagnostic result (The source generator will be well-working until the method marked '[ProxyEquality]' should contain 2 parameters).
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0411">SD0411</see></term>
            <description>The field should be a string when marked '[Regex]'</description>
            </item>
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0412">SD0412</see></term>
            <description>The field value isn't an invalid regular expression when marked '[Regex]'</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.SD0411">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0411">SD0411</see>
            diagnostic result (The field should be a string when marked '[Regex]').
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.RegexAttributeAnalyzer.SD0412">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0412">SD0412</see>
            diagnostic result (The field value isn't an invalid regular expression when marked '[Regex]').
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0309">SD0309</see></term>
            <description>'stackalloc' or 'new' expression is unnecessary; Please use object initializer instead</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StackAllocAndNewClauseInCellsAndCandidatesAnalyzer.SD0309">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0309">SD0309</see>
            diagnostic result ('stackalloc' or 'new' expression is unnecessary; Please use object initializer instead).
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0403">SD0403</see></term>
            <description>'StepSearcherAttribute' attribute can be only used for step searchers</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeAnalyzer.SD0403">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0403">SD0403</see>
            diagnostic result ('StepSearcherAttribute' attribute can be only used for step searchers).
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer">
            <summary>
            Indicates an analyzer that analyzes the code for the following diagnostic results:
            <list type="table">
            <item>
            <term><see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0404">SD0404</see></term>
            <description>If a step searcher doesn't mark 'DirectSearcherAttribute' attribute, the searcher can't be initialized unless the variable declaration above contains a method invocation 'FastProperties.InitializeMaps'</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.CodeAnalyzer">
            <summary>
            Defines the syntax receiver.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.CodeAnalyzer.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a <see cref="T:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.CodeAnalyzer"/> instance via the specified cancellation token.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.CodeAnalyzer.CancellationToken">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.CodeAnalyzer.DiagnosticList">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.CodeAnalyzer.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Analyzers.StepSearcherAttributeUsageAnalyzer.SD0404">
            <summary>
            Indicates the <see href="https://sunnieshine.github.io/Sudoku/rules/Rule-SD0404">SD0404</see>
            diagnostic result (If a step searcher doesn't mark 'DirectSearcherAttribute' attribute, the searcher can't be initialized unless the variable declaration above contains a method invocation 'FastProperties.InitializeMaps').
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Constants">
            <summary>
            Provides the constant values used in this project.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames">
            <summary>
            Indicates the special property names.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.Undefined">
            <summary>
            Indicates the field <c>Undefined</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.Empty">
            <summary>
            Indicates the field <c>Empty</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.Count">
            <summary>
            Indicates the property <c>Count</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.IsUndefined">
            <summary>
            Indicates the property <c>IsUndefined</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.IsEmpty">
            <summary>
            Indicates the property <c>IsEmpty</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.IsDirect">
            <summary>
            Indicates the property <c>IsDirect</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.InitializeMaps">
            <summary>
            Indicates the method <c>InitializeMaps</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.ToString">
            <summary>
            Indicates the method <c>ToString</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.MemberNames.FastProperties">
            <summary>
            Indicates the type <c>FastProperty</c>.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Constants.TokenValues">
            <summary>
            Indicates the token values.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TokenValues.Zero">
            <summary>
            Indicates the constant value <c>0</c> of the string representation.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TokenValues.EqualityOperator">
            <summary>
            Indicates the string representation of the <c>operator ==</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TokenValues.InequalityOperator">
            <summary>
            Indicates the string representation of the <c>operator !=</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TokenValues.NegateOperator">
            <summary>
            Indicates the string representation of the <c>operator !</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TokenValues.NewKeyword">
            <summary>
            Indicates the token value of the keyword <see langword="new"/>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TokenValues.StackAllocKeyword">
            <summary>
            Indicates the token value of the keyword <see langword="stackalloc"/>.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames">
            <summary>
            Indicates the full names of some special types.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.Cells">
            <summary>
            Indicates the type <c>Cells</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.Candidates">
            <summary>
            Indicates the type <c>Candidates</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.Grid">
            <summary>
            Indicates the type <c>Grid</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.SudokuGrid">
            <summary>
            Indicates the type <c>SudokuGrid</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.StepSearcherAttribute">
            <summary>
            Indicates the type <c>StepSearcherAttribute</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.IStepSearcher">
            <summary>
            Indicates the type <c>IStepSearcher</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.FastProperties">
            <summary>
            Indicates the type <c>FastProperties</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.ProxyEqualityAttribute">
            <summary>
            Indicates the type <c>ProxyEqualityAttribute</c>.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeAnalysis.Constants.TypeNames.RegexAttribute">
            <summary>
            Indicates the type <c>RegexAttribute</c>.
            </summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeAnalysis.IAnalyzer">
            <summary>
            Provides a constraint set that defines an analyzer.
            </summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.IAnalyzer.CancellationToken">
            <summary>
            The cancellation token to cancel the current operation.
            </summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeAnalysis.IAnalyzer.DiagnosticList">
            <summary>
            Indicates the possible diagnostic list to report.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.AttributeDataExtensions">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.AttributeData"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.AttributeData"/>
        </member>
        <member name="M:Microsoft.CodeAnalysis.AttributeDataExtensions.TryGetNamedArgument(Microsoft.CodeAnalysis.AttributeData,System.String,Microsoft.CodeAnalysis.TypedConstant@)">
            <summary>
            Try to get the named argument using the specified name.
            </summary>
            <param name="this">The attribute data instance.</param>
            <param name="namedArg">The named argument name.</param>
            <param name="result">The result got.</param>
            <returns>A <see cref="T:System.Boolean"/> result indicating whether the operation is successful.</returns>
        </member>
        <member name="T:Microsoft.CodeAnalysis.INamedTypeSymbolExtensions">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.CodeAnalysis.INamedTypeSymbol"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.INamedTypeSymbol"/>
        </member>
        <member name="M:Microsoft.CodeAnalysis.INamedTypeSymbolExtensions.DerivedFrom(Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.INamedTypeSymbol)">
            <summary>
            Determines whether the current type is derived from the specified type.
            </summary>
            <param name="this">The type symbol.</param>
            <param name="typeSymbol">The type symbol.</param>
            <returns>A <see cref="T:System.Boolean"/> result.</returns>
        </member>
        <member name="T:Microsoft.CodeAnalysis.GeneratorSyntaxContext_DeconstructionMethods">
            <summary>
            Provides the extension methods on this type.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.GeneratorSyntaxContext_DeconstructionMethods.Deconstruct(Microsoft.CodeAnalysis.GeneratorSyntaxContext@,Microsoft.CodeAnalysis.SyntaxNode@,Microsoft.CodeAnalysis.SemanticModel@)">
            <summary>
            Deconstruct the instance to multiple elements.
            </summary>
        </member>
        <member name="T:Microsoft.CodeAnalysis.GeneratorSyntaxContext_LambdaedDeconstructionMethods">
            <summary>
            Provides the extension methods on this type.
            </summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.GeneratorSyntaxContext_LambdaedDeconstructionMethods.Deconstruct(Microsoft.CodeAnalysis.GeneratorSyntaxContext@,Microsoft.CodeAnalysis.SyntaxNode@,Microsoft.CodeAnalysis.SemanticModel@,Microsoft.CodeAnalysis.IOperation@)">
            <summary>
            Deconstruct the instance to multiple elements.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
                Reserved to be used by the compiler for tracking metadata.
                This class should not be used by developers in source code.
            </summary>
            <remarks>
                This definition is provided by the <i>IsExternalInit</i> NuGet package (https://www.nuget.org/packages/IsExternalInit).
                Please see https://github.com/manuelroemer/IsExternalInit for more information.
            </remarks>
        </member>
    </members>
</doc>
