<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.UI</name>
    </assembly>
    <members>
        <member name="T:Sudoku.UI.App">
            <summary>
            Provides application-specific behavior to supplement the default <see cref="T:Microsoft.UI.Xaml.Application"/> class.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Application"/>
        </member>
        <member name="M:Sudoku.UI.App.#ctor">
            <summary>
            <para>Initializes the singleton application object.</para>
            <para>
            This is the first line of authored code executed,
            and as such is the logical equivalent of <c>main()</c> or <c>WinMain()</c>.
            </para>
            </summary>
        </member>
        <member name="P:Sudoku.UI.App.MainWindow">
            <summary>
            Indicates the main window in this application in the current interaction logic.
            </summary>
        </member>
        <member name="P:Sudoku.UI.App.UserPreference">
            <summary>
            Indicates the user preference instance.
            </summary>
        </member>
        <member name="M:Sudoku.UI.App.OnLaunched(Microsoft.UI.Xaml.LaunchActivatedEventArgs)">
            <summary>
            <para>Invoked when the application is launched normally by the end user.</para>
            <para>
            Other entry points will be used such as when the application is launched to open a specific file.
            </para>
            </summary>
            <param name="args">Details about the launch request and process.</param>
        </member>
        <member name="M:Sudoku.UI.App.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.App.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:Sudoku.UI.App.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:Sudoku.UI.App.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
        <member name="T:Sudoku.UI.CommonFileExtensions">
            <summary>
            Defines the constants that are the common file extensions.
            </summary>
        </member>
        <member name="F:Sudoku.UI.CommonFileExtensions.All">
            <summary>
            Indicates all file extensions are accepted.
            </summary>
        </member>
        <member name="F:Sudoku.UI.CommonFileExtensions.Text">
            <summary>
            Indicates the plain-text format.
            </summary>
        </member>
        <member name="F:Sudoku.UI.CommonFileExtensions.Sudoku">
            <summary>
            Indicates the sudoku file.
            </summary>
        </member>
        <member name="F:Sudoku.UI.CommonFileExtensions.SudokuWithDrawing">
            <summary>
            Indicates the drawing file.
            </summary>
        </member>
        <member name="F:Sudoku.UI.CommonFileExtensions.Configuration">
            <summary>
            Indicates the configuration file.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Data.DataTemplateModelTypeAttribute`1">
            <summary>
            Defines an attribute that applies to a data template property.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
        </member>
        <member name="T:Sudoku.UI.Data.DataTemplateSelectors.InfoBarDataTemplateSelector">
            <summary>
            Defines a data template selector that selects the <see cref="T:Microsoft.UI.Xaml.DataTemplate"/> between
            <see cref="T:Sudoku.UI.Models.InfoBarMessage"/> and <see cref="T:Sudoku.UI.Models.HyperlinkMessage"/> as the model types.
            </summary>
            <seealso cref="T:Sudoku.UI.Models.InfoBarMessage"/>
            <seealso cref="T:Sudoku.UI.Models.HyperlinkMessage"/>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.InfoBarDataTemplateSelector.PlainMessageTemplate">
            <summary>
            Indicates the data template that is used by the type <see cref="T:Sudoku.UI.Models.PlainMessage"/>.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.InfoBarDataTemplateSelector.HyperlinkMessageTemplate">
            <summary>
            Indicates the data template that is used by the type <see cref="T:Sudoku.UI.Models.HyperlinkMessage"/>.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.InfoBarDataTemplateSelector.AnalysisResultTemplate">
            <summary>
            Indicates the data template that is used by the type <see cref="T:Sudoku.UI.Models.ManualSolverResultMessage"/>.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Data.DataTemplateSelectors.InfoBarDataTemplateSelector.SelectTemplateCore(System.Object)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException">
            Throws when the type of the argument <paramref name="item"/> doesn't derive
            from <see cref="T:Sudoku.UI.Models.InfoBarMessage"/>.
            </exception>
        </member>
        <member name="T:Sudoku.UI.Data.DataTemplateSelectors.SearchedResultItemTemplateSelector">
            <summary>
            Defines a selector that can select the data template on searched result items.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.SearchedResultItemTemplateSelector.PairInfoTemplate">
            <summary>
            Indicates the template that is used by the valid seared result.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.SearchedResultItemTemplateSelector.DefaultTemplate">
            <summary>
            Indicates the default template.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Data.DataTemplateSelectors.SearchedResultItemTemplateSelector.SelectTemplateCore(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.UI.Data.DataTemplateSelectors.SettingItemDataTemplateSelector">
            <summary>
            Defines a data template selector that determines which data template can be used on a setting item.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.SettingItemDataTemplateSelector.ToggleSwitchTemplate">
            <summary>
            Indicates the template that is used for a toggle switch.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.SettingItemDataTemplateSelector.SliderTemplate">
            <summary>
            Indicates the template that is used for a slider.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.SettingItemDataTemplateSelector.ColorPickerTemplate">
            <summary>
            Indicates the template that is used for a color picker.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.SettingItemDataTemplateSelector.FontPickerTemplate">
            <summary>
            Indicates the template that is used for a font picker.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Data.DataTemplateSelectors.SettingItemDataTemplateSelector.DefaultTemplate">
            <summary>
            Indicates the default template.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Data.DataTemplateSelectors.SettingItemDataTemplateSelector.SelectTemplateCore(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.UI.Data.SimpleConverters">
            <summary>
            Provides with a set of methods as simple converters that can be used and called by XAML files.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Data.ValueConverters.DifficultyLevelToBackgroundConverter">
            <summary>
            Defines a value converter that allows the one-way binding from the
            <see cref="P:Sudoku.UI.Models.AnalysisResultRow.DifficultyLevel"/> to <see cref="P:Microsoft.UI.Xaml.Controls.Control.Background"/> property value.
            </summary>
            <seealso cref="P:Sudoku.UI.Models.AnalysisResultRow.DifficultyLevel"/>
            <seealso cref="P:Microsoft.UI.Xaml.Controls.Control.Background"/>
        </member>
        <member name="F:Sudoku.UI.Data.ValueConverters.DifficultyLevelToBackgroundConverter.Backgrounds">
            <summary>
            Defines the background brushes.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.DifficultyLevelToBackgroundConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException">
            Throws when the argument <paramref name="targetType"/> is not <see cref="T:Microsoft.UI.Xaml.Media.Brush"/>.
            </exception>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.DifficultyLevelToBackgroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException">Always throws due to not implemented.</exception>
        </member>
        <member name="T:Sudoku.UI.Data.ValueConverters.DifficultyLevelToForegroundConverter">
            <summary>
            Defines a value converter that allows the one-way binding from the
            <see cref="P:Sudoku.UI.Models.AnalysisResultRow.DifficultyLevel"/> to <see cref="P:Microsoft.UI.Xaml.Controls.Control.Foreground"/> property value.
            </summary>
            <seealso cref="P:Sudoku.UI.Models.AnalysisResultRow.DifficultyLevel"/>
            <seealso cref="P:Microsoft.UI.Xaml.Controls.Control.Foreground"/>
        </member>
        <member name="F:Sudoku.UI.Data.ValueConverters.DifficultyLevelToForegroundConverter.Foregrounds">
            <summary>
            Defines the foreground brushes.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.DifficultyLevelToForegroundConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException">
            Throws when the argument <paramref name="targetType"/> is not <see cref="T:Microsoft.UI.Xaml.Media.Brush"/>.
            </exception>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.DifficultyLevelToForegroundConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException">Always throws due to not implemented.</exception>
        </member>
        <member name="T:Sudoku.UI.Data.ValueConverters.DifficultyLevelToTextConverter">
            <summary>
            Defines a value converter that allows the one-way binding from the
            <see cref="P:Sudoku.UI.Models.AnalysisResultRow.DifficultyLevel"/> to <see cref="P:Microsoft.UI.Xaml.Controls.TextBlock.Text"/> property value.
            </summary>
            <seealso cref="P:Sudoku.UI.Models.AnalysisResultRow.DifficultyLevel"/>
            <seealso cref="P:Microsoft.UI.Xaml.Controls.TextBlock.Text"/>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.DifficultyLevelToTextConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException">
            Throws when the argument <paramref name="targetType"/> is not <see cref="T:System.String"/>.
            </exception>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.DifficultyLevelToTextConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException">Always throws due to not implemented.</exception>
        </member>
        <member name="T:Sudoku.UI.Data.ValueConverters.InfoBarBoardToIsEnabledConverter">
            <summary>
            Defines a value converter that allows the one-way binding from the <see cref="P:Sudoku.UI.Views.Controls.InfoBarBoard.Any"/>
            to a <see cref="T:System.Boolean"/> value indicating whether the control should be enabled.
            </summary>
            <seealso cref="P:Sudoku.UI.Views.Controls.InfoBarBoard.Any"/>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.InfoBarBoardToIsEnabledConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException">
            Throws when the argument <paramref name="targetType"/> is not <see cref="T:System.Boolean"/>.
            </exception>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.InfoBarBoardToIsEnabledConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException">Always throws due to not implemented.</exception>
        </member>
        <member name="T:Sudoku.UI.Data.ValueConverters.Int32ToStringConverter">
            <summary>
            Defines a converter that can convert an <see cref="T:System.Int32"/> value to a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.Int32ToStringConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.Int32ToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.UI.Data.ValueConverters.UndoOrRedoStackToIsEnabledConverter">
            <summary>
            Defines a value converter that allows the one-way binding from the undo-stack or redo-stack
            to a <see cref="T:System.Boolean"/> value indicating whether the control should be enabled.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.UndoOrRedoStackToIsEnabledConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException">
            Throws when the argument <paramref name="targetType"/> is not <see cref="T:System.Boolean"/>.
            </exception>
        </member>
        <member name="M:Sudoku.UI.Data.ValueConverters.UndoOrRedoStackToIsEnabledConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException">Always throws due to not implemented.</exception>
        </member>
        <member name="T:Sudoku.UI.BindingConversions">
            <summary>
            Provides a set of methods to convert the information.
            </summary>
        </member>
        <member name="M:Sudoku.UI.BindingConversions.License(System.String)">
            <summary>
            Indicates the license displaying value on <see cref="P:Sudoku.UI.Models.RepositoryInfo.OpenSourceLicense"/>.
            </summary>
            <param name="input">The license name.</param>
            <returns>The converted result string.</returns>
            <seealso cref="P:Sudoku.UI.Models.RepositoryInfo.OpenSourceLicense"/>
        </member>
        <member name="M:Sudoku.UI.BindingConversions.ForReference(System.Boolean)">
            <summary>
            Indicates the conversion on <see cref="P:Sudoku.UI.Models.RepositoryInfo.IsForReference"/>.
            </summary>
            <param name="input">The input value.</param>
            <returns>The converted result string value.</returns>
            <seealso cref="P:Sudoku.UI.Models.RepositoryInfo.IsForReference"/>
        </member>
        <member name="M:Sudoku.UI.BindingConversions.InfoBarTitle(Microsoft.UI.Xaml.Controls.InfoBarSeverity)">
            <summary>
            Gets the title of the info bar via its severity.
            </summary>
            <param name="severity">The severity.</param>
            <returns>The title of the info bar.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Throws when the severity is not defined.</exception>
        </member>
        <member name="T:Sudoku.UI.Website">
            <summary>
            Provides methods on website visiting.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Website.Visit(System.String)">
            <summary>
            Visit the specified website.
            </summary>
            <param name="uri">The URI website.</param>
            <returns>The process.</returns>
        </member>
        <member name="T:Sudoku.UI.Interoperability.IInitializeWithWindow">
            <summary>
            Exposes a method through which a client can provide an owner window
            to a Windows Runtime (WinRT) object used in a desktop application.
            </summary>
            <remarks>
            <para>
            <b>When to initialize:</b><br/>
            Implement this interface if your object needs to be provided with an owner window,
            generally to display UI. Most third-party applications will not need to implement this interface.
            </para>
            <para>
            <b>When to use:</b><br/>
            Use this interface if you will provide an owner window to a WinRT object in a desktop application.
            For more information about this scenario, see
            <see href="https://docs.microsoft.com/en-us/windows/apps/desktop/modernize/desktop-to-uwp-supported-api?tabs=csharp#classes-that-use-iinitializewithwindow">
            Classes that use <c>IInitializeWithWindow</c>
            </see>.
            </para>
            <para>
            This interface is implemented by the following objects. Note that this is necessarily an incomplete list;
            refer to an individual object's documentation to determine whether that object implements this interface.
            </para>
            </remarks>
        </member>
        <member name="M:Sudoku.UI.Interoperability.IInitializeWithWindow.Initialize(System.IntPtr)">
            <summary>
            Specifies an owner window to be used by a Windows Runtime (WinRT) object that is used in a desktop app.
            </summary>
            <param name="hwnd">The handle of the window to be used as the owner window.</param>
            <remarks>
            The method doesn't return anything, but the method returns an HResult value
            in the Win32 API. For more information, please visit
            <see href="https://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nf-shobjidl_core-iinitializewithwindow-initialize">
            this link
            </see>.
            </remarks>
        </member>
        <member name="T:Sudoku.UI.Models.AnalysisResultRow">
            <summary>
            Defines a row that used for displaying the information about a technique,
            whose inner data is from the <see cref="T:Sudoku.Solving.Manual.ManualSolverResult"/> instance.
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolverResult"/>
        </member>
        <member name="P:Sudoku.UI.Models.AnalysisResultRow.TotalDifficulty">
            <summary>
            Indicates the total difficulty of all steps.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.AnalysisResultRow.MaximumDifficulty">
            <summary>
            Indicates the maximum difficulty in the steps.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.AnalysisResultRow.CountOfSteps">
            <summary>
            Indicates the number of steps that uses logic of the current technique.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.AnalysisResultRow.TechniqueName">
            <summary>
            Indicates the technique name.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.AnalysisResultRow.DifficultyLevel">
            <summary>
            Indicates the difficulty level of the techinque belonging to.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.AnalysisResultRow.CreateListFrom(Sudoku.Solving.Manual.ManualSolverResult)">
            <summary>
            Creates the list of <see cref="T:Sudoku.UI.Models.AnalysisResultRow"/> as the result value,
            via the specified <paramref name="analysisResult"/> instance of <see cref="T:Sudoku.Solving.Manual.ManualSolverResult"/> type.
            </summary>
            <param name="analysisResult">
            The <see cref="T:Sudoku.Solving.Manual.ManualSolverResult"/> instance that is used for creating the result value.
            </param>
            <returns>The result list of <see cref="T:Sudoku.UI.Models.AnalysisResultRow"/>-typed elements.</returns>
        </member>
        <member name="T:Sudoku.UI.Models.ColorPickerSettingItem">
            <summary>
            Defines a color option that is binding with a color picker on displaying.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.ColorPickerSettingItem.#ctor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Models.ColorPickerSettingItem.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Models.ColorPickerSettingItem.GetPreference">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.GetPreference``1"/>
        </member>
        <member name="M:Sudoku.UI.Models.ColorPickerSettingItem.SetPreference(Windows.UI.Color)">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.SetPreference``1(``0)"/>
        </member>
        <member name="T:Sudoku.UI.Models.FontPickerSettingItem">
            <summary>
            Defines a color option that is binding with a font picker on displaying.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.FontPickerSettingItem.#ctor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Models.FontPickerSettingItem.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.UI.Models.FontPickerSettingItem.FontScalePropertyName">
            <summary>
            Indicates the font name property name.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.FontPickerSettingItem.GetFontScalePreference">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.GetPreference``1"/>
        </member>
        <member name="M:Sudoku.UI.Models.FontPickerSettingItem.GetFontNamePreference">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.GetPreference``1"/>
        </member>
        <member name="M:Sudoku.UI.Models.FontPickerSettingItem.SetFontScalePreference(System.Double)">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.SetPreference``1(``0)"/>
        </member>
        <member name="M:Sudoku.UI.Models.FontPickerSettingItem.SetFontNamePreference(System.Object)">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.SetPreference``1(``0)"/>
        </member>
        <member name="T:Sudoku.UI.Models.HyperlinkMessage">
            <inheritdoc/>
        </member>
        <member name="P:Sudoku.UI.Models.HyperlinkMessage.HyperlinkDescription">
            <summary>
            Indicates the description text of the hyperlink. The default value is <see cref="F:System.String.Empty"/>.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.HyperlinkMessage.Hyperlink">
            <summary>
            Indicates the hyperlink that the current <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/> relates to.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Models.InfoBarMessage">
            <summary>
            Defines a <see cref="T:Sudoku.UI.Models.InfoBarMessage"/> instance that represents for a message
            that is used for the displaying as the message in <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/> controls.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/>
        </member>
        <member name="P:Sudoku.UI.Models.InfoBarMessage.Message">
            <summary>
            Indicates the message to be displayed. The default value is <see cref="F:System.String.Empty"/>.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.InfoBarMessage.Severity">
            <summary>
            Indicates the severity of the information.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Models.ManualSolverResultMessage">
            <summary>
            Defines a <see cref="T:Sudoku.UI.Models.InfoBarMessage"/> instance that can provide with the details
            for a <see cref="T:Sudoku.Solving.Manual.ManualSolverResult"/> instance.
            </summary>
            <seealso cref="T:Sudoku.Solving.Manual.ManualSolverResult"/>
        </member>
        <member name="P:Sudoku.UI.Models.ManualSolverResultMessage.AnalysisResult">
            <summary>
            Indicates the analysis result.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Models.PlainMessage">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.UI.Models.RepositoryInfo">
            <summary>
            Defines a set of properties to describe an image.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.RepositoryInfo.IsForReference">
            <summary>
            Indicates whether the repository code is for reference.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.RepositoryInfo.OpenSourceLicense">
            <summary>
            Indicates the open-source license being used for this repository.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.RepositoryInfo.Initials">
            <summary>
            Indicates the initials displaying on the <see cref="T:Microsoft.UI.Xaml.Controls.PersonPicture"/> control.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.RepositoryInfo.Name">
            <summary>
            Indicates the name of the image.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.RepositoryInfo.IconPath">
            <summary>
            Indicates the path of the image to show. The field can be <see langword="null"/>.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.RepositoryInfo.Site">
            <summary>
            Indicates the website which name is corresponding to.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Models.SearchedResult">
            <summary>
            Defines a searched result.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.SearchedResult.Value">
            <summary>
            The value information.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.SearchedResult.Location">
            <summary>
            The location information.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Models.SettingGroupItem">
            <summary>
            Defines a setting group item.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.SettingGroupItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Models.SettingGroupItem"/> instance via the specified name and the specified description.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Sudoku.UI.Models.SettingGroupItem.#ctor(System.String,System.String,System.Collections.Generic.IList{Sudoku.UI.Models.SettingItem})">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Models.SettingGroupItem"/> instance via the specified name, the specified description
            and the sub-setting items.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="settingItem">The setting items.</param>
        </member>
        <member name="P:Sudoku.UI.Models.SettingGroupItem.Name">
            <summary>
            Indicates the name of the setting item. The default value is <see cref="F:System.String.Empty"/>.
            </summary>
            <seealso cref="F:System.String.Empty"/>
        </member>
        <member name="P:Sudoku.UI.Models.SettingGroupItem.Description">
            <summary>
            Indicates the description of the setting item. The default value is <see cref="F:System.String.Empty"/>.
            </summary>
            <seealso cref="F:System.String.Empty"/>
        </member>
        <member name="P:Sudoku.UI.Models.SettingGroupItem.SettingItem">
            <summary>
            Indicates the setting items in the group.
            </summary>
        </member>
        <member name="T:Sudoku.UI.Models.SettingItem">
            <summary>
            Defines an instance that defines a setting item.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.SettingItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Models.SettingItem"/> instance via the properties.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.SettingItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Models.SettingItem"/> instance via the properties.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.SettingItem.Name">
            <summary>
            Indicates the name of the setting. The default value is <see cref="F:System.String.Empty"/>.
            </summary>
            <seealso cref="F:System.String.Empty"/>
        </member>
        <member name="P:Sudoku.UI.Models.SettingItem.Description">
            <summary>
            Indicates the description of the setting. The default value is <see cref="F:System.String.Empty"/>.
            </summary>
            <seealso cref="F:System.String.Empty"/>
        </member>
        <member name="P:Sudoku.UI.Models.SettingItem.PreferenceValueName">
            <summary>
            Indicates the name corresponding to the current name. The default value is <see cref="F:System.String.Empty"/>.
            </summary>
            <seealso cref="F:System.String.Empty"/>
        </member>
        <member name="M:Sudoku.UI.Models.SettingItem.GetPreference``1">
            <summary>
            Try to get the preference value from the current instance.
            </summary>
            <returns>The value of the preference.</returns>
        </member>
        <member name="M:Sudoku.UI.Models.SettingItem.SetPreference``1(``0)">
            <summary>
            Try to set the preference value to the current instance.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Sudoku.UI.Models.SliderSettingItem">
            <summary>
            Defines a floating-point or integer option that is binding with a slider on displaying.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.SliderSettingItem.#ctor(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.#ctor(System.String,System.String)"/>
            <param name="name"><inheritdoc/></param>
            <param name="preferenceValueName"><inheritdoc/></param>
            <param name="stepFrequency">The step frequency.</param>
            <param name="tickFrequency">The tick frequency.</param>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
        </member>
        <member name="M:Sudoku.UI.Models.SliderSettingItem.#ctor(System.String,System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.#ctor(System.String,System.String,System.String)"/>
            <param name="name"><inheritdoc/></param>
            <param name="description"><inheritdoc/></param>
            <param name="preferenceValueName"><inheritdoc/></param>
            <param name="stepFrequency">The step frequency.</param>
            <param name="tickFrequency">The tick frequency.</param>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
        </member>
        <member name="P:Sudoku.UI.Models.SliderSettingItem.StepFrequency">
            <summary>
            Indicates the step frequency.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.SliderSettingItem.TickFrequency">
            <summary>
            Indicates the tick frequency.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.SliderSettingItem.MinValue">
            <summary>
            Indicates the minimum value of the slider.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Models.SliderSettingItem.MaxValue">
            <summary>
            Indicates the maximum value of the slider.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.SliderSettingItem.GetPreference">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.GetPreference``1"/>
        </member>
        <member name="M:Sudoku.UI.Models.SliderSettingItem.SetPreference(System.Double)">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.SetPreference``1(``0)"/>
        </member>
        <member name="T:Sudoku.UI.Models.ToggleSwitchSettingItem">
            <summary>
            Defines a boolean option that is binding with a toggle switch on displaying.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Models.ToggleSwitchSettingItem.#ctor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Models.ToggleSwitchSettingItem.#ctor(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Models.ToggleSwitchSettingItem.GetPreference">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.GetPreference``1"/>
        </member>
        <member name="M:Sudoku.UI.Models.ToggleSwitchSettingItem.SetPreference(System.Boolean)">
            <inheritdoc cref="M:Sudoku.UI.Models.SettingItem.SetPreference``1(``0)"/>
        </member>
        <member name="T:Sudoku.UI.StringResource">
            <summary>
            Defines a <see langword="static class"/> that provides the method
            to get the <see cref="T:System.String"/>-typed resources.
            </summary>
        </member>
        <member name="M:Sudoku.UI.StringResource.Get(System.String)">
            <summary>
            Try to get the resource value via the specified string key.
            </summary>
            <param name="key">The <see cref="T:System.String"/>-typed resource key.</param>
            <returns>The resource value.</returns>
        </member>
        <member name="T:Sudoku.UI.Views.Controls.FontPicker">
            <summary>
            Defines a font picker control.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.FontPicker.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Views.Controls.FontPicker"/> instance.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.FontPicker.Header">
            <inheritdoc cref="P:Microsoft.UI.Xaml.Controls.ComboBox.Header"/>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.FontPicker.PlaceholderText">
            <inheritdoc cref="P:Microsoft.UI.Xaml.Controls.ComboBox.PlaceholderText"/>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.FontPicker.FontNameChosen">
            <summary>
            Indicates the chosen font name.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.FontPicker.SettingItem">
            <summary>
            Indicates the base setting item.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.FontPicker.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.FontPicker.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.FontPicker.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Views.Controls.InfoBarBoard">
            <summary>
            Defines a user control that handles the messages displaying via <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/>s.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/>
        </member>
        <member name="F:Sudoku.UI.Views.Controls.InfoBarBoard._list">
            <summary>
            The list of <see cref="T:Sudoku.UI.Models.InfoBarMessage"/>s.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Controls.InfoBarBoard._spacing">
            <summary>
            Indicates the backing field of property <see cref="P:Sudoku.UI.Views.Controls.InfoBarBoard.InfoBarSpacing"/>.
            </summary>
            <seealso cref="P:Sudoku.UI.Views.Controls.InfoBarBoard.InfoBarSpacing"/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Views.Controls.InfoBarBoard"/> instance.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.InfoBarBoard.Any">
            <summary>
            Indicates whether the collection is not empty.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.InfoBarBoard.InfoBarSpacing">
            <summary>
            Indicates the spacing between two adjacent <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/> instances.
            </summary>
        </member>
        <member name="E:Sudoku.UI.Views.Controls.InfoBarBoard.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="E:Sudoku.UI.Views.Controls.InfoBarBoard.CollectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.AddMessage(Microsoft.UI.Xaml.Controls.InfoBarSeverity,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/> instance via the specified severity
            and the information.
            </summary>
            <param name="severity">The severity of the info bar.</param>
            <param name="info">The displaing text of the info bar.</param>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.AddMessage(Microsoft.UI.Xaml.Controls.InfoBarSeverity,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/> instance via the specified severity,
            the information and the hyperlink button.
            </summary>
            <param name="severity">The severity of the info bar.</param>
            <param name="info">The displaing text of the info bar.</param>
            <param name="link">The hyperlink to be appended into.</param>
            <param name="linkDescription">The description of the hyperlink.</param>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.AddMessage(Sudoku.Solving.Manual.ManualSolverResult,Microsoft.UI.Xaml.Controls.InfoBarSeverity)">
            <summary>
            Creates a new <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/> instance via the specified severity,
            with the specified <see cref="T:Sudoku.Solving.Manual.ManualSolverResult"/> instance.
            </summary>
            <param name="analysisResult">The <see cref="T:Sudoku.Solving.Manual.ManualSolverResult"/> instance.</param>
            <param name="severity">The severity. The default value is <see cref="F:Microsoft.UI.Xaml.Controls.InfoBarSeverity.Success"/>.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.ClearMessages">
            <summary>
            Clears all messages.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.UserControl_Loaded(System.Object,Microsoft.UI.Xaml.RoutedEventArgs)">
            <summary>
            Triggers when the current control is loaded.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.InfoBarBoard.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Views.Controls.SudokuPane">
            <summary>
            Defines a user control that interacts with a sudoku grid.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Controls.SudokuPane.Epsilon">
            <summary>
            Indicates the delta that is used for checking whether two <see cref="T:System.Double"/> values are same
            or their difference is below to the delta value.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Controls.SudokuPane._drawingElements">
            <summary>
            Indicates the inner collection that stores the drawing elements, and also influences the controls
            displaying in the window.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Controls.SudokuPane._size">
            <summary>
            Indicates the size that the current pane is, which is the backing field
            of the property <see cref="P:Sudoku.UI.Views.Controls.SudokuPane.Size"/>.
            </summary>
            <seealso cref="P:Sudoku.UI.Views.Controls.SudokuPane.Size"/>
        </member>
        <member name="F:Sudoku.UI.Views.Controls.SudokuPane._outsideOffset">
            <summary>
            Indicates the outside offset value, which is the backing field
            of the property <see cref="P:Sudoku.UI.Views.Controls.SudokuPane.OutsideOffset"/>.
            </summary>
            <seealso cref="P:Sudoku.UI.Views.Controls.SudokuPane.OutsideOffset"/>
        </member>
        <member name="F:Sudoku.UI.Views.Controls.SudokuPane._currentPointPosition">
            <summary>
            Indicates the current mouse point.
            </summary>
            <remarks>
            The variable is used for the following members:
            <list type="bullet">
            <item><see cref="M:Sudoku.UI.Views.Controls.SudokuPane.OnPointerMoved(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)"/></item>
            <item><see cref="M:Sudoku.UI.Views.Controls.SudokuPane.OnKeyDown(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)"/></item>
            </list>
            </remarks>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Views.Controls.SudokuPane"/> instance.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.SudokuPane.Size">
            <summary>
            Gets or sets the size of the pane.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.SudokuPane.OutsideOffset">
            <summary>
            Gets or sets the outside offset to the view model.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.SudokuPane.CurrentCell">
            <summary>
            Indicates the current cell focused. The default value is -1.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.SudokuPane.UndoStepsCount">
            <summary>
            Indicates the number of the total undo steps.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.SudokuPane.RedoStepsCount">
            <summary>
            Indicates the number of the total redo steps.
            </summary>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.SudokuPane.Grid">
            <summary>
            Gets or sets the current used grid. If you just want to get the value of the grid, please use
            the property <see cref="P:Sudoku.UI.Views.Controls.SudokuPane.GridRef"/> instead.
            </summary>
            <seealso cref="P:Sudoku.UI.Views.Controls.SudokuPane.GridRef"/>
        </member>
        <member name="P:Sudoku.UI.Views.Controls.SudokuPane.GridRef">
            <summary>
            Gets the reference of the grid. The property returns by reference in order to copy the reference instead
            of the instance itself to provide optimization on memory allocations.
            </summary>
        </member>
        <member name="E:Sudoku.UI.Views.Controls.SudokuPane.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.UndoStep">
            <summary>
            Undo a step.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.RedoStep">
            <summary>
            Redo a step.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.MakeDigit(System.Int32,System.Int32)">
            <summary>
            To make the cell fill the digit.
            </summary>
            <param name="cell">The cell.</param>
            <param name="digit">The digit.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.EliminateDigit(System.Int32,System.Int32)">
            <summary>
            To eliminate the digit from the grid.
            </summary>
            <param name="cell">The cell.</param>
            <param name="digit">The digit.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.FixGrid">
            <summary>
            To fix the grid, to change all modifiable values to given ones.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.UnfixGrid">
            <summary>
            To unfix the grid, to change all given values to modifiable ones.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.ResetGrid">
            <summary>
            To reset the grid, to revert the grid to the initial status.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.ReplaceGridUndoable(Sudoku.Concepts.Collections.Grid@)">
            <summary>
            To replace the grid with the new one, in order to make the current operation undoable.
            </summary>
            <param name="grid">The grid to be replaced with.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.OnPointerMoved(Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.OnKeyDown(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.OnRightTapped(Microsoft.UI.Xaml.Input.RightTappedRoutedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.GetSudokuGridViewModel">
            <summary>
            Gets the <see cref="T:Sudoku.UI.Drawing.Shapes.SudokuGrid"/> instance as the view model.
            </summary>
            <returns>The <see cref="T:Sudoku.UI.Drawing.Shapes.SudokuGrid"/> instance.</returns>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.SudokuPane_Loaded(System.Object,Microsoft.UI.Xaml.RoutedEventArgs)">
            <summary>
            Triggers when the pane is loaded.
            </summary>
            <param name="sender">The object to trigger the event. The instance is always itself.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.SudokuPane_PointerEntered(System.Object,Microsoft.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Triggers when the mouse is moved into the current control.
            </summary>
            <param name="sender">The object to trigger the event.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.MakeOrDeleteMenuItem_Click(System.Object,Microsoft.UI.Xaml.RoutedEventArgs)">
            <summary>
            Triggers when the target <see cref="T:Microsoft.UI.Xaml.Controls.MenuFlyoutItem"/> is clicked.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Controls.SudokuPane.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Views.Pages.AboutPage">
            <summary>
            A page that can be used on its own or navigated to within a <see cref="T:Microsoft.UI.Xaml.Controls.Frame"/>.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.Frame"/>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.AboutPage.#ctor">
            <summary>
            Initializes an <see cref="T:Sudoku.UI.Views.Pages.AboutPage"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.AboutPage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.AboutPage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.AboutPage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Views.Pages.MainPage">
            <summary>
            Indicates the main page of the window. The page is used for navigation to other pages.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Pages.MainPage.NavigationPairs">
            <summary>
            Indicates the navigation info tuples that controls to route pages.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Pages.MainPage._gatheredQueryKeywords">
            <summary>
            Indicates the gathered keywords.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Views.Pages.MainPage"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.OnNavigate(System.String,Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)">
            <summary>
            Try to navigate the pages.
            </summary>
            <param name="tag">The specified tag of the navigate page item.</param>
            <param name="transitionInfo">The transition information.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.ViewRouter_Loaded(System.Object,Microsoft.UI.Xaml.RoutedEventArgs)">
            <summary>
            Triggers when the view router control is loaded.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.ViewRouterFrame_NavigationFailed(System.Object,Microsoft.UI.Xaml.Navigation.NavigationFailedEventArgs)">
            <summary>
            Triggers when the navigation is failed. The method will be invoked if and only if the routing is invalid.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="e">The event arguments provided.</param>
            <exception cref="T:System.InvalidOperationException">
            Always throws. Because the method is handled with the failure of the navigation,
            the throwing is expected.
            </exception>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.ViewRouterFrame_Navigated(System.Object,Microsoft.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
            Triggers when the frame of the navigation view control has navigated to a certain page.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.ViewRouter_ItemInvoked(Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewItemInvokedEventArgs)">
            <summary>
            Triggers when a page-related navigation item is clicked and selected.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="args">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.ViewRouter_SelectionChanged(Microsoft.UI.Xaml.Controls.NavigationView,Microsoft.UI.Xaml.Controls.NavigationViewSelectionChangedEventArgs)">
            <summary>
            Triggers when the page-related navigation item, as the selection, is changed.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="args">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.AutoSuggestBox_TextChanged(Microsoft.UI.Xaml.Controls.AutoSuggestBox,Microsoft.UI.Xaml.Controls.AutoSuggestBoxTextChangedEventArgs)">
            <summary>
            Triggers when text of the main auto suggest box has been changed.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="args">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.AutoSuggestBox_SuggestionChosen(Microsoft.UI.Xaml.Controls.AutoSuggestBox,Microsoft.UI.Xaml.Controls.AutoSuggestBoxSuggestionChosenEventArgs)">
            <summary>
            Triggers when a suggestion is chosen.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="args">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.MainPage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Views.Pages.SettingsPage">
            <summary>
            A page that can be used on its own or navigated to within a <see cref="T:Microsoft.UI.Xaml.Controls.Frame"/>.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.Frame"/>
        </member>
        <member name="F:Sudoku.UI.Views.Pages.SettingsPage._settingGroupItems">
            <summary>
            Indicates the backing list of <see cref="T:Sudoku.UI.Models.SettingGroupItem"/>s.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SettingsPage.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Views.Pages.SettingsPage"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SettingsPage.InitializeSettingGroupItems">
            <summary>
            Initializes the field <see cref="F:Sudoku.UI.Views.Pages.SettingsPage._settingGroupItems"/>.
            </summary>
            <seealso cref="F:Sudoku.UI.Views.Pages.SettingsPage._settingGroupItems"/>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SettingsPage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SettingsPage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SettingsPage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Views.Pages.SudokuPage">
            <summary>
            An empty page that can be used on its own or navigated to within a Frame.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Pages.SudokuPage.Solver">
            <summary>
            Indicates the internal solver to solve a puzzle.
            </summary>
        </member>
        <member name="F:Sudoku.UI.Views.Pages.SudokuPage.Generator">
            <summary>
            Indicates the internal puzzle generator.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Views.Pages.SudokuPage"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.OnKeyDown(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.InitialAddSudokuTechniqueInfoBar">
            <summary>
            Adds the initial sudoku-technique based <see cref="T:Microsoft.UI.Xaml.Controls.InfoBar"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.ClearSudokuGrid">
            <summary>
            Clear the current sudoku grid, and revert the status to the empty grid.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CopySudokuCode">
            <summary>
            Copy the string text that represents the current sudoku grid used, to the clipboard.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CopySnapshotAsync">
            <summary>
            Copy the snapshot of the sudoku grid control, to the clipboard.
            </summary>
            <returns>
            The typical awaitable instance that holds the task to copy the snapshot.
            </returns>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.UpdateIsEnabledStatus">
            <summary>
            Update the status of the property <see cref="P:Microsoft.UI.Xaml.Controls.Control.IsEnabled"/>
            of the control <see cref="F:Sudoku.UI.Views.Pages.SudokuPage._cClearInfoBars"/>.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.ClearMessages">
            <summary>
            Clear the messages.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.Undo">
            <summary>
            Undo the step.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.Redo">
            <summary>
            Redo the step.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.FixGrid">
            <summary>
            Fix the grid.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.UnfixGrid">
            <summary>
            Unfix the grid.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.ResetGrid">
            <summary>
            Reset the grid.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.EnsureUnsnapped">
            <summary>
            To determine whether the current application view is in an unsnapped state.
            </summary>
            <returns>The <see cref="T:System.Boolean"/> value indicating that.</returns>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.OpenFileAsync">
            <summary>
            Asynchronously opening the file, and get the inner content to be parsed to a <see cref="T:Sudoku.Concepts.Collections.Grid"/> result
            to display.
            </summary>
            <returns>
            The typical awaitable instance that holds the task to open the file from the local position.
            </returns>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.SaveFileAsync">
            <summary>
            Asynchronously saving the file using the current sudoku grid as the base content.
            </summary>
            <returns>
            The typical awaitable instance that holds the task to save the file to the local position.
            </returns>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.PasteAsync">
            <summary>
            To paste the text via the clipboard asynchonously.
            </summary>
            <returns>The typical awaitable instance that holds the task to paste the sudoku grid text.</returns>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.GenerateAsync(Microsoft.UI.Xaml.Controls.AppBarButton)">
            <summary>
            Try to generate a sudoku puzzle, to display onto the sudoku pane.
            </summary>
            <param name="button">The button.</param>
            <returns>The typical awaitable instance that holds the task to generate the puzzle.</returns>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.GetSolution">
            <summary>
            Gets the solution of the grid.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.AnalyzeAsync(Microsoft.UI.Xaml.Controls.AppBarButton)">
            <summary>
            To analyze the current sudoku grid.
            </summary>
            <param name="button">The button.</param>
            <returns>The typical awaitable instance that holds the task to analyze the puzzle.</returns>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.Page_Loaded(System.Object,Microsoft.UI.Xaml.RoutedEventArgs)">
            <summary>
            Triggers when the current page is loaded.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.InfoBoard_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Triggers when the inner collection of the control <see cref="F:Sudoku.UI.Views.Pages.SudokuPage._cInfoBoard"/> is changed.
            </summary>
            <param name="sender">The object that triggers the event.</param>
            <param name="e">The event arguments provided.</param>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandOpenOrSaveSudokuFile_CanExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.CanExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that determines
            whether the current window status can execute the following operation.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandOpenSudokuFile_ExecuteRequestedAsync(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes opening sudoku file.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandCopySudokuGridText_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes
            copying the string text representing as the current sudoku grid.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandCopyControlSnapshot_ExecuteRequestedAsync(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes
            copying the snapshot of the sudoku grid control.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandPasteSudokuGridText_ExecuteRequestedAsync(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes
            parsing the string text representing as a sudoku grid from the clipboard.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandSaveSudokuFile_ExecuteRequestedAsync(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes saving sudoku file.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandReturnEmptyGrid_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes returning back to the empty grid.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandReset_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes resetting the grid to the initial status.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandFix_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes fixing digits.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandUnfix_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes unfixing digits.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandUndo_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes undoing a step.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandRedo_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes redoing a step.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandClearMessages_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes clearing all messages.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandGenerate_ExecuteRequestedAsync(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that executes generating a puzzle.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandGetSolution_ExecuteRequested(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that gets the solution of the puzzle.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.CommandAnalysis_ExecuteRequestedAsync(Microsoft.UI.Xaml.Input.XamlUICommand,Microsoft.UI.Xaml.Input.ExecuteRequestedEventArgs)">
            <summary>
            Indicates the event trigger callback method that analyzes the puzzle.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Pages.SudokuPage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Views.Windows.MainWindow">
            <summary>
            An empty window that can be used on its own or navigated to within a <see cref="T:Microsoft.UI.Xaml.Controls.Frame"/>.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.Frame"/>
        </member>
        <member name="M:Sudoku.UI.Views.Windows.MainWindow.#ctor">
            <summary>
            Initializes a <see cref="T:Sudoku.UI.Views.Windows.MainWindow"/> instance.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Windows.MainWindow.CustomizeTitleBar">
            <summary>
            Customize the title bar if available.
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Windows.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Windows.MainWindow.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:Sudoku.UI.Views.Windows.MainWindow.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:Sudoku.UI.Program">
            <summary>
            Program class
            </summary>
        </member>
        <member name="T:Sudoku.UI.Sudoku_UI_XamlTypeInfo.XamlMetaDataProvider">
            <summary>
            Main class for providing metadata for the app or library
            </summary>
        </member>
        <member name="M:Sudoku.UI.Sudoku_UI_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:Sudoku.UI.Sudoku_UI_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:Sudoku.UI.Sudoku_UI_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
        <member name="T:Windows.Storage.Pickers.FileOpenPickerExtensions">
            <summary>
            Provides extension methods on <see cref="T:Windows.Storage.Pickers.FileOpenPicker"/>.
            </summary>
            <seealso cref="T:Windows.Storage.Pickers.FileOpenPicker"/>
        </member>
        <member name="M:Windows.Storage.Pickers.FileOpenPickerExtensions.AwareHandleOnWin32(Windows.Storage.Pickers.FileOpenPicker)">
            <summary>
            To aware the handle of the window, and apply to the <see cref="T:Windows.Storage.Pickers.FileOpenPicker"/> instance.
            </summary>
            <param name="this">The instance.</param>
        </member>
        <member name="T:Windows.Storage.Pickers.FileSavePickerExtensions">
            <summary>
            Provides extension methods on <see cref="T:Windows.Storage.Pickers.FileSavePicker"/>.
            </summary>
            <seealso cref="T:Windows.Storage.Pickers.FileSavePicker"/>
        </member>
        <member name="M:Windows.Storage.Pickers.FileSavePickerExtensions.AwareHandleOnWin32(Windows.Storage.Pickers.FileSavePicker)">
            <summary>
            To aware the handle of the window, and apply to the <see cref="T:Windows.Storage.Pickers.FileSavePicker"/> instance.
            </summary>
            <param name="this">The instance.</param>
        </member>
        <member name="T:Windows.Foundation.Point_DE7BE3B162">
            <summary>
            Provides with extension deconstruction methods on this type.
            </summary>
        </member>
        <member name="M:Windows.Foundation.Point_DE7BE3B162.Deconstruct(Windows.Foundation.Point,System.Double@,System.Double@)">
            <summary>
            Deconstruct the current instance into multiple values, which means you can use
            the value-tuple syntax to define your own deconstruction logic.
            </summary>
            <remarks>
            <para>
            For example,
            if you have defined a <see langword="static"/> deconstruction method <c>Deconstruct</c>
            in a <see langword="static class"/>, without any return value:
            <code><![CDATA[
            public static void Deconstruct(out string name, out int age)
            {
                name = Name;
                age = Age;
            }
            ]]></code>
            The following code will be legal.
            <code><![CDATA[
            // Use explicitly typed variables to get a deconstruction.
            (string name, int age) = student;
            
            // Or use the type inferring to omit the type of each variable having been deconstructed.
            var (name, age) = student;
            
            // Of course, you can also use the instance-method-like invocation to get values.
            student.Deconstruct(out string name, out int age);
            ]]></code>
            </para>
            <para>
            Static deconstruction methods also allow you using deconstruction patterns, like this:
            <code><![CDATA[
            if (student is (name: var name, age: >= 18))
            {
                Console.WriteLine(name);
            }
            ]]></code>
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.UI.Xaml.WindowExtensions">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.UI.Xaml.Window"/>.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Window"/>
        </member>
        <member name="M:Microsoft.UI.Xaml.WindowExtensions.GetAppWindow``1(``0)">
            <summary>
            Gets the <see cref="T:Microsoft.UI.Windowing.AppWindow"/> instance via the specified <see cref="T:Microsoft.UI.Xaml.Window"/>.
            </summary>
            <typeparam name="TWindow">The type of the window.</typeparam>
            <param name="this">The <typeparamref name="TWindow"/>-typed instance.</param>
            <returns>The <see cref="T:Microsoft.UI.Windowing.AppWindow"/> instance.</returns>
        </member>
        <member name="T:Microsoft.UI.Xaml.Controls.GridWithExtensions">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.UI.Xaml.Controls.Grid"/>.
            </summary>
            <seealso cref="T:Microsoft.UI.Xaml.Controls.Grid"/>
        </member>
        <member name="M:Microsoft.UI.Xaml.Controls.GridWithExtensions.WithGridLayout``1(``0,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the info on <see cref="T:Microsoft.UI.Xaml.Controls.Grid"/>, and returns the reference
            of the argument <paramref name="this"/>.
            </summary>
            <typeparam name="TFrameworkElement">The type of the control.</typeparam>
            <param name="this">The <typeparamref name="TFrameworkElement"/>-typed control.</param>
            <param name="row">
            The row value that is used for <see cref="M:Microsoft.UI.Xaml.Controls.Grid.SetRow(Microsoft.UI.Xaml.FrameworkElement,System.Int32)"/>.
            </param>
            <param name="column">
            The row value that is used for <see cref="M:Microsoft.UI.Xaml.Controls.Grid.SetColumn(Microsoft.UI.Xaml.FrameworkElement,System.Int32)"/>.
            </param>
            <param name="rowSpan">
            The row value that is used for <see cref="M:Microsoft.UI.Xaml.Controls.Grid.SetRowSpan(Microsoft.UI.Xaml.FrameworkElement,System.Int32)"/>.
            </param>
            <param name="columnSpan">
            The row value that is used for <see cref="M:Microsoft.UI.Xaml.Controls.Grid.SetColumnSpan(Microsoft.UI.Xaml.FrameworkElement,System.Int32)"/>.
            </param>
            <returns>The reference that is same as the argument <paramref name="this"/>.</returns>
        </member>
        <member name="M:Microsoft.UI.Xaml.Controls.GridWithExtensions.WithRowDefinitionsCount(Microsoft.UI.Xaml.Controls.Grid,System.Int32)">
            <summary>
            Creates the specified number of new <see cref="T:Microsoft.UI.Xaml.Controls.RowDefinition"/> instances and adds into the target
            <see cref="T:Microsoft.UI.Xaml.Controls.Grid"/> instance.
            </summary>
            <param name="this">The <see cref="T:Microsoft.UI.Xaml.Controls.Grid"/> instance.</param>
            <param name="count">The number of <see cref="T:Microsoft.UI.Xaml.Controls.RowDefinition"/>s to be added.</param>
            <returns>The reference that is same as the argument <paramref name="this"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the argument <paramref name="count"/> is negative.
            </exception>
        </member>
        <member name="M:Microsoft.UI.Xaml.Controls.GridWithExtensions.WithColumnDefinitionsCount(Microsoft.UI.Xaml.Controls.Grid,System.Int32)">
            <summary>
            Creates the specified number of new <see cref="T:Microsoft.UI.Xaml.Controls.ColumnDefinition"/> instances and adds into the target
            <see cref="T:Microsoft.UI.Xaml.Controls.Grid"/> instance.
            </summary>
            <param name="this">The <see cref="T:Microsoft.UI.Xaml.Controls.Grid"/> instance.</param>
            <param name="count">The number of <see cref="T:Microsoft.UI.Xaml.Controls.ColumnDefinition"/>s to be added.</param>
            <returns>The reference that is same as the argument <paramref name="this"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the argument <paramref name="count"/> is negative.
            </exception>
        </member>
        <member name="T:Microsoft.UI.Xaml.Shapes.Line_DED029E7E2">
            <summary>
            Provides with extension deconstruction methods on this type.
            </summary>
        </member>
        <member name="M:Microsoft.UI.Xaml.Shapes.Line_DED029E7E2.Deconstruct(Microsoft.UI.Xaml.Shapes.Line,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Deconstruct the current instance into multiple values, which means you can use
            the value-tuple syntax to define your own deconstruction logic.
            </summary>
            <remarks>
            <para>
            For example,
            if you have defined a <see langword="static"/> deconstruction method <c>Deconstruct</c>
            in a <see langword="static class"/>, without any return value:
            <code><![CDATA[
            public static void Deconstruct(out string name, out int age)
            {
                name = Name;
                age = Age;
            }
            ]]></code>
            The following code will be legal.
            <code><![CDATA[
            // Use explicitly typed variables to get a deconstruction.
            (string name, int age) = student;
            
            // Or use the type inferring to omit the type of each variable having been deconstructed.
            var (name, age) = student;
            
            // Of course, you can also use the instance-method-like invocation to get values.
            student.Deconstruct(out string name, out int age);
            ]]></code>
            </para>
            <para>
            Static deconstruction methods also allow you using deconstruction patterns, like this:
            <code><![CDATA[
            if (student is (name: var name, age: >= 18))
            {
                Console.WriteLine(name);
            }
            ]]></code>
            </para>
            </remarks>
        </member>
    </members>
</doc>
