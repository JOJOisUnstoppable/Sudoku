<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.IO</name>
    </assembly>
    <members>
        <member name="T:Sudoku.IO.GridLibrary">
            <summary>
            Defines a <see cref="T:Sudoku.Concepts.Grid"/> library that stores in a file, using lines to describe puzzles.
            </summary>
            <seealso cref="T:Sudoku.Concepts.Grid"/>
        </member>
        <member name="F:Sudoku.IO.GridLibrary.Solver">
            <summary>
            Indicates the solver to verify the puzzle.
            </summary>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.#ctor(System.String,Sudoku.IO.GridLibraryIgnoringOption)">
            <summary>
            Initializes a <see cref="T:Sudoku.IO.GridLibrary"/> instance via the specified puzzle library file.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="ignoreOption">Ignoring option.</param>
            <exception cref="T:System.ArgumentException">Throws when the specified file path is invalid or the file does not exist.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Throws when the argument <paramref name="ignoreOption"/> is not defined in enumeration type.
            </exception>
        </member>
        <member name="P:Sudoku.IO.GridLibrary.FilePath">
            <summary>
            Indicates the file path.
            </summary>
        </member>
        <member name="P:Sudoku.IO.GridLibrary.IgnoringOption">
            <summary>
            Indicates the ignore option that will be used for ignoring on iteration of library file.
            </summary>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.Equals(Sudoku.IO.GridLibrary)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.GetPuzzlesAsync(System.Threading.CancellationToken)">
            <summary>
            Try to get puzzles from the target file, and parses them, returning the valid list of <see cref="T:Sudoku.Concepts.Grid"/> encapsulated instances.
            </summary>
            <param name="cancellationToken">The cancellation token that can cancel the operation.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> instance that encapsulates the current asynchronous operation,
            with an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Sudoku.Concepts.Grid"/> value to be returned.
            </returns>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.GetAsyncEnumerator(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.op_Equality(Sudoku.IO.GridLibrary,Sudoku.IO.GridLibrary)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.IO.GridLibrary.op_Inequality(Sudoku.IO.GridLibrary,Sudoku.IO.GridLibrary)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.IO.GridLibraryIgnoringOption">
            <summary>
            Indicates the option that will be used for ignoring <see cref="T:Sudoku.Concepts.Grid"/> puzzles in the target file.
            </summary>
            <seealso cref="T:Sudoku.Concepts.Grid"/>
        </member>
        <member name="F:Sudoku.IO.GridLibraryIgnoringOption.Never">
            <summary>
            Indicates the puzzle will be never ignored.
            </summary>
        </member>
        <member name="F:Sudoku.IO.GridLibraryIgnoringOption.NotUnique">
            <summary>
            Indicates the puzzle will be ignored when it is not unique.
            </summary>
        </member>
    </members>
</doc>
