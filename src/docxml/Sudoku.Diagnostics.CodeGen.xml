<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Diagnostics.CodeGen</name>
    </assembly>
    <members>
        <member name="T:Microsoft.CodeAnalysis.AttributeDataExtensions">
            <summary>
            Provides with extension methods on <see cref="T:Microsoft.CodeAnalysis.AttributeData"/>.
            </summary>
            <seealso cref="T:Microsoft.CodeAnalysis.AttributeData"/>
        </member>
        <member name="M:Microsoft.CodeAnalysis.AttributeDataExtensions.GetNamedArgument``1(Microsoft.CodeAnalysis.AttributeData,System.String,``0)">
            <summary>
            Try to get the named arguments in the specified attribute data.
            </summary>
            <typeparam name="T">The type of the named argument.</typeparam>
            <param name="this">The attribute data instance.</param>
            <param name="namedArgumentName">The named argument name.</param>
            <param name="defaultValue">Indicates the default value of the current named argument.</param>
            <returns>The found value.</returns>
        </member>
        <member name="T:Microsoft.CodeAnalysis.SymbolOutputInfo">
            <summary>
            Provides the basic information used for output a source code via an <see cref="T:Microsoft.CodeAnalysis.INamedTypeSymbol"/>.
            </summary>
            <param name="TypeName">The type name of the type symbol.</param>
            <param name="FullTypeName">The full type name of the type symbol.</param>
            <param name="NamespaceName">The namespace name that the type symbol belongs to.</param>
            <param name="GenericParameterList">
            The generic parameter list if the type symbol contains the type parameters.
            </param>
            <param name="GenericParameterListWithoutConstraint">
            The generic parameter list without the constraints if the type symbol contains the type parameters.
            </param>
            <param name="TypeKind">
            The type kind of the type symbol. All possible type kinds are:
            <list type="bullet">
            <item><see langword="class"/></item>
            <item><see langword="struct"/></item>
            <item><see langword="record class"/> (Denotes as a keyword <c>record</c>)</item>
            <item><see langword="record struct"/></item>
            </list>
            </param>
            <param name="ReadOnlyKeyword">
            Indicates whether the type symbol is a <see langword="struct"/>. If so, this property will keep the value
            as a modifier (i.e. keyword <see langword="readonly"/>) onto the members to implement.
            </param>
            <param name="InKeyword">
            Indicates whether the type symbol is a <see langword="struct"/>. If so, this property will keep the value
            as a modifier (i.e. keyword <see langword="in"/>) onto the parameters in methods.
            </param>
            <param name="NullableAnnotation">
            Indicates whether the type symbol is a <see langword="class"/>. If so, this property will keep the value
            as a nullable annotation <c>?</c> onto the parameter types.
            </param>
            <param name="IsGeneric">A <see cref="T:System.Boolean"/> value indicating whether the type is a generic type.</param>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SymbolOutputInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Provides the basic information used for output a source code via an <see cref="T:Microsoft.CodeAnalysis.INamedTypeSymbol"/>.
            </summary>
            <param name="TypeName">The type name of the type symbol.</param>
            <param name="FullTypeName">The full type name of the type symbol.</param>
            <param name="NamespaceName">The namespace name that the type symbol belongs to.</param>
            <param name="GenericParameterList">
            The generic parameter list if the type symbol contains the type parameters.
            </param>
            <param name="GenericParameterListWithoutConstraint">
            The generic parameter list without the constraints if the type symbol contains the type parameters.
            </param>
            <param name="TypeKind">
            The type kind of the type symbol. All possible type kinds are:
            <list type="bullet">
            <item><see langword="class"/></item>
            <item><see langword="struct"/></item>
            <item><see langword="record class"/> (Denotes as a keyword <c>record</c>)</item>
            <item><see langword="record struct"/></item>
            </list>
            </param>
            <param name="ReadOnlyKeyword">
            Indicates whether the type symbol is a <see langword="struct"/>. If so, this property will keep the value
            as a modifier (i.e. keyword <see langword="readonly"/>) onto the members to implement.
            </param>
            <param name="InKeyword">
            Indicates whether the type symbol is a <see langword="struct"/>. If so, this property will keep the value
            as a modifier (i.e. keyword <see langword="in"/>) onto the parameters in methods.
            </param>
            <param name="NullableAnnotation">
            Indicates whether the type symbol is a <see langword="class"/>. If so, this property will keep the value
            as a nullable annotation <c>?</c> onto the parameter types.
            </param>
            <param name="IsGeneric">A <see cref="T:System.Boolean"/> value indicating whether the type is a generic type.</param>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.TypeName">
            <summary>The type name of the type symbol.</summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.FullTypeName">
            <summary>The full type name of the type symbol.</summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.NamespaceName">
            <summary>The namespace name that the type symbol belongs to.</summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.GenericParameterList">
            <summary>
            The generic parameter list if the type symbol contains the type parameters.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.GenericParameterListWithoutConstraint">
            <summary>
            The generic parameter list without the constraints if the type symbol contains the type parameters.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.TypeKind">
            <summary>
            The type kind of the type symbol. All possible type kinds are:
            <list type="bullet">
            <item><see langword="class"/></item>
            <item><see langword="struct"/></item>
            <item><see langword="record class"/> (Denotes as a keyword <c>record</c>)</item>
            <item><see langword="record struct"/></item>
            </list>
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.ReadOnlyKeyword">
            <summary>
            Indicates whether the type symbol is a <see langword="struct"/>. If so, this property will keep the value
            as a modifier (i.e. keyword <see langword="readonly"/>) onto the members to implement.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.InKeyword">
            <summary>
            Indicates whether the type symbol is a <see langword="struct"/>. If so, this property will keep the value
            as a modifier (i.e. keyword <see langword="in"/>) onto the parameters in methods.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.NullableAnnotation">
            <summary>
            Indicates whether the type symbol is a <see langword="class"/>. If so, this property will keep the value
            as a nullable annotation <c>?</c> onto the parameter types.
            </summary>
        </member>
        <member name="P:Microsoft.CodeAnalysis.SymbolOutputInfo.IsGeneric">
            <summary>A <see cref="T:System.Boolean"/> value indicating whether the type is a generic type.</summary>
        </member>
        <member name="M:Microsoft.CodeAnalysis.SymbolOutputInfo.FromSymbol(Microsoft.CodeAnalysis.INamedTypeSymbol,System.Boolean)">
            <summary>
            Creates a <see cref="T:Microsoft.CodeAnalysis.SymbolOutputInfo"/> instance via the specified <paramref name="symbol"/>,
            and set a <see cref="T:System.Boolean"/> value indicating whether the method will check whether the type
            is a <see langword="ref struct"/>.
            </summary>
            <param name="symbol">The type symbol.</param>
            <param name="checkNotRefStruct">
            A <see cref="T:System.Boolean"/> value indicating whether the method will check whether the type
            is a <see langword="ref struct"/>.
            </param>
            <returns>The <see cref="T:Microsoft.CodeAnalysis.SymbolOutputInfo"/> instance.</returns>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoBePinnableGenerator">
            <summary>
            Defines a source generator that generates the source code on implementation
            for the method <c>GetPinnableReference</c>.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoBePinnableGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator">
            <summary>
            Defines a source generator that generates deconstruction methods of a type.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.ExpressionPattern">
            <summary>
            Defines the pattern that matches for an expression.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.GatherAssemblyAttributes(Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.IAssemblySymbol,System.Collections.Generic.ICollection{System.ValueTuple{System.Boolean,Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.AttributeData}})">
            <summary>
            Get for assembly-targeted attributes on generation.
            </summary>
            <param name="attributeTypeSymbol">The attribute type symbol.</param>
            <param name="assembly">The assembly symbol.</param>
            <param name="collection">The target collection to store the results.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.GetForExtension(Microsoft.CodeAnalysis.AttributeData[],System.String,System.String)">
            <summary>
            Gets the raw code parts for extension deconstruction methods via the specified list of attributes data.
            </summary>
            <param name="attributesData">The attributes data, with the corresponding location.</param>
            <param name="genericParameterListWithoutConstraint">The generic parameter list.</param>
            <param name="fullTypeNameWithoutConstraint">The full type name, without the generic constraint.</param>
            <returns>The collection of raw code parts for extension deconstruction methods.</returns>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.GetForInstance(Microsoft.CodeAnalysis.INamedTypeSymbol,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.AttributeData})">
            <summary>
            Gets the raw code parts for instance deconstruction methods via the specified list of attributes data.
            </summary>
            <param name="type">The type to be used.</param>
            <param name="readOnlyKeyword">The read-only keyword token.</param>
            <param name="attributesData">The attributes data, and the corresponding location.</param>
            <returns>The collection of raw code parts for instance deconstruction methods.</returns>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.Receiver">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.Receiver.#ctor(System.Threading.CancellationToken)">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.Receiver.CancellationToken">
            <summary>The cancellation token to cancel the operation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.Receiver.Collection">
            <summary>
            Indicates the result collection.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoDeconstructionGenerator.Receiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoImplementsComparableGenerator">
            <summary>
            Defines a source generator that generates the source code on implementation for the type <see cref="T:System.IComparable`1"/>.
            </summary>
            <seealso cref="T:System.IComparable`1"/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoImplementsComparableGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoImplementsDefaultableGenerator">
            <summary>
            Defines a source generator that can generate the source code
            that implements the interface type <c><![CDATA[IDefaultable<T>]]></c>.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoImplementsDefaultableGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoImplementsEnumerableGenerator">
            <summary>
            Defines a source generator that generates the source code on implementation for the type <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <seealso cref="T:System.Collections.Generic.IEnumerable`1"/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoImplementsEnumerableGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverloadsComparisonOperatorsGenerator">
            <summary>
            Defines a source generator that generates the source code for overloading on comparison operators
            <c><![CDATA[>]]></c>, <c><![CDATA[<]]></c>, <c><![CDATA[>=]]></c> and <c><![CDATA[<=]]></c>.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverloadsComparisonOperatorsGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverloadsEqualityOperatorsGenerator">
            <summary>
            Defines a source generator that generates the code that overloads the <c><see langword="operator"/> ==</c>
            or <c><see langword="operator"/> !=</c>.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverloadsEqualityOperatorsGenerator.Initialize(Microsoft.CodeAnalysis.IncrementalGeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator">
            <summary>
            Defines a source generator that generates for the code that is for the overriden of a type.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator.Receiver">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator.Receiver.#ctor(System.Threading.CancellationToken)">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator.Receiver.CancellationToken">
            <summary>The cancellation token to cancel the operation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator.Receiver.Collection">
            <summary>
            Indicates the result collection.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesEqualsGenerator.Receiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator">
            <summary>
            Defines a source generator that generates for the code that is for the overriden of a type.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator.Receiver">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator.Receiver.#ctor(System.Threading.CancellationToken)">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator.Receiver.CancellationToken">
            <summary>The cancellation token to cancel the operation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator.Receiver.Collection">
            <summary>
            Indicates the result collection.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesGetHashCodeGenerator.Receiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator">
            <summary>
            Defines a source generator that generates for the code that is for the overriden of a type.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator.Receiver">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator.Receiver.#ctor(System.Threading.CancellationToken)">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator.Receiver.CancellationToken">
            <summary>The cancellation token to cancel the operation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator.Receiver.Collection">
            <summary>
            Indicates the result collection.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.AutoOverridesToStringGenerator.Receiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator">
            <summary>
            Indicates the generator that generates the parameterless constructor on <see langword="struct"/> types,
            to disallow any invokes for them from user.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator.Receiver">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator.Receiver.#ctor(System.Threading.CancellationToken)">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator.Receiver.CancellationToken">
            <summary>The cancellation token to cancel the operation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator.Receiver.Collection">
            <summary>
            Indicates the result collection.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.DisableParameterlessConstructorGenerator.Receiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator">
            <summary>
            Defines a source generator that generates the method and the corresponding values,
            forming a <see langword="switch"/> expression.
            </summary>
            <remarks>This source generator does not support generic types.</remarks>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver.AttributeDataComparerDistinctByKey">
            <summary>
            Defines a comparer that compares for the inner key.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver.AttributeDataComparerDistinctByKey.Equals(Microsoft.CodeAnalysis.AttributeData,Microsoft.CodeAnalysis.AttributeData)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver.AttributeDataComparerDistinctByKey.GetHashCode(Microsoft.CodeAnalysis.AttributeData)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver.#ctor(System.Threading.CancellationToken)">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver.CancellationToken">
            <summary>The cancellation token to cancel the operation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver.Collection">
            <summary>
            Indicates the result collection.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Receiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Tuple">
            <summary>
            Defines a tuple that stores the basic information for a generation operation unit.
            </summary>
            <param name="TypeSymbol">Indicates a type symbol.</param>
            <param name="Key">Indicates a key of the generation.</param>
            <param name="RootAttributeData">The attribute data for the type.</param>
            <param name="ListOfFieldAttributesData">Indicates a list of field attributes data.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Tuple.#ctor(Microsoft.CodeAnalysis.INamedTypeSymbol,System.String,Microsoft.CodeAnalysis.AttributeData,System.Collections.Generic.IEnumerable{System.ValueTuple{Microsoft.CodeAnalysis.IFieldSymbol,Microsoft.CodeAnalysis.AttributeData}})">
            <summary>
            Defines a tuple that stores the basic information for a generation operation unit.
            </summary>
            <param name="TypeSymbol">Indicates a type symbol.</param>
            <param name="Key">Indicates a key of the generation.</param>
            <param name="RootAttributeData">The attribute data for the type.</param>
            <param name="ListOfFieldAttributesData">Indicates a list of field attributes data.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Tuple.TypeSymbol">
            <summary>Indicates a type symbol.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Tuple.Key">
            <summary>Indicates a key of the generation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Tuple.RootAttributeData">
            <summary>The attribute data for the type.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.EnumSwitchExpressionGenerator.Tuple.ListOfFieldAttributesData">
            <summary>Indicates a list of field attributes data.</summary>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator">
            <summary>
            Indicates the generator that generates the default overriden methods in a <see langword="ref struct"/>.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.OnTopLevel(Microsoft.CodeAnalysis.GeneratorExecutionContext,System.ValueTuple{Microsoft.CodeAnalysis.INamedTypeSymbol,System.Boolean,System.Boolean},Microsoft.CodeAnalysis.Compilation)">
            <summary>
            Generates for top-levelled <see langword="ref struct"/> types.
            </summary>
            <param name="context">The context.</param>
            <param name="tuple">The tuple.</param>
            <param name="compilation">The compilation instance.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.OnNested(Microsoft.CodeAnalysis.GeneratorExecutionContext,System.ValueTuple{Microsoft.CodeAnalysis.INamedTypeSymbol,System.Boolean,System.Boolean},Microsoft.CodeAnalysis.Compilation)">
            <summary>
            Generates for nested-levelled <see langword="ref struct"/> types.
            </summary>
            <param name="context">The context.</param>
            <param name="tuple">The tuple.</param>
            <param name="compilation">The compilation instance.</param>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.Receiver">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.Receiver.#ctor(System.Threading.CancellationToken)">
            <summary>
            The inner syntax context receiver instance.
            </summary>
            <param name="CancellationToken">The cancellation token to cancel the operation.</param>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.Receiver.CancellationToken">
            <summary>The cancellation token to cancel the operation.</summary>
        </member>
        <member name="P:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.Receiver.Collection">
            <summary>
            Indicates the result collection.
            </summary>
        </member>
        <member name="M:Sudoku.Diagnostics.CodeGen.Generators.RefStructOverridensGenerator.Receiver.OnVisitSyntaxNode(Microsoft.CodeAnalysis.GeneratorSyntaxContext)">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Diagnostics.CodeGen.Shortcuts">
            <summary>
            Defines the shortcuts of the source generators.
            </summary>
        </member>
        <member name="F:Sudoku.Diagnostics.CodeGen.Constants.VersionValue">
            <summary>
            Indicates the version of this project.
            </summary>
        </member>
    </members>
</doc>
