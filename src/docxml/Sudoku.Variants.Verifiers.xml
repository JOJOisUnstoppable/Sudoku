<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sudoku.Variants.Verifiers</name>
    </assembly>
    <members>
        <member name="T:Sudoku.Variants.Verifiers.ConsecutiveSudoku">
            <summary>
            Defines a verifier that checks for consecutive border bars.
            </summary>
            <param name="TargetGrid"><inheritdoc path="/param[@name='TargetGrid']"/></param>
            <param name="Identifier"><inheritdoc path="/param[@name='Identifier']"/></param>
        </member>
        <member name="M:Sudoku.Variants.Verifiers.ConsecutiveSudoku.#ctor(Sudoku.Concepts.Grid@,Sudoku.Presentation.Identifier)">
            <summary>
            Defines a verifier that checks for consecutive border bars.
            </summary>
            <param name="TargetGrid"><inheritdoc path="/param[@name='TargetGrid']"/></param>
            <param name="Identifier"><inheritdoc path="/param[@name='Identifier']"/></param>
        </member>
        <member name="M:Sudoku.Variants.Verifiers.ConsecutiveSudoku.Verify">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Variants.Verifiers.KropkiSudoku">
            <summary>
            Defines a verifier that checks for Kropki dots.
            </summary>
            <param name="TargetGrid"><inheritdoc path="/param[@name='TargetGrid']"/></param>
            <param name="Identifier"><inheritdoc path="/param[@name='Identifier']"/></param>
        </member>
        <member name="M:Sudoku.Variants.Verifiers.KropkiSudoku.#ctor(Sudoku.Concepts.Grid@,Sudoku.Presentation.Identifier)">
            <summary>
            Defines a verifier that checks for Kropki dots.
            </summary>
            <param name="TargetGrid"><inheritdoc path="/param[@name='TargetGrid']"/></param>
            <param name="Identifier"><inheritdoc path="/param[@name='Identifier']"/></param>
        </member>
        <member name="M:Sudoku.Variants.Verifiers.KropkiSudoku.Verify">
            <inheritdoc/>
        </member>
        <member name="T:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1">
            <summary>
            Defines a verifier that can get all possbible variant elements in a solution grid.
            </summary>
            <typeparam name="TNode">The type of the node.</typeparam>
            <param name="TargetGrid">Indicates the target grid used.</param>
            <param name="Identifier">Indicates the identifier used.</param>
        </member>
        <member name="M:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1.#ctor(Sudoku.Concepts.Grid@,Sudoku.Presentation.Identifier)">
            <summary>
            Defines a verifier that can get all possbible variant elements in a solution grid.
            </summary>
            <typeparam name="TNode">The type of the node.</typeparam>
            <param name="TargetGrid">Indicates the target grid used.</param>
            <param name="Identifier">Indicates the identifier used.</param>
        </member>
        <member name="P:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1.TargetGrid">
            <summary>Indicates the target grid used.</summary>
        </member>
        <member name="P:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1.Identifier">
            <summary>Indicates the identifier used.</summary>
        </member>
        <member name="M:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1.ThrowIfNotSolved">
            <summary>
            To verify whether the target puzzle is solved.
            </summary>
            <exception cref="T:System.InvalidOperationException">Throws when the puzzle is not solved.</exception>
        </member>
        <member name="M:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1.Verify">
            <summary>
            Try to verify the current grid and get all possible view nodes.
            Put <see cref="M:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1.ThrowIfNotSolved"/> into the first place if you want to verify the validity of the target puzzle.
            </summary>
            <returns>All view nodes.</returns>
            <seealso cref="M:Sudoku.Variants.Verifiers.VariantGridElementVerifier`1.ThrowIfNotSolved"/>
        </member>
    </members>
</doc>
