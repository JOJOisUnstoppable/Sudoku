namespace SudokuStudio.ViewModels;

/// <summary>
/// Represents a binding context.
/// </summary>
public abstract class BindingContext : INotifyPropertyChanged
{
	/// <summary>
	/// Initializes an instance derived from current type, with default triggering event handler.
	/// </summary>
	protected BindingContext()
	{
	}


	/// <inheritdoc/>
	public event PropertyChangedEventHandler? PropertyChanged;


	/// <summary>
	/// The default behavior to trigger event <see cref="PropertyChanged"/> event.
	/// </summary>
	/// <param name="propertyName">
	/// Indicates the property that triggers the event, represented as its name.
	/// You can just keep this argument be <see langword="null"/> value; this value will be automatically generated by runtime.
	/// </param>
	protected virtual void OnPropertyChanged([CallerMemberName] string? propertyName = null)
		=> PropertyChanged?.Invoke(this, new(propertyName));
}
