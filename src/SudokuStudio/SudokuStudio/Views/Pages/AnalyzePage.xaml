<Page
	x:Class="SudokuStudio.Views.Pages.AnalyzePage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:c="using:SudokuStudio.Views.Controls"
	xmlns:cmd="using:SudokuStudio.Interaction.Commands"
	xmlns:cvt="using:SudokuStudio.Interaction.Conversions"
	xmlns:m="using:SudokuStudio.Markup"
	xmlns:p="using:SudokuStudio.Views.Pages"
	xmlns:pa="using:SudokuStudio.Views.Pages.Analyze"
	mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=p:AnalyzePage}">
	<Page.Resources>
		<Style x:Key="MenuBarBorderStyle" TargetType="Border">
			<Setter Property="CornerRadius" Value="5" />
			<Setter Property="BorderBrush" Value="#EAEAEA" />
			<Setter Property="BorderThickness" Value="2" />
			<Setter Property="Margin" Value="0,10" />
		</Style>
	</Page.Resources>

	<ScrollViewer VerticalScrollBarVisibility="Hidden">
		<StackPanel Orientation="Vertical" Margin="{m:Thickness Base={StaticResource NavigationViewHeaderMargin},Top=10,Right=56}" Spacing="10">
			<!--Main menu-->
			<Border Style="{StaticResource MenuBarBorderStyle}">
				<Grid RowDefinitions="*,*">
					<NavigationView
						x:Name="CommandBarView" Grid.Row="0" PaneDisplayMode="Top" IsBackButtonVisible="Collapsed" IsSettingsVisible="False"
						IsTabStop="False" IsPaneOpen="True" IsPaneToggleButtonVisible="False" AlwaysShowHeader="False"
						Loaded="CommandBarView_Loaded" SelectionChanged="CommandBarView_SelectionChanged" ItemInvoked="CommandBarView_ItemInvoked">
						<NavigationView.MenuItems>
							<NavigationViewItem x:Name="BasicOperationBar" Content="{m:R Key=AnalyzePage_PivotItem_BasicOperations}" />
						</NavigationView.MenuItems>

						<Frame x:Name="CommandBarFrame" Navigated="CommandBarFrame_Navigated" BorderBrush="Transparent" />
					</NavigationView>
					<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="#EAEAEA">
						<CommandBar DefaultLabelPosition="Right" HorizontalAlignment="Left" IsSticky="True" OverflowButtonVisibility="Collapsed">
							<AppBarToggleButton
								Label="{m:R Key=AnalyzePage_ToggleDisplayingCandidates}"
								Icon="{x:Bind cvt:SymbolIconConversion.GetSymbolViaCandidateVisibility(SudokuPane.DisplayCandidates),Mode=OneWay}"
								IsChecked="{x:Bind SudokuPane.DisplayCandidates,Mode=TwoWay}" />
							<AppBarButton
								CommandParameter="{x:Bind SudokuPane}" Label="{m:R Key=AnalyzePage_FixGrid}" Icon="Pin"
								IsEnabled="{x:Bind cvt:SudokuGridConversion.GetFixedButtonAvailability(SudokuPane.Puzzle),Mode=OneWay}">
								<AppBarButton.Command>
									<cmd:FixGridCommand />
								</AppBarButton.Command>
							</AppBarButton>
							<AppBarButton
								CommandParameter="{x:Bind SudokuPane}" Label="{m:R Key=AnalyzePage_UnfixGrid}" Icon="UnPin"
								IsEnabled="{x:Bind cvt:SudokuGridConversion.GetUnfixedButtonAvailability(SudokuPane.Puzzle),Mode=OneWay}">
								<AppBarButton.Command>
									<cmd:UnfixGridCommand />
								</AppBarButton.Command>
							</AppBarButton>
							<AppBarButton
								x:Name="AnalyzeButton" x:FieldModifier="internal" CommandParameter="{x:Bind}" Icon="Find"
								Label="{m:R Key=AnalyzePage_AnalyzeButton}"
								IsEnabled="{x:Bind cvt:AnalyzeConversion.GetIsEnabled(SudokuPane.Puzzle),Mode=OneWay}">
								<AppBarButton.Command>
									<cmd:AnalyzeCommand />
								</AppBarButton.Command>
							</AppBarButton>
						</CommandBar>
					</Border>
				</Grid>
			</Border>

			<!--Sudoku grid and tab pages-->
			<Grid x:Name="SudokuGridAndAnalyzePagesContainer" ColumnDefinitions="Auto,*" Margin="0,0,20,0">
				<!--Main sudoku grid control-->
				<c:SudokuPane
					x:Name="SudokuPane" x:FieldModifier="internal" Width="610" Height="610" Margin="0,0,40,0" BasePage="{x:Bind}"
					HorizontalAlignment="Left" VerticalAlignment="Top" SelectedCell="-1"
					ValueFont="Cascadia Code" PencilmarkFont="Cascadia Code" CoordinateLabelFont="Cascadia Code"
					BabaGroupLabelFont="Times New Roman" CoordinateLabelDisplayKind="RxCy" CoordinateLabelDisplayMode="FourDirection"
					ValueFontScale=".85" PencilmarkFontScale=".3" CoordinateLabelFontScale=".4" HighlightCandidateCircleScale=".9"
					HighlightBackgroundOpacity=".15" BabaGroupLabelFontScale=".6" ChainStrokeThickness="1.5"
					StrongLinkDashStyle="{m:DashArray Expression=''}" WeakLinkDashStyle="{m:DashArray Expression='3,1.5'}"
					CycleLikeLinkDashStyle="{m:DashArray Expression=''}" OtherLinkDashStyle="{m:DashArray Expression='3,3'}"
					UseDifferentColorToDisplayDeltaDigits="True" DisplayCandidates="True" DisplayCursors="True"
					CursorBackgroundColor="#200000FF" GivenColor="Black" ModifiableColor="Blue" PencilmarkColor="#646464"
					BabaGroupLabelColor="Red" BorderColor="Black" CoordinateLabelColor="#646464" LinkColor="Red"
					DeltaCandidateColor="#FFB9B9" DeltaCellColor="Red"
					Puzzle="{m:Grid Text='..38......8..16...5..+3.29.+89.....23..2..3..4.+346.+2...7..72....1...46..8......15..:554'}" />

				<!--Analyze data-->
				<Grid Grid.Column="1">
					<StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
						<ProgressRing
							x:Name="AnalyzeProgress" Width="100" Height="100" IsIndeterminate="False" Value="{x:Bind ProgressPercent,Mode=OneWay}"
							Visibility="{x:Bind cvt:AnalyzeConversion.GetProgressRingVisibility(IsAnalyzerLaunched,IsGathererLaunched),Mode=OneWay}" />
						<TextBlock
							x:Name="AnalyzeProgressLabel" x:FieldModifier="internal"
							Visibility="{x:Bind cvt:AnalyzeConversion.GetProgressRingVisibility(IsAnalyzerLaunched,IsGathererLaunched),Mode=OneWay}" />
					</StackPanel>
					<TabView
						x:Name="AnalyzeTabs" IsAddTabButtonVisible="False" TabWidthMode="Equal" HorizontalAlignment="Left" Height="600"
						Visibility="{x:Bind cvt:AnalyzeConversion.GetAnalyzeTabsVisibility(IsAnalyzerLaunched,IsGathererLaunched),Mode=OneWay}">
						<TabViewItem Header="{m:R Key=AnalyzePage_TechniquesTable}" IsClosable="False">
							<TabViewItem.IconSource>
								<SymbolIconSource Symbol="Flag" />
							</TabViewItem.IconSource>

							<pa:Summary x:Name="SummaryTabPage" Margin="10" BasePage="{x:Bind}" />
						</TabViewItem>
						<TabViewItem Header="{m:R Key=AnalyzePage_StepDetail}" IsClosable="False">
							<TabViewItem.IconSource>
								<SymbolIconSource Symbol="ShowResults" />
							</TabViewItem.IconSource>

							<pa:SolvingPath Margin="10" BasePage="{x:Bind}" />
						</TabViewItem>
						<TabViewItem Header="{m:R Key=AnalyzePage_LiveCharts}" IsClosable="False">
							<TabViewItem.IconSource>
								<SymbolIconSource Symbol="ZeroBars" />
							</TabViewItem.IconSource>

							<pa:PuzzleGraphs Margin="10" BasePage="{x:Bind}" />
						</TabViewItem>
						<TabViewItem Header="{m:R Key=AnalyzePage_AllStepsInCurrentGrid}" IsClosable="False">
							<TabViewItem.IconSource>
								<SymbolIconSource Symbol="Shuffle" />
							</TabViewItem.IconSource>

							<pa:GridGathering x:Name="GatherTabPage" x:FieldModifier="internal" Margin="10" BasePage="{x:Bind}" />
						</TabViewItem>
					</TabView>
				</Grid>
			</Grid>

			<StackPanel Orientation="Vertical" Spacing="40" Margin="0,120,20,60">
				<!--Basic information of the puzzle-->
				<TextBlock Text="{m:R Key=AnalyzePage_PuzzleData}" Style="{StaticResource SubtitleTextBlockStyle}" />
				<TextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">
					<Bold>
						<Run Text="{m:R Key=AnalyzePage_GivensCount}" />
					</Bold>
					<LineBreak />
					<Run Text="{x:Bind cvt:SudokuGridConversion.GetPuzzleHintsCount(SudokuPane.Puzzle),Mode=OneWay}" />
					<LineBreak />
					<LineBreak />
					<Bold>
						<Run Text="{m:R Key=AnalyzePage_PuzzleCode}" />
					</Bold>
					<LineBreak />
					<Run Text="{x:Bind cvt:SudokuGridConversion.GetPuzzleCode(SudokuPane.Puzzle),Mode=OneWay}" />
					<LineBreak />
					<LineBreak />
					<Bold>
						<Run Text="{m:R Key=AnalyzePage_Uniqueness}" />
					</Bold>
					<LineBreak />
					<Run Text="{x:Bind cvt:SudokuGridConversion.GetPuzzleUniqueness(SudokuPane.Puzzle),Mode=OneWay}" />
					<LineBreak />
					<LineBreak />
					<Bold>
						<Run Text="{m:R Key=AnalyzePage_IsMinimal}" />
					</Bold>
					<LineBreak />
					<Run Text="{x:Bind cvt:SudokuGridConversion.GetIsMinimal(SudokuPane.Puzzle),Mode=OneWay}" />
				</TextBlock>
			</StackPanel>
		</StackPanel>
	</ScrollViewer>
</Page>
