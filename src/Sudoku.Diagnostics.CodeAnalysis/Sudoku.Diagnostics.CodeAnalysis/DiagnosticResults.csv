ID,Severity,Category,Title,Message Format
SD0101,Error,StaticTechniqueProperties,A property named 'Properties' expected.,
SD0102,Error,StaticTechniqueProperties,The property 'Properties' must be public.,
SD0103,Error,StaticTechniqueProperties,The property 'Properties' must be static.,
SD0104,Error,StaticTechniqueProperties,The property 'Properties' must be read-only.,
SD0105,Error,StaticTechniqueProperties,The property 'Properties' has a wrong type.,The property 'Properties' must be of type 'Sudoku.Solving.Manual.TechiqueProperties'.
SD0106,Error,StaticTechniqueProperties,The property 'Properties' can't be null.,The property 'Properties' can't be null; try to remove the nullable annotation '?'.
SD0107,Error,StaticTechniqueProperties,The property 'Properties' must contain an initializer.,
SD0108,Error,StaticTechniqueProperties,The property 'Properties' must be initialized by a new clause.,The property 'Properties' must be initialized by a new clause; try to initialize it with 'new(...)' or 'new TechniqueProperties(...)' instead.
SD0201,Error,ResourceDictionary,The specified key can't be found in the resource dictionary.,The specified key '{0}' can't be found in the resource dictionary; please check whether your input is valid.
SD0202,Error,Usage,The specified method can't be found and called.,"The specified method '{0}' can't be found and called; all supported methods are 'Serialize', 'Deserialize' and 'ChangeLanguage'."
SD0203,Error,ResourceDictionary,The number of arguments mismatched in this dynamically invocation.,"The method '{0}' expects {1} argument(s), but your input contains {2} argument(s)."
SD0204,Error,Usage,The argument type mismatched in this dynamically invocation.,"This argument in the method '{0}' must be of type '{1}', but the actual type is '{2}'."
SD0205,Error,Usage,"The method returns void, but you make it an rvalue expression.","The method '{0}' returns void, but you make it a rvalue expression."
SD0206,Error,ResourceDictionary,The specified dynamic invocation method doesn't exist.,The dynamic invocation method name '{0}' doesn't exist.
SD0301,Error,Usage,The member can't be invoked because they are reserved.,The member '{0}' can't be invoked because they are reserved.
SD0302,Info,Usage,Replace 'Count == 0' or 'Count != 0' with 'IsEmpty' or '!IsEmpty'.,Replace '{0}.Count {1} 0' with '{2}{0}.IsEmpty'.
SD0303,Warning,Performance,Please use the default-value field to avoid instantiation.,Please use the read-only field '{0}.{1}' to avoid instantiation.
SD0304,Warning,Performance,Please use the specific property to simplify the invocation.,Please use the property '{2}{0}.{1}' to simplify the invocation.
SD0305,Error,Usage,The input value in this initializer is invalid.,
SD0306,Warning,Usage,The remove expression in the initializer following with the current constructor has no effect.,The remove expression in the initializer following with the constructor '{0}.{0}()' has no effect.
SD0307,Info,Usage,The expression can be simplified.,The expression can be simplified to '{0}'.
SD0308,Warning,Usage,The initializer contains the duplicate value.,The initializer contains the duplicate value '{0}'.
SD0309,Info,Usage,'stackalloc' or 'new' expression is unnecessary; Please use object initializer instead.,'{0}' expression is unnecessary; Please use object initializer instead.
SD0310,Info,Usage,"Please add the format string as the argument into the method invocation of SudokuGrid, such as '.' for default case, or '#' for intelligent-handling case.",
SD0311,Error,Usage,Invalid format string in 'SudokuGrid.ToString'.,Invalid format string in SudokuGrid.ToString.
SD0401,Warning,Usage,Please use nameof expression instead.,
SD0402,Warning,Usage,This attribute must contain the specified number of parameters.,'{0}' must contain at least {1} parameters.
SS0101,Warning,Performance,Please add 'ToString' method invocation to the interpolation part in order to prevent any box and unbox operations.,
SS0102,Info,Usage,Unnecessary interpolation leading character '$'.,
SS0201,Warning,Performance,"The result of the expression '.ctor(void*, int)' can't be the return value as any methods.","The result of the expression '{0}.{0}(void*, int)' can't be the return value as any methods."
SS0301,Warning,Performance,Replace 'Count() >=(or >) value' with 'Take(value).Count() >=(or >) value'.,Replace 'Count() {1} {0}' with 'Take({0}).Count() {1} {0}'.
SS0401,Error,Usage,Can't apply the operator here because the type is closed enum.,Can't apply 'operator {0}' here because the type is closed enum.
SS0402,Warning,Design,The enum field must holds a flag value if the enum is marked 'FlagsAttribute'.,
SS0403,Warning,Design,The enum field must holds a explicitly-wroten value if the enum is marked 'FlagsAttribute'.,
SS0501,Warning,Design,Deconstruction methods should contain at least 2 parameters.,
SS0502,Warning,Design,Deconstruction methods must be instance ones.,
SS0503,Warning,Design,Deconstruction methods must return void.,
SS0504,Warning,Design,Deconstruction methods must be public.,
SS0505,Warning,Design,All parameters in deconstruction methods should be out parameters.,
SS0506,Warning,Usage,"The assignment statement isn't a simple variable one, but an expression.",The expression '{0}' should be a simple variable in deconstruction method assignments.
SS0507,Info,Usage,The parameter should be corresponded to a certain instance field or instance property in this type.,The parameter '{0}' should be corresponded to a certain instance field or instance property in this type.
SS0508,Info,Design,"The type has already contained a deconstruction method that holds the same number of parameters of this method, so this method won't work.",
SS0601,Info,Design,Unnecessary explicit type pattern.,
SS0602,Info,Design,The pattern can be simplify to 'is null'.,
SS0603,Info,Design,The pattern can be simplify to 'is not null'.,
SS0604,Warning,Design,Unnecessary constant pattern for the variable of the same type.,Unnecessary constant pattern for the variable of the same type; try to use '{0} {1} {2}' instead.
SS0605,Info,Design,The nullable value type checking expression will be suggested to convert to constant pattern.,The nullable value type checking expression will be suggested to convert to constant pattern: '{0} {1} {2}'.
SS0606,Info,Design,The expression can be simplifiy via using positional pattern matching.,The expression can be simplifiy to the positional pattern matching: '{0}'.
SS0607,Info,Design,This discard can be omitted in the current positional pattern.,This discard '{0}: _' can be omitted in the current positional pattern.
SS0608,Warning,Design,The positional pattern may not allow because bounded deconstruction method is a parameterless or single-parameter one.,The positional pattern '{0}' may not allow because bounded deconstruction method is a parameterless or single-parameter one.
SS0609,Warning,Design,The positional subpattern is redundant.,The positional subpattern '{0}' is redundant.
SS0610,Warning,Design,"The positional pattern judges nothing; if you want to judge whether the object is not null, please use empty property pattern '{ }' or 'not null' instead.","The positional pattern '{0}' judges nothing; if you want to judge whether the object is not null, please use empty property pattern '{1}' or '{2}' instead."
SS0611,Warning,Design,The discard in the 'var' pattern may not take any effects.,The discard in the 'var' pattern '{0}' may not take any effects.
SS0612,Warning,Design,It doesn't take any effects that all subpatterns use discards in a 'var' deconstruction pattern.,
SS0613,Warning,Design,The discard pattern in this property pattern doesn't judge anything; please remove this clause.,The discard pattern in this property pattern '{0}' doesn't judge anything; please remove this clause.
SS0614,Warning,Design,"The empty-brace property pattern '{ }' will take effects only in nullable types, so we don't suggest you use the pattern to judge non-nullable types; please change the clause to var pattern or other valid patterns, or just remove it.",
SS0615,Warning,Design,"Please use '{ }' instead of '!= null', 'not null' or 'HasValue' in nullable value types.",
SS0616,Warning,Design,Please use '{ }' or 'not null' instead of '!= null' in nullable reference types.,
SS0617,Warning,Design,Unncessary operator 'is' to determine the range of that value of same type.,
SS0618,Info,Design,Pattern 'not null' is redundant; please remove it.,
SS0619,Info,Design,Combination constant pattern 'null' and the keyword 'or' is redundant; please remove it.,
SS0620,Info,Design,Keyword 'not' followed with relation pattern is redundant; please negate the operator directly instead.,
SS0621,Info,Design,Available simplification for property patterns connected with keyword 'and' to a single property pattern.,
SS0622,Info,Design,Available simplification for property patterns connected with keyword 'or' to a single property pattern.,
SS0623,Warning,Design,Repeated property path; try to integrate to one using keyword 'and' as the connection.,
SS0624,Info,Design,Available simplification for extended property patterns.,Available simplification for extended property patterns: '{0}'.
SS0625,Warning,Design,Repeated property path in the extended property pattern; try to integrate to one using keyword 'and' as the connection.,
SS0626,Warning,Design,Keyword 'not' repeats; A pair of keyword 'not' can be omitted.,
SS0701,Info,Design,The expression can be simplified to using compound null-coalesce operator '??='.,The expression can be simplified to using compound null-coalesce expression '{0} ??= {1}'.
SS0702,Info,Design,The expression can be simplified to using null-coalescing operator '??'.,The expression can be simplified to using null-coalescing operator: '{0} ?? {1}'.
SS0703,Info,Design,Unncessary null-conditional operator '?'.,
SS0704,Info,Design,Unncessary null-forgiving operator '!'.,
SS0705,Info,Design,Using compound null-coalesce operator '??=' is unncessary.,"Using compound null-coalesce operator '??=' is unncessary, because the left-side expression '{0}' is not null here."
SS9001,Info,Performance,Available prepositional iteration condition expression.,
SS9002,Info,Usage,Redundant array creation statement.,
SS9003,Warning,Design,Unncessary discards.,
SS9004,Error,Design,"Due to recursive member in the record type, invoking synthesized method ToString will cause stack overflowing.",
